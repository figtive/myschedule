# Generated by Django 2.2 on 2019-04-08 14:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=40)),
                ('sks', models.IntegerField(blank=True)),
                ('term', models.IntegerField(blank=True)),
                ('curriculum', models.CharField(blank=True, max_length=16)),
                ('prerequisites', models.ManyToManyField(to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_classes', to='courses.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('course_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='courses.CourseClass')),
            ],
        ),
        migrations.AddField(
            model_name='courseclass',
            name='lecturers',
            field=models.ManyToManyField(to='courses.Lecturer'),
        ),
    ]
