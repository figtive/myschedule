/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./static/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/@fullcalendar/core/main.css":
/*!**************************************************!*\
  !*** ./node_modules/@fullcalendar/core/main.css ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../mini-css-extract-plugin/dist/loader.js!../../css-loader/dist/cjs.js!../../sass-loader/lib/loader.js!./main.css */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/core/main.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/core/main.css?");

/***/ }),

/***/ "./node_modules/@fullcalendar/core/main.js":
/*!*************************************************!*\
  !*** ./node_modules/@fullcalendar/core/main.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\nFullCalendar Core Package v4.0.2\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n(function (global, factory) {\n   true ? factory(exports) : undefined;\n})(this, function (exports) {\n  'use strict'; // Creating\n  // ----------------------------------------------------------------------------------------------------------------\n\n  var elementPropHash = {\n    className: true,\n    colSpan: true,\n    rowSpan: true\n  };\n  var containerTagHash = {\n    '<tr': 'tbody',\n    '<td': 'tr'\n  };\n\n  function createElement(tagName, attrs, content) {\n    var el = document.createElement(tagName);\n\n    if (attrs) {\n      for (var attrName in attrs) {\n        if (attrName === 'style') {\n          applyStyle(el, attrs[attrName]);\n        } else if (elementPropHash[attrName]) {\n          el[attrName] = attrs[attrName];\n        } else {\n          el.setAttribute(attrName, attrs[attrName]);\n        }\n      }\n    }\n\n    if (typeof content === 'string') {\n      el.innerHTML = content; // shortcut. no need to process HTML in any way\n    } else if (content != null) {\n      appendToElement(el, content);\n    }\n\n    return el;\n  }\n\n  function htmlToElement(html) {\n    html = html.trim();\n    var container = document.createElement(computeContainerTag(html));\n    container.innerHTML = html;\n    return container.firstChild;\n  }\n\n  function htmlToElements(html) {\n    return Array.prototype.slice.call(htmlToNodeList(html));\n  }\n\n  function htmlToNodeList(html) {\n    html = html.trim();\n    var container = document.createElement(computeContainerTag(html));\n    container.innerHTML = html;\n    return container.childNodes;\n  } // assumes html already trimmed and tag names are lowercase\n\n\n  function computeContainerTag(html) {\n    return containerTagHash[html.substr(0, 3) // faster than using regex\n    ] || 'div';\n  }\n\n  function appendToElement(el, content) {\n    var childNodes = normalizeContent(content);\n\n    for (var i = 0; i < childNodes.length; i++) {\n      el.appendChild(childNodes[i]);\n    }\n  }\n\n  function prependToElement(parent, content) {\n    var newEls = normalizeContent(content);\n    var afterEl = parent.firstChild || null; // if no firstChild, will append to end, but that's okay, b/c there were no children\n\n    for (var i = 0; i < newEls.length; i++) {\n      parent.insertBefore(newEls[i], afterEl);\n    }\n  }\n\n  function insertAfterElement(refEl, content) {\n    var newEls = normalizeContent(content);\n    var afterEl = refEl.nextSibling || null;\n\n    for (var i = 0; i < newEls.length; i++) {\n      refEl.parentNode.insertBefore(newEls[i], afterEl);\n    }\n  }\n\n  function normalizeContent(content) {\n    var els;\n\n    if (typeof content === 'string') {\n      els = htmlToElements(content);\n    } else if (content instanceof Node) {\n      els = [content];\n    } else {\n      // Node[] or NodeList\n      els = Array.prototype.slice.call(content);\n    }\n\n    return els;\n  }\n\n  function removeElement(el) {\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n  } // Querying\n  // ----------------------------------------------------------------------------------------------------------------\n  // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n\n\n  var matchesMethod = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.msMatchesSelector;\n\n  var closestMethod = Element.prototype.closest || function (selector) {\n    // polyfill\n    var el = this;\n\n    if (!document.documentElement.contains(el)) {\n      return null;\n    }\n\n    do {\n      if (elementMatches(el, selector)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n\n  function elementClosest(el, selector) {\n    return closestMethod.call(el, selector);\n  }\n\n  function elementMatches(el, selector) {\n    return matchesMethod.call(el, selector);\n  } // accepts multiple subject els\n  // returns a real array. good for methods like forEach\n\n\n  function findElements(container, selector) {\n    var containers = container instanceof HTMLElement ? [container] : container;\n    var allMatches = [];\n\n    for (var i = 0; i < containers.length; i++) {\n      var matches = containers[i].querySelectorAll(selector);\n\n      for (var j = 0; j < matches.length; j++) {\n        allMatches.push(matches[j]);\n      }\n    }\n\n    return allMatches;\n  } // accepts multiple subject els\n  // only queries direct child elements\n\n\n  function findChildren(parent, selector) {\n    var parents = parent instanceof HTMLElement ? [parent] : parent;\n    var allMatches = [];\n\n    for (var i = 0; i < parents.length; i++) {\n      var childNodes = parents[i].children; // only ever elements\n\n      for (var j = 0; j < childNodes.length; j++) {\n        var childNode = childNodes[j];\n\n        if (!selector || elementMatches(childNode, selector)) {\n          allMatches.push(childNode);\n        }\n      }\n    }\n\n    return allMatches;\n  } // Attributes\n  // ----------------------------------------------------------------------------------------------------------------\n\n\n  function forceClassName(el, className, bool) {\n    if (bool) {\n      el.classList.add(className);\n    } else {\n      el.classList.remove(className);\n    }\n  } // Style\n  // ----------------------------------------------------------------------------------------------------------------\n\n\n  var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;\n\n  function applyStyle(el, props) {\n    for (var propName in props) {\n      applyStyleProp(el, propName, props[propName]);\n    }\n  }\n\n  function applyStyleProp(el, name, val) {\n    if (val == null) {\n      el.style[name] = '';\n    } else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {\n      el.style[name] = val + 'px';\n    } else {\n      el.style[name] = val;\n    }\n  }\n\n  function pointInsideRect(point, rect) {\n    return point.left >= rect.left && point.left < rect.right && point.top >= rect.top && point.top < rect.bottom;\n  } // Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false\n\n\n  function intersectRects(rect1, rect2) {\n    var res = {\n      left: Math.max(rect1.left, rect2.left),\n      right: Math.min(rect1.right, rect2.right),\n      top: Math.max(rect1.top, rect2.top),\n      bottom: Math.min(rect1.bottom, rect2.bottom)\n    };\n\n    if (res.left < res.right && res.top < res.bottom) {\n      return res;\n    }\n\n    return false;\n  }\n\n  function translateRect(rect, deltaX, deltaY) {\n    return {\n      left: rect.left + deltaX,\n      right: rect.right + deltaX,\n      top: rect.top + deltaY,\n      bottom: rect.bottom + deltaY\n    };\n  } // Returns a new point that will have been moved to reside within the given rectangle\n\n\n  function constrainPoint(point, rect) {\n    return {\n      left: Math.min(Math.max(point.left, rect.left), rect.right),\n      top: Math.min(Math.max(point.top, rect.top), rect.bottom)\n    };\n  } // Returns a point that is the center of the given rectangle\n\n\n  function getRectCenter(rect) {\n    return {\n      left: (rect.left + rect.right) / 2,\n      top: (rect.top + rect.bottom) / 2\n    };\n  } // Subtracts point2's coordinates from point1's coordinates, returning a delta\n\n\n  function diffPoints(point1, point2) {\n    return {\n      left: point1.left - point2.left,\n      top: point1.top - point2.top\n    };\n  } // Logic for determining if, when the element is right-to-left, the scrollbar appears on the left side\n\n\n  var isRtlScrollbarOnLeft = null;\n\n  function getIsRtlScrollbarOnLeft() {\n    if (isRtlScrollbarOnLeft === null) {\n      isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();\n    }\n\n    return isRtlScrollbarOnLeft;\n  }\n\n  function computeIsRtlScrollbarOnLeft() {\n    var outerEl = createElement('div', {\n      style: {\n        position: 'absolute',\n        top: -1000,\n        left: 0,\n        border: 0,\n        padding: 0,\n        overflow: 'scroll',\n        direction: 'rtl'\n      }\n    }, '<div></div>');\n    document.body.appendChild(outerEl);\n    var innerEl = outerEl.firstChild;\n    var res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;\n    removeElement(outerEl);\n    return res;\n  } // The scrollbar width computations in computeEdges are sometimes flawed when it comes to\n  // retina displays, rounding, and IE11. Massage them into a usable value.\n\n\n  function sanitizeScrollbarWidth(width) {\n    width = Math.max(0, width); // no negatives\n\n    width = Math.round(width);\n    return width;\n  }\n\n  function computeEdges(el, getPadding) {\n    if (getPadding === void 0) {\n      getPadding = false;\n    }\n\n    var computedStyle = window.getComputedStyle(el);\n    var borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;\n    var borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;\n    var borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;\n    var borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;\n    var scrollbarLeftRight = sanitizeScrollbarWidth(el.offsetWidth - el.clientWidth - borderLeft - borderRight);\n    var scrollbarBottom = sanitizeScrollbarWidth(el.offsetHeight - el.clientHeight - borderTop - borderBottom);\n    var res = {\n      borderLeft: borderLeft,\n      borderRight: borderRight,\n      borderTop: borderTop,\n      borderBottom: borderBottom,\n      scrollbarBottom: scrollbarBottom,\n      scrollbarLeft: 0,\n      scrollbarRight: 0\n    };\n\n    if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') {\n      // is the scrollbar on the left side?\n      res.scrollbarLeft = scrollbarLeftRight;\n    } else {\n      res.scrollbarRight = scrollbarLeftRight;\n    }\n\n    if (getPadding) {\n      res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n    }\n\n    return res;\n  }\n\n  function computeInnerRect(el, goWithinPadding) {\n    if (goWithinPadding === void 0) {\n      goWithinPadding = false;\n    }\n\n    var outerRect = computeRect(el);\n    var edges = computeEdges(el, goWithinPadding);\n    var res = {\n      left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,\n      right: outerRect.right - edges.borderRight - edges.scrollbarRight,\n      top: outerRect.top + edges.borderTop,\n      bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom\n    };\n\n    if (goWithinPadding) {\n      res.left += edges.paddingLeft;\n      res.right -= edges.paddingRight;\n      res.top += edges.paddingTop;\n      res.bottom -= edges.paddingBottom;\n    }\n\n    return res;\n  }\n\n  function computeRect(el) {\n    var rect = el.getBoundingClientRect();\n    return {\n      left: rect.left + window.pageXOffset,\n      top: rect.top + window.pageYOffset,\n      right: rect.right + window.pageXOffset,\n      bottom: rect.bottom + window.pageYOffset\n    };\n  }\n\n  function computeViewportRect() {\n    return {\n      left: window.pageXOffset,\n      right: window.pageXOffset + document.documentElement.clientWidth,\n      top: window.pageYOffset,\n      bottom: window.pageYOffset + document.documentElement.clientHeight\n    };\n  }\n\n  function computeHeightAndMargins(el) {\n    var computed = window.getComputedStyle(el);\n    return el.getBoundingClientRect().height + parseInt(computed.marginTop, 10) + parseInt(computed.marginBottom, 10);\n  } // does not return window\n\n\n  function getClippingParents(el) {\n    var parents = [];\n\n    while (el instanceof HTMLElement) {\n      // will stop when gets to document or null\n      var computedStyle = window.getComputedStyle(el);\n\n      if (computedStyle.position === 'fixed') {\n        break;\n      }\n\n      if (/(auto|scroll)/.test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {\n        parents.push(el);\n      }\n\n      el = el.parentNode;\n    }\n\n    return parents;\n  }\n\n  function computeClippingRect(el) {\n    return getClippingParents(el).map(function (el) {\n      return computeInnerRect(el);\n    }).concat(computeViewportRect()).reduce(function (rect0, rect1) {\n      return intersectRects(rect0, rect1) || rect1; // should always intersect\n    });\n  } // Stops a mouse/touch event from doing it's native browser action\n\n\n  function preventDefault(ev) {\n    ev.preventDefault();\n  } // Event Delegation\n  // ----------------------------------------------------------------------------------------------------------------\n\n\n  function listenBySelector(container, eventType, selector, handler) {\n    function realHandler(ev) {\n      var matchedChild = elementClosest(ev.target, selector);\n\n      if (matchedChild) {\n        handler.call(matchedChild, ev, matchedChild);\n      }\n    }\n\n    container.addEventListener(eventType, realHandler);\n    return function () {\n      container.removeEventListener(eventType, realHandler);\n    };\n  }\n\n  function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {\n    var currentMatchedChild;\n    return listenBySelector(container, 'mouseover', selector, function (ev, matchedChild) {\n      if (matchedChild !== currentMatchedChild) {\n        currentMatchedChild = matchedChild;\n        onMouseEnter(ev, matchedChild);\n\n        var realOnMouseLeave_1 = function (ev) {\n          currentMatchedChild = null;\n          onMouseLeave(ev, matchedChild);\n          matchedChild.removeEventListener('mouseleave', realOnMouseLeave_1);\n        }; // listen to the next mouseleave, and then unattach\n\n\n        matchedChild.addEventListener('mouseleave', realOnMouseLeave_1);\n      }\n    });\n  } // Animation\n  // ----------------------------------------------------------------------------------------------------------------\n\n\n  var transitionEventNames = ['webkitTransitionEnd', 'otransitionend', 'oTransitionEnd', 'msTransitionEnd', 'transitionend']; // triggered only when the next single subsequent transition finishes\n\n  function whenTransitionDone(el, callback) {\n    var realCallback = function (ev) {\n      callback(ev);\n      transitionEventNames.forEach(function (eventName) {\n        el.removeEventListener(eventName, realCallback);\n      });\n    };\n\n    transitionEventNames.forEach(function (eventName) {\n      el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes\n    });\n  }\n\n  var DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat']; // Adding\n\n  function addWeeks(m, n) {\n    var a = dateToUtcArray(m);\n    a[2] += n * 7;\n    return arrayToUtcDate(a);\n  }\n\n  function addDays(m, n) {\n    var a = dateToUtcArray(m);\n    a[2] += n;\n    return arrayToUtcDate(a);\n  }\n\n  function addMs(m, n) {\n    var a = dateToUtcArray(m);\n    a[6] += n;\n    return arrayToUtcDate(a);\n  } // Diffing (all return floats)\n\n\n  function diffWeeks(m0, m1) {\n    return diffDays(m0, m1) / 7;\n  }\n\n  function diffDays(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);\n  }\n\n  function diffHours(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);\n  }\n\n  function diffMinutes(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / (1000 * 60);\n  }\n\n  function diffSeconds(m0, m1) {\n    return (m1.valueOf() - m0.valueOf()) / 1000;\n  }\n\n  function diffDayAndTime(m0, m1) {\n    var m0day = startOfDay(m0);\n    var m1day = startOfDay(m1);\n    return {\n      years: 0,\n      months: 0,\n      days: Math.round(diffDays(m0day, m1day)),\n      milliseconds: m1.valueOf() - m1day.valueOf() - (m0.valueOf() - m0day.valueOf())\n    };\n  } // Diffing Whole Units\n\n\n  function diffWholeWeeks(m0, m1) {\n    var d = diffWholeDays(m0, m1);\n\n    if (d !== null && d % 7 === 0) {\n      return d / 7;\n    }\n\n    return null;\n  }\n\n  function diffWholeDays(m0, m1) {\n    if (timeAsMs(m0) === timeAsMs(m1)) {\n      return Math.round(diffDays(m0, m1));\n    }\n\n    return null;\n  } // Start-Of\n\n\n  function startOfDay(m) {\n    return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate()]);\n  }\n\n  function startOfHour(m) {\n    return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours()]);\n  }\n\n  function startOfMinute(m) {\n    return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes()]);\n  }\n\n  function startOfSecond(m) {\n    return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes(), m.getUTCSeconds()]);\n  } // Week Computation\n\n\n  function weekOfYear(marker, dow, doy) {\n    var y = marker.getUTCFullYear();\n    var w = weekOfGivenYear(marker, y, dow, doy);\n\n    if (w < 1) {\n      return weekOfGivenYear(marker, y - 1, dow, doy);\n    }\n\n    var nextW = weekOfGivenYear(marker, y + 1, dow, doy);\n\n    if (nextW >= 1) {\n      return Math.min(w, nextW);\n    }\n\n    return w;\n  }\n\n  function weekOfGivenYear(marker, year, dow, doy) {\n    var firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);\n    var dayStart = startOfDay(marker);\n    var days = Math.round(diffDays(firstWeekStart, dayStart));\n    return Math.floor(days / 7) + 1; // zero-indexed\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    var fwd = 7 + dow - doy; // first-week day local weekday -- which local weekday is fwd\n\n    var fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // Array Conversion\n\n\n  function dateToLocalArray(date) {\n    return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()];\n  }\n\n  function arrayToLocalDate(a) {\n    return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month\n    a[3] || 0, a[4] || 0, a[5] || 0);\n  }\n\n  function dateToUtcArray(date) {\n    return [date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds()];\n  }\n\n  function arrayToUtcDate(a) {\n    // according to web standards (and Safari), a month index is required.\n    // massage if only given a year.\n    if (a.length === 1) {\n      a = a.concat([0]);\n    }\n\n    return new Date(Date.UTC.apply(Date, a));\n  } // Other Utils\n\n\n  function isValidDate(m) {\n    return !isNaN(m.valueOf());\n  }\n\n  function timeAsMs(m) {\n    return m.getUTCHours() * 1000 * 60 * 60 + m.getUTCMinutes() * 1000 * 60 + m.getUTCSeconds() * 1000 + m.getUTCMilliseconds();\n  }\n\n  var INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];\n  var PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/; // Parsing and Creation\n\n  function createDuration(input, unit) {\n    var _a;\n\n    if (typeof input === 'string') {\n      return parseString(input);\n    } else if (typeof input === 'object' && input) {\n      // non-null object\n      return normalizeObject(input);\n    } else if (typeof input === 'number') {\n      return normalizeObject((_a = {}, _a[unit || 'milliseconds'] = input, _a));\n    } else {\n      return null;\n    }\n  }\n\n  function parseString(s) {\n    var m = PARSE_RE.exec(s);\n\n    if (m) {\n      var sign = m[1] ? -1 : 1;\n      return {\n        years: 0,\n        months: 0,\n        days: sign * (m[2] ? parseInt(m[2], 10) : 0),\n        milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours\n        (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes\n        (m[5] ? parseInt(m[5], 10) : 0) * 1000 + ( // seconds\n        m[6] ? parseInt(m[6], 10) : 0) // ms\n        )\n      };\n    }\n\n    return null;\n  }\n\n  function normalizeObject(obj) {\n    return {\n      years: obj.years || obj.year || 0,\n      months: obj.months || obj.month || 0,\n      days: (obj.days || obj.day || 0) + getWeeksFromInput(obj) * 7,\n      milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours\n      (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes\n      (obj.seconds || obj.second || 0) * 1000 + ( // seconds\n      obj.milliseconds || obj.millisecond || obj.ms || 0) // ms\n\n    };\n  }\n\n  function getWeeksFromInput(obj) {\n    return obj.weeks || obj.week || 0;\n  } // Equality\n\n\n  function durationsEqual(d0, d1) {\n    return d0.years === d1.years && d0.months === d1.months && d0.days === d1.days && d0.milliseconds === d1.milliseconds;\n  }\n\n  function isSingleDay(dur) {\n    return dur.years === 0 && dur.months === 0 && dur.days === 1 && dur.milliseconds === 0;\n  } // Simple Math\n\n\n  function addDurations(d0, d1) {\n    return {\n      years: d0.years + d1.years,\n      months: d0.months + d1.months,\n      days: d0.days + d1.days,\n      milliseconds: d0.milliseconds + d1.milliseconds\n    };\n  }\n\n  function subtractDurations(d1, d0) {\n    return {\n      years: d1.years - d0.years,\n      months: d1.months - d0.months,\n      days: d1.days - d0.days,\n      milliseconds: d1.milliseconds - d0.milliseconds\n    };\n  }\n\n  function multiplyDuration(d, n) {\n    return {\n      years: d.years * n,\n      months: d.months * n,\n      days: d.days * n,\n      milliseconds: d.milliseconds * n\n    };\n  } // Conversions\n  // \"Rough\" because they are based on average-case Gregorian months/years\n\n\n  function asRoughYears(dur) {\n    return asRoughDays(dur) / 365;\n  }\n\n  function asRoughMonths(dur) {\n    return asRoughDays(dur) / 30;\n  }\n\n  function asRoughDays(dur) {\n    return asRoughMs(dur) / 864e5;\n  }\n\n  function asRoughMinutes(dur) {\n    return asRoughMs(dur) / (1000 * 60);\n  }\n\n  function asRoughSeconds(dur) {\n    return asRoughMs(dur) / 1000;\n  }\n\n  function asRoughMs(dur) {\n    return dur.years * (365 * 864e5) + dur.months * (30 * 864e5) + dur.days * 864e5 + dur.milliseconds;\n  } // Advanced Math\n\n\n  function wholeDivideDurations(numerator, denominator) {\n    var res = null;\n\n    for (var i = 0; i < INTERNAL_UNITS.length; i++) {\n      var unit = INTERNAL_UNITS[i];\n\n      if (denominator[unit]) {\n        var localRes = numerator[unit] / denominator[unit];\n\n        if (!isInt(localRes) || res !== null && res !== localRes) {\n          return null;\n        }\n\n        res = localRes;\n      } else if (numerator[unit]) {\n        // needs to divide by something but can't!\n        return null;\n      }\n    }\n\n    return res;\n  }\n\n  function greatestDurationDenominator(dur, dontReturnWeeks) {\n    var ms = dur.milliseconds;\n\n    if (ms) {\n      if (ms % 1000 !== 0) {\n        return {\n          unit: 'millisecond',\n          value: ms\n        };\n      }\n\n      if (ms % (1000 * 60) !== 0) {\n        return {\n          unit: 'second',\n          value: ms / 1000\n        };\n      }\n\n      if (ms % (1000 * 60 * 60) !== 0) {\n        return {\n          unit: 'minute',\n          value: ms / (1000 * 60)\n        };\n      }\n\n      if (ms) {\n        return {\n          unit: 'hour',\n          value: ms / (1000 * 60 * 60)\n        };\n      }\n    }\n\n    if (dur.days) {\n      if (!dontReturnWeeks && dur.days % 7 === 0) {\n        return {\n          unit: 'week',\n          value: dur.days / 7\n        };\n      }\n\n      return {\n        unit: 'day',\n        value: dur.days\n      };\n    }\n\n    if (dur.months) {\n      return {\n        unit: 'month',\n        value: dur.months\n      };\n    }\n\n    if (dur.years) {\n      return {\n        unit: 'year',\n        value: dur.years\n      };\n    }\n\n    return {\n      unit: 'millisecond',\n      value: 0\n    };\n  }\n  /* FullCalendar-specific DOM Utilities\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // Given the scrollbar widths of some other container, create borders/margins on rowEls in order to match the left\n  // and right space that was offset by the scrollbars. A 1-pixel border first, then margin beyond that.\n\n\n  function compensateScroll(rowEl, scrollbarWidths) {\n    if (scrollbarWidths.left) {\n      applyStyle(rowEl, {\n        borderLeftWidth: 1,\n        marginLeft: scrollbarWidths.left - 1\n      });\n    }\n\n    if (scrollbarWidths.right) {\n      applyStyle(rowEl, {\n        borderRightWidth: 1,\n        marginRight: scrollbarWidths.right - 1\n      });\n    }\n  } // Undoes compensateScroll and restores all borders/margins\n\n\n  function uncompensateScroll(rowEl) {\n    applyStyle(rowEl, {\n      marginLeft: '',\n      marginRight: '',\n      borderLeftWidth: '',\n      borderRightWidth: ''\n    });\n  } // Make the mouse cursor express that an event is not allowed in the current area\n\n\n  function disableCursor() {\n    document.body.classList.add('fc-not-allowed');\n  } // Returns the mouse cursor to its original look\n\n\n  function enableCursor() {\n    document.body.classList.remove('fc-not-allowed');\n  } // Given a total available height to fill, have `els` (essentially child rows) expand to accomodate.\n  // By default, all elements that are shorter than the recommended height are expanded uniformly, not considering\n  // any other els that are already too tall. if `shouldRedistribute` is on, it considers these tall rows and\n  // reduces the available height.\n\n\n  function distributeHeight(els, availableHeight, shouldRedistribute) {\n    // *FLOORING NOTE*: we floor in certain places because zoom can give inaccurate floating-point dimensions,\n    // and it is better to be shorter than taller, to avoid creating unnecessary scrollbars.\n    var minOffset1 = Math.floor(availableHeight / els.length); // for non-last element\n\n    var minOffset2 = Math.floor(availableHeight - minOffset1 * (els.length - 1)); // for last element *FLOORING NOTE*\n\n    var flexEls = []; // elements that are allowed to expand. array of DOM nodes\n\n    var flexOffsets = []; // amount of vertical space it takes up\n\n    var flexHeights = []; // actual css height\n\n    var usedHeight = 0;\n    undistributeHeight(els); // give all elements their natural height\n    // find elements that are below the recommended height (expandable).\n    // important to query for heights in a single first pass (to avoid reflow oscillation).\n\n    els.forEach(function (el, i) {\n      var minOffset = i === els.length - 1 ? minOffset2 : minOffset1;\n      var naturalOffset = computeHeightAndMargins(el);\n\n      if (naturalOffset < minOffset) {\n        flexEls.push(el);\n        flexOffsets.push(naturalOffset);\n        flexHeights.push(el.offsetHeight);\n      } else {\n        // this element stretches past recommended height (non-expandable). mark the space as occupied.\n        usedHeight += naturalOffset;\n      }\n    }); // readjust the recommended height to only consider the height available to non-maxed-out rows.\n\n    if (shouldRedistribute) {\n      availableHeight -= usedHeight;\n      minOffset1 = Math.floor(availableHeight / flexEls.length);\n      minOffset2 = Math.floor(availableHeight - minOffset1 * (flexEls.length - 1)); // *FLOORING NOTE*\n    } // assign heights to all expandable elements\n\n\n    flexEls.forEach(function (el, i) {\n      var minOffset = i === flexEls.length - 1 ? minOffset2 : minOffset1;\n      var naturalOffset = flexOffsets[i];\n      var naturalHeight = flexHeights[i];\n      var newHeight = minOffset - (naturalOffset - naturalHeight); // subtract the margin/padding\n\n      if (naturalOffset < minOffset) {\n        // we check this again because redistribution might have changed things\n        el.style.height = newHeight + 'px';\n      }\n    });\n  } // Undoes distrubuteHeight, restoring all els to their natural height\n\n\n  function undistributeHeight(els) {\n    els.forEach(function (el) {\n      el.style.height = '';\n    });\n  } // Given `els`, a set of <td> cells, find the cell with the largest natural width and set the widths of all the\n  // cells to be that width.\n  // PREREQUISITE: if you want a cell to take up width, it needs to have a single inner element w/ display:inline\n\n\n  function matchCellWidths(els) {\n    var maxInnerWidth = 0;\n    els.forEach(function (el) {\n      var innerEl = el.firstChild; // hopefully an element\n\n      if (innerEl instanceof HTMLElement) {\n        var innerWidth_1 = innerEl.offsetWidth;\n\n        if (innerWidth_1 > maxInnerWidth) {\n          maxInnerWidth = innerWidth_1;\n        }\n      }\n    });\n    maxInnerWidth++; // sometimes not accurate of width the text needs to stay on one line. insurance\n\n    els.forEach(function (el) {\n      el.style.width = maxInnerWidth + 'px';\n    });\n    return maxInnerWidth;\n  } // Given one element that resides inside another,\n  // Subtracts the height of the inner element from the outer element.\n\n\n  function subtractInnerElHeight(outerEl, innerEl) {\n    // effin' IE8/9/10/11 sometimes returns 0 for dimensions. this weird hack was the only thing that worked\n    var reflowStyleProps = {\n      position: 'relative',\n      left: -1 // ensure reflow in case the el was already relative. negative is less likely to cause new scroll\n\n    };\n    applyStyle(outerEl, reflowStyleProps);\n    applyStyle(innerEl, reflowStyleProps);\n    var diff = outerEl.offsetHeight - innerEl.offsetHeight; // grab the dimensions\n    // undo hack\n\n    var resetStyleProps = {\n      position: '',\n      left: ''\n    };\n    applyStyle(outerEl, resetStyleProps);\n    applyStyle(innerEl, resetStyleProps);\n    return diff;\n  }\n  /* Selection\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function preventSelection(el) {\n    el.classList.add('fc-unselectable');\n    el.addEventListener('selectstart', preventDefault);\n  }\n\n  function allowSelection(el) {\n    el.classList.remove('fc-unselectable');\n    el.removeEventListener('selectstart', preventDefault);\n  }\n  /* Context Menu\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function preventContextMenu(el) {\n    el.addEventListener('contextmenu', preventDefault);\n  }\n\n  function allowContextMenu(el) {\n    el.removeEventListener('contextmenu', preventDefault);\n  }\n  /* Object Ordering by Field\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function parseFieldSpecs(input) {\n    var specs = [];\n    var tokens = [];\n    var i;\n    var token;\n\n    if (typeof input === 'string') {\n      tokens = input.split(/\\s*,\\s*/);\n    } else if (typeof input === 'function') {\n      tokens = [input];\n    } else if (Array.isArray(input)) {\n      tokens = input;\n    }\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (typeof token === 'string') {\n        specs.push(token.charAt(0) === '-' ? {\n          field: token.substring(1),\n          order: -1\n        } : {\n          field: token,\n          order: 1\n        });\n      } else if (typeof token === 'function') {\n        specs.push({\n          func: token\n        });\n      }\n    }\n\n    return specs;\n  }\n\n  function compareByFieldSpecs(obj0, obj1, fieldSpecs) {\n    var i;\n    var cmp;\n\n    for (i = 0; i < fieldSpecs.length; i++) {\n      cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);\n\n      if (cmp) {\n        return cmp;\n      }\n    }\n\n    return 0;\n  }\n\n  function compareByFieldSpec(obj0, obj1, fieldSpec) {\n    if (fieldSpec.func) {\n      return fieldSpec.func(obj0, obj1);\n    }\n\n    return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field]) * (fieldSpec.order || 1);\n  }\n\n  function flexibleCompare(a, b) {\n    if (!a && !b) {\n      return 0;\n    }\n\n    if (b == null) {\n      return -1;\n    }\n\n    if (a == null) {\n      return 1;\n    }\n\n    if (typeof a === 'string' || typeof b === 'string') {\n      return String(a).localeCompare(String(b));\n    }\n\n    return a - b;\n  }\n  /* String Utilities\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function capitaliseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  function padStart(val, len) {\n    var s = String(val);\n    return '000'.substr(0, len - s.length) + s;\n  }\n  /* Number Utilities\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function isInt(n) {\n    return n % 1 === 0;\n  }\n  /* Weird Utilities\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  function applyAll(functions, thisObj, args) {\n    if (typeof functions === 'function') {\n      // supplied a single function\n      functions = [functions];\n    }\n\n    if (functions) {\n      var i = void 0;\n      var ret = void 0;\n\n      for (i = 0; i < functions.length; i++) {\n        ret = functions[i].apply(thisObj, args) || ret;\n      }\n\n      return ret;\n    }\n  }\n\n  function firstDefined() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      if (args[i] !== undefined) {\n        return args[i];\n      }\n    }\n  } // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  // https://github.com/jashkenas/underscore/blob/1.6.0/underscore.js#L714\n\n\n  function debounce(func, wait) {\n    var timeout;\n    var args;\n    var context;\n    var timestamp;\n    var result;\n\n    var later = function () {\n      var last = new Date().valueOf() - timestamp;\n\n      if (last < wait) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    };\n\n    return function () {\n      context = this;\n      args = arguments;\n      timestamp = new Date().valueOf();\n\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n\n      return result;\n    };\n  } // Number and Boolean are only types that defaults or not computed for\n  // TODO: write more comments\n\n\n  function refineProps(rawProps, processors, defaults, leftoverProps) {\n    if (defaults === void 0) {\n      defaults = {};\n    }\n\n    var refined = {};\n\n    for (var key in processors) {\n      var processor = processors[key];\n\n      if (rawProps[key] !== undefined) {\n        // found\n        if (processor === Function) {\n          refined[key] = typeof rawProps[key] === 'function' ? rawProps[key] : null;\n        } else if (processor) {\n          // a refining function?\n          refined[key] = processor(rawProps[key]);\n        } else {\n          refined[key] = rawProps[key];\n        }\n      } else if (defaults[key] !== undefined) {\n        // there's an explicit default\n        refined[key] = defaults[key];\n      } else {\n        // must compute a default\n        if (processor === String) {\n          refined[key] = ''; // empty string is default for String\n        } else if (!processor || processor === Number || processor === Boolean || processor === Function) {\n          refined[key] = null; // assign null for other non-custom processor funcs\n        } else {\n          refined[key] = processor(null); // run the custom processor func\n        }\n      }\n    }\n\n    if (leftoverProps) {\n      for (var key in rawProps) {\n        if (processors[key] === undefined) {\n          leftoverProps[key] = rawProps[key];\n        }\n      }\n    }\n\n    return refined;\n  }\n  /*\n  Get a snapshot of an object, so we can compare it to later revisions.\n  Intentionally only works with arrays, jaja\n  */\n\n\n  function freezeRaw(raw) {\n    if (Array.isArray(raw)) {\n      return Array.prototype.slice.call(raw);\n    }\n\n    return raw;\n  }\n  /* Date stuff that doesn't belong in datelib core\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // given a timed range, computes an all-day range that has the same exact duration,\n  // but whose start time is aligned with the start of the day.\n\n\n  function computeAlignedDayRange(timedRange) {\n    var dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;\n    var start = startOfDay(timedRange.start);\n    var end = addDays(start, dayCnt);\n    return {\n      start: start,\n      end: end\n    };\n  } // given a timed range, computes an all-day range based on how for the end date bleeds into the next day\n  // TODO: give nextDayThreshold a default arg\n\n\n  function computeVisibleDayRange(timedRange, nextDayThreshold) {\n    if (nextDayThreshold === void 0) {\n      nextDayThreshold = createDuration(0);\n    }\n\n    var startDay = null;\n    var endDay = null;\n\n    if (timedRange.end) {\n      endDay = startOfDay(timedRange.end);\n      var endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`\n      // If the end time is actually inclusively part of the next day and is equal to or\n      // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.\n      // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.\n\n      if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {\n        endDay = addDays(endDay, 1);\n      }\n    }\n\n    if (timedRange.start) {\n      startDay = startOfDay(timedRange.start); // the beginning of the day the range starts\n      // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.\n\n      if (endDay && endDay <= startDay) {\n        endDay = addDays(startDay, 1);\n      }\n    }\n\n    return {\n      start: startDay,\n      end: endDay\n    };\n  } // spans from one day into another?\n\n\n  function isMultiDayRange(range) {\n    var visibleRange = computeVisibleDayRange(range);\n    return diffDays(visibleRange.start, visibleRange.end) > 1;\n  }\n\n  function diffDates(date0, date1, dateEnv, largeUnit) {\n    if (largeUnit === 'year') {\n      return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');\n    } else if (largeUnit === 'month') {\n      return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');\n    } else {\n      return diffDayAndTime(date0, date1); // returns a duration\n    }\n  }\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  function parseRecurring(eventInput, allDayDefault, dateEnv, recurringTypes, leftovers) {\n    for (var i = 0; i < recurringTypes.length; i++) {\n      var localLeftovers = {};\n      var parsed = recurringTypes[i].parse(eventInput, localLeftovers, dateEnv);\n\n      if (parsed) {\n        var allDay = localLeftovers.allDay;\n        delete localLeftovers.allDay; // remove from leftovers\n\n        if (allDay == null) {\n          allDay = allDayDefault;\n\n          if (allDay == null) {\n            allDay = parsed.allDayGuess;\n\n            if (allDay == null) {\n              allDay = false;\n            }\n          }\n        }\n\n        __assign(leftovers, localLeftovers);\n\n        return {\n          allDay: allDay,\n          duration: parsed.duration,\n          typeData: parsed.typeData,\n          typeId: i\n        };\n      }\n    }\n\n    return null;\n  }\n  /*\n  Event MUST have a recurringDef\n  */\n\n\n  function expandRecurringRanges(eventDef, framingRange, dateEnv, recurringTypes) {\n    var typeDef = recurringTypes[eventDef.recurringDef.typeId];\n    var markers = typeDef.expand(eventDef.recurringDef.typeData, framingRange, dateEnv); // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to\n\n    if (eventDef.allDay) {\n      markers = markers.map(startOfDay);\n    }\n\n    return markers;\n  } // Merges an array of objects into a single object.\n  // The second argument allows for an array of property names who's object values will be merged together.\n\n\n  function mergeProps(propObjs, complexProps) {\n    var dest = {};\n    var i;\n    var name;\n    var complexObjs;\n    var j;\n    var val;\n    var props;\n\n    if (complexProps) {\n      for (i = 0; i < complexProps.length; i++) {\n        name = complexProps[i];\n        complexObjs = []; // collect the trailing object values, stopping when a non-object is discovered\n\n        for (j = propObjs.length - 1; j >= 0; j--) {\n          val = propObjs[j][name];\n\n          if (typeof val === 'object' && val) {\n            // non-null object\n            complexObjs.unshift(val);\n          } else if (val !== undefined) {\n            dest[name] = val; // if there were no objects, this value will be used\n\n            break;\n          }\n        } // if the trailing values were objects, use the merged value\n\n\n        if (complexObjs.length) {\n          dest[name] = mergeProps(complexObjs);\n        }\n      }\n    } // copy values into the destination, going from last to first\n\n\n    for (i = propObjs.length - 1; i >= 0; i--) {\n      props = propObjs[i];\n\n      for (name in props) {\n        if (!(name in dest)) {\n          // if already assigned by previous props or complex props, don't reassign\n          dest[name] = props[name];\n        }\n      }\n    }\n\n    return dest;\n  }\n\n  function filterHash(hash, func) {\n    var filtered = {};\n\n    for (var key in hash) {\n      if (func(hash[key], key)) {\n        filtered[key] = hash[key];\n      }\n    }\n\n    return filtered;\n  }\n\n  function mapHash(hash, func) {\n    var newHash = {};\n\n    for (var key in hash) {\n      newHash[key] = func(hash[key], key);\n    }\n\n    return newHash;\n  }\n\n  function arrayToHash(a) {\n    var hash = {};\n\n    for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {\n      var item = a_1[_i];\n      hash[item] = true;\n    }\n\n    return hash;\n  }\n\n  function hashValuesToArray(obj) {\n    var a = [];\n\n    for (var key in obj) {\n      a.push(obj[key]);\n    }\n\n    return a;\n  }\n\n  function parseEvents(rawEvents, sourceId, calendar, allowOpenRange) {\n    var eventStore = createEmptyEventStore();\n\n    for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {\n      var rawEvent = rawEvents_1[_i];\n      var tuple = parseEvent(rawEvent, sourceId, calendar, allowOpenRange);\n\n      if (tuple) {\n        eventTupleToStore(tuple, eventStore);\n      }\n    }\n\n    return eventStore;\n  }\n\n  function eventTupleToStore(tuple, eventStore) {\n    if (eventStore === void 0) {\n      eventStore = createEmptyEventStore();\n    }\n\n    eventStore.defs[tuple.def.defId] = tuple.def;\n\n    if (tuple.instance) {\n      eventStore.instances[tuple.instance.instanceId] = tuple.instance;\n    }\n\n    return eventStore;\n  }\n\n  function expandRecurring(eventStore, framingRange, calendar) {\n    var dateEnv = calendar.dateEnv;\n    var defs = eventStore.defs,\n        instances = eventStore.instances; // remove existing recurring instances\n\n    instances = filterHash(instances, function (instance) {\n      return !defs[instance.defId].recurringDef;\n    });\n\n    for (var defId in defs) {\n      var def = defs[defId];\n\n      if (def.recurringDef) {\n        var starts = expandRecurringRanges(def, framingRange, calendar.dateEnv, calendar.pluginSystem.hooks.recurringTypes);\n        var duration = def.recurringDef.duration;\n\n        if (!duration) {\n          duration = def.allDay ? calendar.defaultAllDayEventDuration : calendar.defaultTimedEventDuration;\n        }\n\n        for (var _i = 0, starts_1 = starts; _i < starts_1.length; _i++) {\n          var start = starts_1[_i];\n          var instance = createEventInstance(defId, {\n            start: start,\n            end: dateEnv.add(start, duration)\n          });\n          instances[instance.instanceId] = instance;\n        }\n      }\n    }\n\n    return {\n      defs: defs,\n      instances: instances\n    };\n  } // retrieves events that have the same groupId as the instance specified by `instanceId`\n  // or they are the same as the instance.\n  // why might instanceId not be in the store? an event from another calendar?\n\n\n  function getRelevantEvents(eventStore, instanceId) {\n    var instance = eventStore.instances[instanceId];\n\n    if (instance) {\n      var def_1 = eventStore.defs[instance.defId]; // get events/instances with same group\n\n      var newStore = filterEventStoreDefs(eventStore, function (lookDef) {\n        return isEventDefsGrouped(def_1, lookDef);\n      }); // add the original\n      // TODO: wish we could use eventTupleToStore or something like it\n\n      newStore.defs[def_1.defId] = def_1;\n      newStore.instances[instance.instanceId] = instance;\n      return newStore;\n    }\n\n    return createEmptyEventStore();\n  }\n\n  function isEventDefsGrouped(def0, def1) {\n    return Boolean(def0.groupId && def0.groupId === def1.groupId);\n  }\n\n  function transformRawEvents(rawEvents, eventSource, calendar) {\n    var calEachTransform = calendar.opt('eventDataTransform');\n    var sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;\n\n    if (sourceEachTransform) {\n      rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);\n    }\n\n    if (calEachTransform) {\n      rawEvents = transformEachRawEvent(rawEvents, calEachTransform);\n    }\n\n    return rawEvents;\n  }\n\n  function transformEachRawEvent(rawEvents, func) {\n    var refinedEvents;\n\n    if (!func) {\n      refinedEvents = rawEvents;\n    } else {\n      refinedEvents = [];\n\n      for (var _i = 0, rawEvents_2 = rawEvents; _i < rawEvents_2.length; _i++) {\n        var rawEvent = rawEvents_2[_i];\n        var refinedEvent = func(rawEvent);\n\n        if (refinedEvent) {\n          refinedEvents.push(refinedEvent);\n        } else if (refinedEvent == null) {\n          refinedEvents.push(rawEvent);\n        } // if a different falsy value, do nothing\n\n      }\n    }\n\n    return refinedEvents;\n  }\n\n  function createEmptyEventStore() {\n    return {\n      defs: {},\n      instances: {}\n    };\n  }\n\n  function mergeEventStores(store0, store1) {\n    return {\n      defs: __assign({}, store0.defs, store1.defs),\n      instances: __assign({}, store0.instances, store1.instances)\n    };\n  }\n\n  function filterEventStoreDefs(eventStore, filterFunc) {\n    var defs = filterHash(eventStore.defs, filterFunc);\n    var instances = filterHash(eventStore.instances, function (instance) {\n      return defs[instance.defId]; // still exists?\n    });\n    return {\n      defs: defs,\n      instances: instances\n    };\n  }\n\n  function parseRange(input, dateEnv) {\n    var start = null;\n    var end = null;\n\n    if (input.start) {\n      start = dateEnv.createMarker(input.start);\n    }\n\n    if (input.end) {\n      end = dateEnv.createMarker(input.end);\n    }\n\n    if (!start && !end) {\n      return null;\n    }\n\n    if (start && end && end < start) {\n      return null;\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  } // SIDE-EFFECT: will mutate ranges.\n  // Will return a new array result.\n\n\n  function invertRanges(ranges, constraintRange) {\n    var invertedRanges = [];\n    var start = constraintRange.start; // the end of the previous range. the start of the new range\n\n    var i;\n    var dateRange; // ranges need to be in order. required for our date-walking algorithm\n\n    ranges.sort(compareRanges);\n\n    for (i = 0; i < ranges.length; i++) {\n      dateRange = ranges[i]; // add the span of time before the event (if there is any)\n\n      if (dateRange.start > start) {\n        // compare millisecond time (skip any ambig logic)\n        invertedRanges.push({\n          start: start,\n          end: dateRange.start\n        });\n      }\n\n      if (dateRange.end > start) {\n        start = dateRange.end;\n      }\n    } // add the span of time after the last event (if there is any)\n\n\n    if (start < constraintRange.end) {\n      // compare millisecond time (skip any ambig logic)\n      invertedRanges.push({\n        start: start,\n        end: constraintRange.end\n      });\n    }\n\n    return invertedRanges;\n  }\n\n  function compareRanges(range0, range1) {\n    return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first\n  }\n\n  function intersectRanges(range0, range1) {\n    var start = range0.start;\n    var end = range0.end;\n    var newRange = null;\n\n    if (range1.start !== null) {\n      if (start === null) {\n        start = range1.start;\n      } else {\n        start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));\n      }\n    }\n\n    if (range1.end != null) {\n      if (end === null) {\n        end = range1.end;\n      } else {\n        end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));\n      }\n    }\n\n    if (start === null || end === null || start < end) {\n      newRange = {\n        start: start,\n        end: end\n      };\n    }\n\n    return newRange;\n  }\n\n  function rangesEqual(range0, range1) {\n    return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) && (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());\n  }\n\n  function rangesIntersect(range0, range1) {\n    return (range0.end === null || range1.start === null || range0.end > range1.start) && (range0.start === null || range1.end === null || range0.start < range1.end);\n  }\n\n  function rangeContainsRange(outerRange, innerRange) {\n    return (outerRange.start === null || innerRange.start !== null && innerRange.start >= outerRange.start) && (outerRange.end === null || innerRange.end !== null && innerRange.end <= outerRange.end);\n  }\n\n  function rangeContainsMarker(range, date) {\n    return (range.start === null || date >= range.start) && (range.end === null || date < range.end);\n  } // If the given date is not within the given range, move it inside.\n  // (If it's past the end, make it one millisecond before the end).\n\n\n  function constrainMarkerToRange(date, range) {\n    if (range.start != null && date < range.start) {\n      return range.start;\n    }\n\n    if (range.end != null && date >= range.end) {\n      return new Date(range.end.valueOf() - 1);\n    }\n\n    return date;\n  }\n\n  function removeExact(array, exactVal) {\n    var removeCnt = 0;\n    var i = 0;\n\n    while (i < array.length) {\n      if (array[i] === exactVal) {\n        array.splice(i, 1);\n        removeCnt++;\n      } else {\n        i++;\n      }\n    }\n\n    return removeCnt;\n  }\n\n  function isArraysEqual(a0, a1) {\n    var len = a0.length;\n    var i;\n\n    if (len !== a1.length) {\n      // not array? or not same length?\n      return false;\n    }\n\n    for (i = 0; i < len; i++) {\n      if (a0[i] !== a1[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function memoize(workerFunc) {\n    var args;\n    var res;\n    return function () {\n      if (!args || !isArraysEqual(args, arguments)) {\n        args = arguments;\n        res = workerFunc.apply(this, arguments);\n      }\n\n      return res;\n    };\n  }\n  /*\n  always executes the workerFunc, but if the result is equal to the previous result,\n  return the previous result instead.\n  */\n\n\n  function memoizeOutput(workerFunc, equalityFunc) {\n    var cachedRes = null;\n    return function () {\n      var newRes = workerFunc.apply(this, arguments);\n\n      if (cachedRes === null || !(cachedRes === newRes || equalityFunc(cachedRes, newRes))) {\n        cachedRes = newRes;\n      }\n\n      return cachedRes;\n    };\n  }\n\n  var EXTENDED_SETTINGS_AND_SEVERITIES = {\n    week: 3,\n    separator: 0,\n    omitZeroMinute: 0,\n    meridiem: 0,\n    omitCommas: 0\n  };\n  var STANDARD_DATE_PROP_SEVERITIES = {\n    timeZoneName: 7,\n    era: 6,\n    year: 5,\n    month: 4,\n    day: 2,\n    weekday: 2,\n    hour: 1,\n    minute: 1,\n    second: 1\n  };\n  var MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i; // eats up leading spaces too\n\n  var COMMA_RE = /,/g; // we need re for globalness\n\n  var MULTI_SPACE_RE = /\\s+/g;\n  var LTR_RE = /\\u200e/g; // control character\n\n  var UTC_RE = /UTC|GMT/;\n\n  var NativeFormatter =\n  /** @class */\n  function () {\n    function NativeFormatter(formatSettings) {\n      var standardDateProps = {};\n      var extendedSettings = {};\n      var severity = 0;\n\n      for (var name_1 in formatSettings) {\n        if (name_1 in EXTENDED_SETTINGS_AND_SEVERITIES) {\n          extendedSettings[name_1] = formatSettings[name_1];\n          severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name_1], severity);\n        } else {\n          standardDateProps[name_1] = formatSettings[name_1];\n\n          if (name_1 in STANDARD_DATE_PROP_SEVERITIES) {\n            severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name_1], severity);\n          }\n        }\n      }\n\n      this.standardDateProps = standardDateProps;\n      this.extendedSettings = extendedSettings;\n      this.severity = severity;\n      this.buildFormattingFunc = memoize(buildFormattingFunc);\n    }\n\n    NativeFormatter.prototype.format = function (date, context) {\n      return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);\n    };\n\n    NativeFormatter.prototype.formatRange = function (start, end, context) {\n      var _a = this,\n          standardDateProps = _a.standardDateProps,\n          extendedSettings = _a.extendedSettings;\n\n      var diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);\n\n      if (!diffSeverity) {\n        return this.format(start, context);\n      }\n\n      var biggestUnitForPartial = diffSeverity;\n\n      if (biggestUnitForPartial > 1 && ( // the two dates are different in a way that's larger scale than time\n      standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') && (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') && (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {\n        biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time\n      }\n\n      var full0 = this.format(start, context);\n      var full1 = this.format(end, context);\n\n      if (full0 === full1) {\n        return full0;\n      }\n\n      var partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);\n      var partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);\n      var partial0 = partialFormattingFunc(start);\n      var partial1 = partialFormattingFunc(end);\n      var insertion = findCommonInsertion(full0, partial0, full1, partial1);\n      var separator = extendedSettings.separator || '';\n\n      if (insertion) {\n        return insertion.before + partial0 + separator + partial1 + insertion.after;\n      }\n\n      return full0 + separator + full1;\n    };\n\n    NativeFormatter.prototype.getLargestUnit = function () {\n      switch (this.severity) {\n        case 7:\n        case 6:\n        case 5:\n          return 'year';\n\n        case 4:\n          return 'month';\n\n        case 3:\n          return 'week';\n\n        default:\n          return 'day';\n      }\n    };\n\n    return NativeFormatter;\n  }();\n\n  function buildFormattingFunc(standardDateProps, extendedSettings, context) {\n    var standardDatePropCnt = Object.keys(standardDateProps).length;\n\n    if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {\n      return function (date) {\n        return formatTimeZoneOffset(date.timeZoneOffset);\n      };\n    }\n\n    if (standardDatePropCnt === 0 && extendedSettings.week) {\n      return function (date) {\n        return formatWeekNumber(context.computeWeekNumber(date.marker), context.weekLabel, context.locale, extendedSettings.week);\n      };\n    }\n\n    return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);\n  }\n\n  function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {\n    standardDateProps = __assign({}, standardDateProps); // copy\n\n    extendedSettings = __assign({}, extendedSettings); // copy\n\n    sanitizeSettings(standardDateProps, extendedSettings);\n    standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers\n\n    var normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);\n    var zeroFormat; // needed?\n\n    if (extendedSettings.omitZeroMinute) {\n      var zeroProps = __assign({}, standardDateProps);\n\n      delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings\n\n      zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);\n    }\n\n    return function (date) {\n      var marker = date.marker;\n      var format;\n\n      if (zeroFormat && !marker.getUTCMinutes()) {\n        format = zeroFormat;\n      } else {\n        format = normalFormat;\n      }\n\n      var s = format.format(marker);\n      return postProcess(s, date, standardDateProps, extendedSettings, context);\n    };\n  }\n\n  function sanitizeSettings(standardDateProps, extendedSettings) {\n    // deal with a browser inconsistency where formatting the timezone\n    // requires that the hour/minute be present.\n    if (standardDateProps.timeZoneName) {\n      if (!standardDateProps.hour) {\n        standardDateProps.hour = '2-digit';\n      }\n\n      if (!standardDateProps.minute) {\n        standardDateProps.minute = '2-digit';\n      }\n    } // only support short timezone names\n\n\n    if (standardDateProps.timeZoneName === 'long') {\n      standardDateProps.timeZoneName = 'short';\n    } // if requesting to display seconds, MUST display minutes\n\n\n    if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {\n      delete extendedSettings.omitZeroMinute;\n    }\n  }\n\n  function postProcess(s, date, standardDateProps, extendedSettings, context) {\n    s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes\n\n    if (standardDateProps.timeZoneName === 'short') {\n      s = injectTzoStr(s, context.timeZone === 'UTC' || date.timeZoneOffset == null ? 'UTC' : // important to normalize for IE, which does \"GMT\"\n      formatTimeZoneOffset(date.timeZoneOffset));\n    }\n\n    if (extendedSettings.omitCommas) {\n      s = s.replace(COMMA_RE, '').trim();\n    }\n\n    if (extendedSettings.omitZeroMinute) {\n      s = s.replace(':00', ''); // zeroFormat doesn't always achieve this\n    } // ^ do anything that might create adjacent spaces before this point,\n    // because MERIDIEM_RE likes to eat up loading spaces\n\n\n    if (extendedSettings.meridiem === false) {\n      s = s.replace(MERIDIEM_RE, '').trim();\n    } else if (extendedSettings.meridiem === 'narrow') {\n      // a/p\n      s = s.replace(MERIDIEM_RE, function (m0, m1) {\n        return m1.toLocaleLowerCase();\n      });\n    } else if (extendedSettings.meridiem === 'short') {\n      // am/pm\n      s = s.replace(MERIDIEM_RE, function (m0, m1) {\n        return m1.toLocaleLowerCase() + 'm';\n      });\n    } else if (extendedSettings.meridiem === 'lowercase') {\n      // other meridiem transformers already converted to lowercase\n      s = s.replace(MERIDIEM_RE, function (m0) {\n        return m0.toLocaleLowerCase();\n      });\n    }\n\n    s = s.replace(MULTI_SPACE_RE, ' ');\n    s = s.trim();\n    return s;\n  }\n\n  function injectTzoStr(s, tzoStr) {\n    var replaced = false;\n    s = s.replace(UTC_RE, function () {\n      replaced = true;\n      return tzoStr;\n    }); // IE11 doesn't include UTC/GMT in the original string, so append to end\n\n    if (!replaced) {\n      s += ' ' + tzoStr;\n    }\n\n    return s;\n  }\n\n  function formatWeekNumber(num, weekLabel, locale, display) {\n    var parts = [];\n\n    if (display === 'narrow') {\n      parts.push(weekLabel);\n    } else if (display === 'short') {\n      parts.push(weekLabel, ' ');\n    } // otherwise, considered 'numeric'\n\n\n    parts.push(locale.simpleNumberFormat.format(num));\n\n    if (locale.options.isRtl) {\n      // TODO: use control characters instead?\n      parts.reverse();\n    }\n\n    return parts.join('');\n  } // Range Formatting Utils\n  // 0 = exactly the same\n  // 1 = different by time\n  // and bigger\n\n\n  function computeMarkerDiffSeverity(d0, d1, ca) {\n    if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {\n      return 5;\n    }\n\n    if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {\n      return 4;\n    }\n\n    if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {\n      return 2;\n    }\n\n    if (timeAsMs(d0) !== timeAsMs(d1)) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  function computePartialFormattingOptions(options, biggestUnit) {\n    var partialOptions = {};\n\n    for (var name_2 in options) {\n      if (!(name_2 in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)\n      STANDARD_DATE_PROP_SEVERITIES[name_2] <= biggestUnit) {\n        partialOptions[name_2] = options[name_2];\n      }\n    }\n\n    return partialOptions;\n  }\n\n  function findCommonInsertion(full0, partial0, full1, partial1) {\n    var i0 = 0;\n\n    while (i0 < full0.length) {\n      var found0 = full0.indexOf(partial0, i0);\n\n      if (found0 === -1) {\n        break;\n      }\n\n      var before0 = full0.substr(0, found0);\n      i0 = found0 + partial0.length;\n      var after0 = full0.substr(i0);\n      var i1 = 0;\n\n      while (i1 < full1.length) {\n        var found1 = full1.indexOf(partial1, i1);\n\n        if (found1 === -1) {\n          break;\n        }\n\n        var before1 = full1.substr(0, found1);\n        i1 = found1 + partial1.length;\n        var after1 = full1.substr(i1);\n\n        if (before0 === before1 && after0 === after1) {\n          return {\n            before: before0,\n            after: after0\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  TODO: fix the terminology of \"formatter\" vs \"formatting func\"\n  */\n\n  /*\n  At the time of instantiation, this object does not know which cmd-formatting system it will use.\n  It receives this at the time of formatting, as a setting.\n  */\n\n\n  var CmdFormatter =\n  /** @class */\n  function () {\n    function CmdFormatter(cmdStr, separator) {\n      this.cmdStr = cmdStr;\n      this.separator = separator;\n    }\n\n    CmdFormatter.prototype.format = function (date, context) {\n      return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, this.separator));\n    };\n\n    CmdFormatter.prototype.formatRange = function (start, end, context) {\n      return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, this.separator));\n    };\n\n    return CmdFormatter;\n  }();\n\n  var FuncFormatter =\n  /** @class */\n  function () {\n    function FuncFormatter(func) {\n      this.func = func;\n    }\n\n    FuncFormatter.prototype.format = function (date, context) {\n      return this.func(createVerboseFormattingArg(date, null, context));\n    };\n\n    FuncFormatter.prototype.formatRange = function (start, end, context) {\n      return this.func(createVerboseFormattingArg(start, end, context));\n    };\n\n    return FuncFormatter;\n  }(); // Formatter Object Creation\n\n\n  function createFormatter(input, defaultSeparator) {\n    if (typeof input === 'object' && input) {\n      // non-null object\n      if (typeof defaultSeparator === 'string') {\n        input = __assign({\n          separator: defaultSeparator\n        }, input);\n      }\n\n      return new NativeFormatter(input);\n    } else if (typeof input === 'string') {\n      return new CmdFormatter(input, defaultSeparator);\n    } else if (typeof input === 'function') {\n      return new FuncFormatter(input);\n    }\n  } // String Utils\n  // timeZoneOffset is in minutes\n\n\n  function buildIsoString(marker, timeZoneOffset, stripZeroTime) {\n    if (stripZeroTime === void 0) {\n      stripZeroTime = false;\n    }\n\n    var s = marker.toISOString();\n    s = s.replace('.000', '');\n\n    if (stripZeroTime) {\n      s = s.replace('T00:00:00Z', '');\n    }\n\n    if (s.length > 10) {\n      // time part wasn't stripped, can add timezone info\n      if (timeZoneOffset == null) {\n        s = s.replace('Z', '');\n      } else if (timeZoneOffset !== 0) {\n        s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));\n      } // otherwise, its UTC-0 and we want to keep the Z\n\n    }\n\n    return s;\n  }\n\n  function formatIsoTimeString(marker) {\n    return padStart(marker.getUTCHours(), 2) + ':' + padStart(marker.getUTCMinutes(), 2) + ':' + padStart(marker.getUTCSeconds(), 2);\n  }\n\n  function formatTimeZoneOffset(minutes, doIso) {\n    if (doIso === void 0) {\n      doIso = false;\n    }\n\n    var sign = minutes < 0 ? '-' : '+';\n    var abs = Math.abs(minutes);\n    var hours = Math.floor(abs / 60);\n    var mins = Math.round(abs % 60);\n\n    if (doIso) {\n      return sign + padStart(hours, 2) + ':' + padStart(mins, 2);\n    } else {\n      return 'GMT' + sign + hours + (mins ? ':' + padStart(mins, 2) : '');\n    }\n  } // Arg Utils\n\n\n  function createVerboseFormattingArg(start, end, context, separator) {\n    var startInfo = expandZonedMarker(start, context.calendarSystem);\n    var endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;\n    return {\n      date: startInfo,\n      start: startInfo,\n      end: endInfo,\n      timeZone: context.timeZone,\n      localeCodes: context.locale.codes,\n      separator: separator\n    };\n  }\n\n  function expandZonedMarker(dateInfo, calendarSystem) {\n    var a = calendarSystem.markerToArray(dateInfo.marker);\n    return {\n      marker: dateInfo.marker,\n      timeZoneOffset: dateInfo.timeZoneOffset,\n      array: a,\n      year: a[0],\n      month: a[1],\n      day: a[2],\n      hour: a[3],\n      minute: a[4],\n      second: a[5],\n      millisecond: a[6]\n    };\n  }\n\n  var EventSourceApi =\n  /** @class */\n  function () {\n    function EventSourceApi(calendar, internalEventSource) {\n      this.calendar = calendar;\n      this.internalEventSource = internalEventSource;\n    }\n\n    EventSourceApi.prototype.remove = function () {\n      this.calendar.dispatch({\n        type: 'REMOVE_EVENT_SOURCE',\n        sourceId: this.internalEventSource.sourceId\n      });\n    };\n\n    EventSourceApi.prototype.refetch = function () {\n      this.calendar.dispatch({\n        type: 'FETCH_EVENT_SOURCES',\n        sourceIds: [this.internalEventSource.sourceId]\n      });\n    };\n\n    Object.defineProperty(EventSourceApi.prototype, \"id\", {\n      get: function () {\n        return this.internalEventSource.publicId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventSourceApi.prototype, \"url\", {\n      // only relevant to json-feed event sources\n      get: function () {\n        return this.internalEventSource.meta.url;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return EventSourceApi;\n  }();\n\n  var EventApi =\n  /** @class */\n  function () {\n    function EventApi(calendar, def, instance) {\n      this._calendar = calendar;\n      this._def = def;\n      this._instance = instance || null;\n    }\n    /*\n    TODO: make event struct more responsible for this\n    */\n\n\n    EventApi.prototype.setProp = function (name, val) {\n      var _a, _b;\n\n      if (name in DATE_PROPS) ;else if (name in NON_DATE_PROPS) {\n        if (typeof NON_DATE_PROPS[name] === 'function') {\n          val = NON_DATE_PROPS[name](val);\n        }\n\n        this.mutate({\n          standardProps: (_a = {}, _a[name] = val, _a)\n        });\n      } else if (name in UNSCOPED_EVENT_UI_PROPS) {\n        var ui = void 0;\n\n        if (typeof UNSCOPED_EVENT_UI_PROPS[name] === 'function') {\n          val = UNSCOPED_EVENT_UI_PROPS[name](val);\n        }\n\n        if (name === 'color') {\n          ui = {\n            backgroundColor: val,\n            borderColor: val\n          };\n        } else if (name === 'editable') {\n          ui = {\n            startEditable: val,\n            durationEditable: val\n          };\n        } else {\n          ui = (_b = {}, _b[name] = val, _b);\n        }\n\n        this.mutate({\n          standardProps: {\n            ui: ui\n          }\n        });\n      }\n    };\n\n    EventApi.prototype.setExtendedProp = function (name, val) {\n      var _a;\n\n      this.mutate({\n        extendedProps: (_a = {}, _a[name] = val, _a)\n      });\n    };\n\n    EventApi.prototype.setStart = function (startInput, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var dateEnv = this._calendar.dateEnv;\n      var start = dateEnv.createMarker(startInput);\n\n      if (start && this._instance) {\n        // TODO: warning if parsed bad\n        var instanceRange = this._instance.range;\n        var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?\n\n        var endDelta = null;\n\n        if (options.maintainDuration) {\n          var origDuration = diffDates(instanceRange.start, instanceRange.end, dateEnv, options.granularity);\n          var newDuration = diffDates(start, instanceRange.end, dateEnv, options.granularity);\n          endDelta = subtractDurations(origDuration, newDuration);\n        }\n\n        this.mutate({\n          startDelta: startDelta,\n          endDelta: endDelta\n        });\n      }\n    };\n\n    EventApi.prototype.setEnd = function (endInput, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var dateEnv = this._calendar.dateEnv;\n      var end;\n\n      if (endInput != null) {\n        end = dateEnv.createMarker(endInput);\n\n        if (!end) {\n          return; // TODO: warning if parsed bad\n        }\n      }\n\n      if (this._instance) {\n        if (end) {\n          var endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);\n          this.mutate({\n            endDelta: endDelta\n          });\n        } else {\n          this.mutate({\n            standardProps: {\n              hasEnd: false\n            }\n          });\n        }\n      }\n    };\n\n    EventApi.prototype.setDates = function (startInput, endInput, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var dateEnv = this._calendar.dateEnv;\n      var standardProps = {\n        allDay: options.allDay\n      };\n      var start = dateEnv.createMarker(startInput);\n      var end;\n\n      if (!start) {\n        return; // TODO: warning if parsed bad\n      }\n\n      if (endInput != null) {\n        end = dateEnv.createMarker(endInput);\n\n        if (!end) {\n          // TODO: warning if parsed bad\n          return;\n        }\n      }\n\n      if (this._instance) {\n        var instanceRange = this._instance.range; // when computing the diff for an event being converted to all-day,\n        // compute diff off of the all-day values the way event-mutation does.\n\n        if (options.allDay === true) {\n          instanceRange = computeAlignedDayRange(instanceRange);\n        }\n\n        var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);\n\n        if (end) {\n          var endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);\n          this.mutate({\n            startDelta: startDelta,\n            endDelta: endDelta,\n            standardProps: standardProps\n          });\n        } else {\n          standardProps.hasEnd = false;\n          this.mutate({\n            startDelta: startDelta,\n            standardProps: standardProps\n          });\n        }\n      }\n    };\n\n    EventApi.prototype.moveStart = function (deltaInput) {\n      var delta = createDuration(deltaInput);\n\n      if (delta) {\n        // TODO: warning if parsed bad\n        this.mutate({\n          startDelta: delta\n        });\n      }\n    };\n\n    EventApi.prototype.moveEnd = function (deltaInput) {\n      var delta = createDuration(deltaInput);\n\n      if (delta) {\n        // TODO: warning if parsed bad\n        this.mutate({\n          endDelta: delta\n        });\n      }\n    };\n\n    EventApi.prototype.moveDates = function (deltaInput) {\n      var delta = createDuration(deltaInput);\n\n      if (delta) {\n        // TODO: warning if parsed bad\n        this.mutate({\n          startDelta: delta,\n          endDelta: delta\n        });\n      }\n    };\n\n    EventApi.prototype.setAllDay = function (allDay, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var standardProps = {\n        allDay: allDay\n      };\n      var maintainDuration = options.maintainDuration;\n\n      if (maintainDuration == null) {\n        maintainDuration = this._calendar.opt('allDayMaintainDuration');\n      }\n\n      if (this._def.allDay !== allDay) {\n        standardProps.hasEnd = maintainDuration;\n      }\n\n      this.mutate({\n        standardProps: standardProps\n      });\n    };\n\n    EventApi.prototype.formatRange = function (formatInput) {\n      var dateEnv = this._calendar.dateEnv;\n      var instance = this._instance;\n      var formatter = createFormatter(formatInput, this._calendar.opt('defaultRangeSeparator'));\n\n      if (this._def.hasEnd) {\n        return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {\n          forcedStartTzo: instance.forcedStartTzo,\n          forcedEndTzo: instance.forcedEndTzo\n        });\n      } else {\n        return dateEnv.format(instance.range.start, formatter, {\n          forcedTzo: instance.forcedStartTzo\n        });\n      }\n    };\n\n    EventApi.prototype.mutate = function (mutation) {\n      var def = this._def;\n      var instance = this._instance;\n\n      if (instance) {\n        this._calendar.dispatch({\n          type: 'MUTATE_EVENTS',\n          instanceId: instance.instanceId,\n          mutation: mutation,\n          fromApi: true\n        });\n\n        var eventStore = this._calendar.state.eventStore;\n        this._def = eventStore.defs[def.defId];\n        this._instance = eventStore.instances[instance.instanceId];\n      }\n    };\n\n    EventApi.prototype.remove = function () {\n      this._calendar.dispatch({\n        type: 'REMOVE_EVENT_DEF',\n        defId: this._def.defId\n      });\n    };\n\n    Object.defineProperty(EventApi.prototype, \"source\", {\n      get: function () {\n        var sourceId = this._def.sourceId;\n\n        if (sourceId) {\n          return new EventSourceApi(this._calendar, this._calendar.state.eventSources[sourceId]);\n        }\n\n        return null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"start\", {\n      get: function () {\n        return this._instance ? this._calendar.dateEnv.toDate(this._instance.range.start) : null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"end\", {\n      get: function () {\n        return this._instance && this._def.hasEnd ? this._calendar.dateEnv.toDate(this._instance.range.end) : null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"id\", {\n      // computable props that all access the def\n      // TODO: find a TypeScript-compatible way to do this at scale\n      get: function () {\n        return this._def.publicId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"groupId\", {\n      get: function () {\n        return this._def.groupId;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"allDay\", {\n      get: function () {\n        return this._def.allDay;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"title\", {\n      get: function () {\n        return this._def.title;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"url\", {\n      get: function () {\n        return this._def.url;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"rendering\", {\n      get: function () {\n        return this._def.rendering;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"startEditable\", {\n      get: function () {\n        return this._def.ui.startEditable;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"durationEditable\", {\n      get: function () {\n        return this._def.ui.durationEditable;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"constraint\", {\n      get: function () {\n        return this._def.ui.constraints[0] || null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"overlap\", {\n      get: function () {\n        return this._def.ui.overlap;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"allow\", {\n      get: function () {\n        return this._def.ui.allows[0] || null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"backgroundColor\", {\n      get: function () {\n        return this._def.ui.backgroundColor;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"borderColor\", {\n      get: function () {\n        return this._def.ui.borderColor;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"textColor\", {\n      get: function () {\n        return this._def.ui.textColor;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"classNames\", {\n      // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n      get: function () {\n        return this._def.ui.classNames;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(EventApi.prototype, \"extendedProps\", {\n      get: function () {\n        return this._def.extendedProps;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return EventApi;\n  }();\n  /*\n  Specifying nextDayThreshold signals that all-day ranges should be sliced.\n  */\n\n\n  function sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {\n    var inverseBgByGroupId = {};\n    var inverseBgByDefId = {};\n    var defByGroupId = {};\n    var bgRanges = [];\n    var fgRanges = [];\n    var eventUis = compileEventUis(eventStore.defs, eventUiBases);\n\n    for (var defId in eventStore.defs) {\n      var def = eventStore.defs[defId];\n\n      if (def.rendering === 'inverse-background') {\n        if (def.groupId) {\n          inverseBgByGroupId[def.groupId] = [];\n\n          if (!defByGroupId[def.groupId]) {\n            defByGroupId[def.groupId] = def;\n          }\n        } else {\n          inverseBgByDefId[defId] = [];\n        }\n      }\n    }\n\n    for (var instanceId in eventStore.instances) {\n      var instance = eventStore.instances[instanceId];\n      var def = eventStore.defs[instance.defId];\n      var ui = eventUis[def.defId];\n      var origRange = instance.range;\n      var normalRange = !def.allDay && nextDayThreshold ? computeVisibleDayRange(origRange, nextDayThreshold) : origRange;\n      var slicedRange = intersectRanges(normalRange, framingRange);\n\n      if (slicedRange) {\n        if (def.rendering === 'inverse-background') {\n          if (def.groupId) {\n            inverseBgByGroupId[def.groupId].push(slicedRange);\n          } else {\n            inverseBgByDefId[instance.defId].push(slicedRange);\n          }\n        } else {\n          (def.rendering === 'background' ? bgRanges : fgRanges).push({\n            def: def,\n            ui: ui,\n            instance: instance,\n            range: slicedRange,\n            isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),\n            isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf()\n          });\n        }\n      }\n    }\n\n    for (var groupId in inverseBgByGroupId) {\n      // BY GROUP\n      var ranges = inverseBgByGroupId[groupId];\n      var invertedRanges = invertRanges(ranges, framingRange);\n\n      for (var _i = 0, invertedRanges_1 = invertedRanges; _i < invertedRanges_1.length; _i++) {\n        var invertedRange = invertedRanges_1[_i];\n        var def = defByGroupId[groupId];\n        var ui = eventUis[def.defId];\n        bgRanges.push({\n          def: def,\n          ui: ui,\n          instance: null,\n          range: invertedRange,\n          isStart: false,\n          isEnd: false\n        });\n      }\n    }\n\n    for (var defId in inverseBgByDefId) {\n      var ranges = inverseBgByDefId[defId];\n      var invertedRanges = invertRanges(ranges, framingRange);\n\n      for (var _a = 0, invertedRanges_2 = invertedRanges; _a < invertedRanges_2.length; _a++) {\n        var invertedRange = invertedRanges_2[_a];\n        bgRanges.push({\n          def: eventStore.defs[defId],\n          ui: eventUis[defId],\n          instance: null,\n          range: invertedRange,\n          isStart: false,\n          isEnd: false\n        });\n      }\n    }\n\n    return {\n      bg: bgRanges,\n      fg: fgRanges\n    };\n  }\n\n  function hasBgRendering(def) {\n    return def.rendering === 'background' || def.rendering === 'inverse-background';\n  }\n\n  function filterSegsViaEls(view, segs, isMirror) {\n    if (view.hasPublicHandlers('eventRender')) {\n      segs = segs.filter(function (seg) {\n        var custom = view.publiclyTrigger('eventRender', [{\n          event: new EventApi(view.calendar, seg.eventRange.def, seg.eventRange.instance),\n          isMirror: isMirror,\n          isStart: seg.isStart,\n          isEnd: seg.isEnd,\n          // TODO: include seg.range once all components consistently generate it\n          el: seg.el,\n          view: view\n        }]);\n\n        if (custom === false) {\n          // means don't render at all\n          return false;\n        } else if (custom && custom !== true) {\n          seg.el = custom;\n        }\n\n        return true;\n      });\n    }\n\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n      var seg = segs_1[_i];\n      setElSeg(seg.el, seg);\n    }\n\n    return segs;\n  }\n\n  function setElSeg(el, seg) {\n    el.fcSeg = seg;\n  }\n\n  function getElSeg(el) {\n    return el.fcSeg || null;\n  } // event ui computation\n\n\n  function compileEventUis(eventDefs, eventUiBases) {\n    return mapHash(eventDefs, function (eventDef) {\n      return compileEventUi(eventDef, eventUiBases);\n    });\n  }\n\n  function compileEventUi(eventDef, eventUiBases) {\n    var uis = [];\n\n    if (eventUiBases['']) {\n      uis.push(eventUiBases['']);\n    }\n\n    if (eventUiBases[eventDef.defId]) {\n      uis.push(eventUiBases[eventDef.defId]);\n    }\n\n    uis.push(eventDef.ui);\n    return combineEventUis(uis);\n  } // applies the mutation to ALL defs/instances within the event store\n\n\n  function applyMutationToEventStore(eventStore, eventConfigBase, mutation, calendar) {\n    var eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);\n    var dest = createEmptyEventStore();\n\n    for (var defId in eventStore.defs) {\n      var def = eventStore.defs[defId];\n      dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, calendar.pluginSystem.hooks.eventDefMutationAppliers, calendar);\n    }\n\n    for (var instanceId in eventStore.instances) {\n      var instance = eventStore.instances[instanceId];\n      var def = dest.defs[instance.defId]; // important to grab the newly modified def\n\n      dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, calendar);\n    }\n\n    return dest;\n  }\n\n  function applyMutationToEventDef(eventDef, eventConfig, mutation, appliers, calendar) {\n    var standardProps = mutation.standardProps || {}; // if hasEnd has not been specified, guess a good value based on deltas.\n    // if duration will change, there's no way the default duration will persist,\n    // and thus, we need to mark the event as having a real end\n\n    if (standardProps.hasEnd == null && eventConfig.durationEditable && willDeltasAffectDuration(eventConfig.startEditable ? mutation.startDelta : null, mutation.endDelta || null)) {\n      standardProps.hasEnd = true; // TODO: is this mutation okay?\n    }\n\n    var copy = __assign({}, eventDef, standardProps, {\n      ui: __assign({}, eventDef.ui, standardProps.ui)\n    });\n\n    if (mutation.extendedProps) {\n      copy.extendedProps = __assign({}, copy.extendedProps, mutation.extendedProps);\n    }\n\n    for (var _i = 0, appliers_1 = appliers; _i < appliers_1.length; _i++) {\n      var applier = appliers_1[_i];\n      applier(copy, mutation, calendar);\n    }\n\n    if (!copy.hasEnd && calendar.opt('forceEventDuration')) {\n      copy.hasEnd = true;\n    }\n\n    return copy;\n  }\n\n  function willDeltasAffectDuration(startDelta, endDelta) {\n    if (startDelta && !asRoughMs(startDelta)) {\n      startDelta = null;\n    }\n\n    if (endDelta && !asRoughMs(endDelta)) {\n      endDelta = null;\n    }\n\n    if (!startDelta && !endDelta) {\n      return false;\n    }\n\n    if (Boolean(startDelta) !== Boolean(endDelta)) {\n      return true;\n    }\n\n    return !durationsEqual(startDelta, endDelta);\n  }\n\n  function applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef\n  eventConfig, mutation, calendar) {\n    var dateEnv = calendar.dateEnv;\n    var forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;\n    var clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;\n\n    var copy = __assign({}, eventInstance);\n\n    if (forceAllDay) {\n      copy.range = computeAlignedDayRange(copy.range);\n    }\n\n    if (mutation.startDelta && eventConfig.startEditable) {\n      copy.range = {\n        start: dateEnv.add(copy.range.start, mutation.startDelta),\n        end: copy.range.end\n      };\n    }\n\n    if (clearEnd) {\n      copy.range = {\n        start: copy.range.start,\n        end: calendar.getDefaultEventEnd(eventDef.allDay, copy.range.start)\n      };\n    } else if (mutation.endDelta && (eventConfig.durationEditable || !willDeltasAffectDuration( // TODO: nonDRY logic above\n    eventConfig.startEditable ? mutation.startDelta : null, mutation.endDelta))) {\n      copy.range = {\n        start: copy.range.start,\n        end: dateEnv.add(copy.range.end, mutation.endDelta)\n      };\n    } // in case event was all-day but the supplied deltas were not\n    // better util for this?\n\n\n    if (eventDef.allDay) {\n      copy.range = {\n        start: startOfDay(copy.range.start),\n        end: startOfDay(copy.range.end)\n      };\n    } // handle invalid durations\n\n\n    if (copy.range.end < copy.range.start) {\n      copy.range.end = calendar.getDefaultEventEnd(eventDef.allDay, copy.range.start);\n    }\n\n    return copy;\n  }\n\n  function reduceEventStore(eventStore, action, eventSources, dateProfile, calendar) {\n    switch (action.type) {\n      case 'RECEIVE_EVENTS':\n        // raw\n        return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, calendar);\n\n      case 'ADD_EVENTS':\n        // already parsed, but not expanded\n        return addEvent(eventStore, action.eventStore, // new ones\n        dateProfile ? dateProfile.activeRange : null, calendar);\n\n      case 'MERGE_EVENTS':\n        // already parsed and expanded\n        return mergeEventStores(eventStore, action.eventStore);\n\n      case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n\n      case 'NEXT':\n      case 'SET_DATE':\n      case 'SET_VIEW_TYPE':\n        if (dateProfile) {\n          return expandRecurring(eventStore, dateProfile.activeRange, calendar);\n        } else {\n          return eventStore;\n        }\n\n      case 'CHANGE_TIMEZONE':\n        return rezoneDates(eventStore, action.oldDateEnv, calendar.dateEnv);\n\n      case 'MUTATE_EVENTS':\n        return applyMutationToRelated(eventStore, action.instanceId, action.mutation, action.fromApi, calendar);\n\n      case 'REMOVE_EVENT_INSTANCES':\n        return excludeInstances(eventStore, action.instances);\n\n      case 'REMOVE_EVENT_DEF':\n        return filterEventStoreDefs(eventStore, function (eventDef) {\n          return eventDef.defId !== action.defId;\n        });\n\n      case 'REMOVE_EVENT_SOURCE':\n        return excludeEventsBySourceId(eventStore, action.sourceId);\n\n      case 'REMOVE_ALL_EVENT_SOURCES':\n        return filterEventStoreDefs(eventStore, function (eventDef) {\n          return !eventDef.sourceId; // only keep events with no source id\n        });\n\n      case 'REMOVE_ALL_EVENTS':\n        return createEmptyEventStore();\n\n      case 'RESET_EVENTS':\n        return {\n          defs: eventStore.defs,\n          instances: eventStore.instances\n        };\n\n      default:\n        return eventStore;\n    }\n  }\n\n  function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, calendar) {\n    if (eventSource && // not already removed\n    fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources\n    ) {\n        var subset = parseEvents(transformRawEvents(rawEvents, eventSource, calendar), eventSource.sourceId, calendar);\n\n        if (fetchRange) {\n          subset = expandRecurring(subset, fetchRange, calendar);\n        }\n\n        return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);\n      }\n\n    return eventStore;\n  }\n\n  function addEvent(eventStore, subset, expandRange, calendar) {\n    if (expandRange) {\n      subset = expandRecurring(subset, expandRange, calendar);\n    }\n\n    return mergeEventStores(eventStore, subset);\n  }\n\n  function rezoneDates(eventStore, oldDateEnv, newDateEnv) {\n    var defs = eventStore.defs;\n    var instances = mapHash(eventStore.instances, function (instance) {\n      var def = defs[instance.defId];\n\n      if (def.allDay || def.recurringDef) {\n        return instance; // isn't dependent on timezone\n      } else {\n        return __assign({}, instance, {\n          range: {\n            start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),\n            end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo))\n          },\n          forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo,\n          forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo\n        });\n      }\n    });\n    return {\n      defs: defs,\n      instances: instances\n    };\n  }\n\n  function applyMutationToRelated(eventStore, instanceId, mutation, fromApi, calendar) {\n    var relevant = getRelevantEvents(eventStore, instanceId);\n    var eventConfigBase = fromApi ? {\n      '': {\n        startEditable: true,\n        durationEditable: true,\n        constraints: [],\n        overlap: null,\n        allows: [],\n        backgroundColor: '',\n        borderColor: '',\n        textColor: '',\n        classNames: []\n      }\n    } : calendar.eventUiBases;\n    relevant = applyMutationToEventStore(relevant, eventConfigBase, mutation, calendar);\n    return mergeEventStores(eventStore, relevant);\n  }\n\n  function excludeEventsBySourceId(eventStore, sourceId) {\n    return filterEventStoreDefs(eventStore, function (eventDef) {\n      return eventDef.sourceId !== sourceId;\n    });\n  } // QUESTION: why not just return instances? do a general object-property-exclusion util\n\n\n  function excludeInstances(eventStore, removals) {\n    return {\n      defs: eventStore.defs,\n      instances: filterHash(eventStore.instances, function (instance) {\n        return !removals[instance.instanceId];\n      })\n    };\n  } // high-level segmenting-aware tester functions\n  // ------------------------------------------------------------------------------------------------------------------------\n\n\n  function isInteractionValid(interaction, calendar) {\n    return isNewPropsValid({\n      eventDrag: interaction\n    }, calendar); // HACK: the eventDrag props is used for ALL interactions\n  }\n\n  function isDateSelectionValid(dateSelection, calendar) {\n    return isNewPropsValid({\n      dateSelection: dateSelection\n    }, calendar);\n  }\n\n  function isNewPropsValid(newProps, calendar) {\n    var view = calendar.view;\n\n    var props = __assign({\n      businessHours: view ? view.props.businessHours : createEmptyEventStore(),\n      dateSelection: '',\n      eventStore: calendar.state.eventStore,\n      eventUiBases: calendar.eventUiBases,\n      eventSelection: '',\n      eventDrag: null,\n      eventResize: null\n    }, newProps);\n\n    return (calendar.pluginSystem.hooks.isPropsValid || isPropsValid)(props, calendar);\n  }\n\n  function isPropsValid(state, calendar, dateSpanMeta, filterConfig) {\n    if (dateSpanMeta === void 0) {\n      dateSpanMeta = {};\n    }\n\n    if (state.eventDrag && !isInteractionPropsValid(state, calendar, dateSpanMeta, filterConfig)) {\n      return false;\n    }\n\n    if (state.dateSelection && !isDateSelectionPropsValid(state, calendar, dateSpanMeta, filterConfig)) {\n      return false;\n    }\n\n    return true;\n  } // Moving Event Validation\n  // ------------------------------------------------------------------------------------------------------------------------\n\n\n  function isInteractionPropsValid(state, calendar, dateSpanMeta, filterConfig) {\n    var interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions\n\n    var subjectEventStore = interaction.mutatedEvents;\n    var subjectDefs = subjectEventStore.defs;\n    var subjectInstances = subjectEventStore.instances;\n    var subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ? state.eventUiBases : {\n      '': calendar.selectionConfig // if not a real event, validate as a selection\n\n    });\n\n    if (filterConfig) {\n      subjectConfigs = mapHash(subjectConfigs, filterConfig);\n    }\n\n    var otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances); // exclude the subject events. TODO: exclude defs too?\n\n    var otherDefs = otherEventStore.defs;\n    var otherInstances = otherEventStore.instances;\n    var otherConfigs = compileEventUis(otherDefs, state.eventUiBases);\n\n    for (var subjectInstanceId in subjectInstances) {\n      var subjectInstance = subjectInstances[subjectInstanceId];\n      var subjectRange = subjectInstance.range;\n      var subjectConfig = subjectConfigs[subjectInstance.defId];\n      var subjectDef = subjectDefs[subjectInstance.defId]; // constraint\n\n      if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, calendar)) {\n        return false;\n      } // overlap\n\n\n      var overlapFunc = calendar.opt('eventOverlap');\n\n      if (typeof overlapFunc !== 'function') {\n        overlapFunc = null;\n      }\n\n      for (var otherInstanceId in otherInstances) {\n        var otherInstance = otherInstances[otherInstanceId]; // intersect! evaluate\n\n        if (rangesIntersect(subjectRange, otherInstance.range)) {\n          var otherOverlap = otherConfigs[otherInstance.defId].overlap; // consider the other event's overlap. only do this if the subject event is a \"real\" event\n\n          if (otherOverlap === false && interaction.isEvent) {\n            return false;\n          }\n\n          if (subjectConfig.overlap === false) {\n            return false;\n          }\n\n          if (overlapFunc && !overlapFunc(new EventApi(calendar, otherDefs[otherInstance.defId], otherInstance), // still event\n          new EventApi(calendar, subjectDef, subjectInstance) // moving event\n          )) {\n            return false;\n          }\n        }\n      } // allow (a function)\n\n\n      for (var _i = 0, _a = subjectConfig.allows; _i < _a.length; _i++) {\n        var subjectAllow = _a[_i];\n\n        var subjectDateSpan = __assign({}, dateSpanMeta, {\n          range: subjectInstance.range,\n          allDay: subjectDef.allDay\n        });\n\n        var origDef = state.eventStore.defs[subjectDef.defId];\n        var origInstance = state.eventStore.instances[subjectInstanceId];\n        var eventApi = void 0;\n\n        if (origDef) {\n          // was previously in the calendar\n          eventApi = new EventApi(calendar, origDef, origInstance);\n        } else {\n          // was an external event\n          eventApi = new EventApi(calendar, subjectDef); // no instance, because had no dates\n        }\n\n        if (!subjectAllow(calendar.buildDateSpanApi(subjectDateSpan), eventApi)) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  } // Date Selection Validation\n  // ------------------------------------------------------------------------------------------------------------------------\n\n\n  function isDateSelectionPropsValid(state, calendar, dateSpanMeta, filterConfig) {\n    var relevantEventStore = state.eventStore;\n    var relevantDefs = relevantEventStore.defs;\n    var relevantInstances = relevantEventStore.instances;\n    var selection = state.dateSelection;\n    var selectionRange = selection.range;\n    var selectionConfig = calendar.selectionConfig;\n\n    if (filterConfig) {\n      selectionConfig = filterConfig(selectionConfig);\n    } // constraint\n\n\n    if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, calendar)) {\n      return false;\n    } // overlap\n\n\n    var overlapFunc = calendar.opt('selectOverlap');\n\n    if (typeof overlapFunc !== 'function') {\n      overlapFunc = null;\n    }\n\n    for (var relevantInstanceId in relevantInstances) {\n      var relevantInstance = relevantInstances[relevantInstanceId]; // intersect! evaluate\n\n      if (rangesIntersect(selectionRange, relevantInstance.range)) {\n        if (selectionConfig.overlap === false) {\n          return false;\n        }\n\n        if (overlapFunc && !overlapFunc(new EventApi(calendar, relevantDefs[relevantInstance.defId], relevantInstance))) {\n          return false;\n        }\n      }\n    } // allow (a function)\n\n\n    for (var _i = 0, _a = selectionConfig.allows; _i < _a.length; _i++) {\n      var selectionAllow = _a[_i];\n\n      var fullDateSpan = __assign({}, dateSpanMeta, selection);\n\n      if (!selectionAllow(calendar.buildDateSpanApi(fullDateSpan), null)) {\n        return false;\n      }\n    }\n\n    return true;\n  } // Constraint Utils\n  // ------------------------------------------------------------------------------------------------------------------------\n\n\n  function allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, calendar) {\n    for (var _i = 0, constraints_1 = constraints; _i < constraints_1.length; _i++) {\n      var constraint = constraints_1[_i];\n\n      if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, calendar), subjectRange)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours\n  otherEventStore, // for if constraint is an even group ID\n  businessHoursUnexpanded, // for if constraint is 'businessHours'\n  calendar // for expanding businesshours\n  ) {\n    if (constraint === 'businessHours') {\n      return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, calendar));\n    } else if (typeof constraint === 'string') {\n      // an group ID\n      return eventStoreToRanges(filterEventStoreDefs(otherEventStore, function (eventDef) {\n        return eventDef.groupId === constraint;\n      }));\n    } else if (typeof constraint === 'object' && constraint) {\n      // non-null object\n      return eventStoreToRanges(expandRecurring(constraint, subjectRange, calendar));\n    }\n\n    return []; // if it's false\n  } // TODO: move to event-store file?\n\n\n  function eventStoreToRanges(eventStore) {\n    var instances = eventStore.instances;\n    var ranges = [];\n\n    for (var instanceId in instances) {\n      ranges.push(instances[instanceId].range);\n    }\n\n    return ranges;\n  } // TODO: move to geom file?\n\n\n  function anyRangesContainRange(outerRanges, innerRange) {\n    for (var _i = 0, outerRanges_1 = outerRanges; _i < outerRanges_1.length; _i++) {\n      var outerRange = outerRanges_1[_i];\n\n      if (rangeContainsRange(outerRange, innerRange)) {\n        return true;\n      }\n    }\n\n    return false;\n  } // Parsing\n  // ------------------------------------------------------------------------------------------------------------------------\n\n\n  function normalizeConstraint(input, calendar) {\n    if (Array.isArray(input)) {\n      return parseEvents(input, '', calendar, true); // allowOpenRange=true\n    } else if (typeof input === 'object' && input) {\n      // non-null object\n      return parseEvents([input], '', calendar, true); // allowOpenRange=true\n    } else if (input != null) {\n      return String(input);\n    } else {\n      return null;\n    }\n  }\n\n  function htmlEscape(s) {\n    return (s + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&#039;').replace(/\"/g, '&quot;').replace(/\\n/g, '<br />');\n  } // Given a hash of CSS properties, returns a string of CSS.\n  // Uses property names as-is (no camel-case conversion). Will not make statements for null/undefined values.\n\n\n  function cssToStr(cssProps) {\n    var statements = [];\n\n    for (var name_1 in cssProps) {\n      var val = cssProps[name_1];\n\n      if (val != null && val !== '') {\n        statements.push(name_1 + ':' + val);\n      }\n    }\n\n    return statements.join(';');\n  } // Given an object hash of HTML attribute names to values,\n  // generates a string that can be injected between < > in HTML\n\n\n  function attrsToStr(attrs) {\n    var parts = [];\n\n    for (var name_2 in attrs) {\n      var val = attrs[name_2];\n\n      if (val != null) {\n        parts.push(name_2 + '=\"' + htmlEscape(val) + '\"');\n      }\n    }\n\n    return parts.join(' ');\n  }\n\n  function parseClassName(raw) {\n    if (Array.isArray(raw)) {\n      return raw;\n    } else if (typeof raw === 'string') {\n      return raw.split(/\\s+/);\n    } else {\n      return [];\n    }\n  }\n\n  var UNSCOPED_EVENT_UI_PROPS = {\n    editable: Boolean,\n    startEditable: Boolean,\n    durationEditable: Boolean,\n    constraint: null,\n    overlap: null,\n    allow: null,\n    className: parseClassName,\n    classNames: parseClassName,\n    color: String,\n    backgroundColor: String,\n    borderColor: String,\n    textColor: String\n  };\n\n  function processUnscopedUiProps(rawProps, calendar, leftovers) {\n    var props = refineProps(rawProps, UNSCOPED_EVENT_UI_PROPS, {}, leftovers);\n    var constraint = normalizeConstraint(props.constraint, calendar);\n    return {\n      startEditable: props.startEditable != null ? props.startEditable : props.editable,\n      durationEditable: props.durationEditable != null ? props.durationEditable : props.editable,\n      constraints: constraint != null ? [constraint] : [],\n      overlap: props.overlap,\n      allows: props.allow != null ? [props.allow] : [],\n      backgroundColor: props.backgroundColor || props.color,\n      borderColor: props.borderColor || props.color,\n      textColor: props.textColor,\n      classNames: props.classNames.concat(props.className)\n    };\n  }\n\n  function processScopedUiProps(prefix, rawScoped, calendar, leftovers) {\n    var rawUnscoped = {};\n    var wasFound = {};\n\n    for (var key in UNSCOPED_EVENT_UI_PROPS) {\n      var scopedKey = prefix + capitaliseFirstLetter(key);\n      rawUnscoped[key] = rawScoped[scopedKey];\n      wasFound[scopedKey] = true;\n    }\n\n    if (prefix === 'event') {\n      rawUnscoped.editable = rawScoped.editable; // special case. there is no 'eventEditable', just 'editable'\n    }\n\n    if (leftovers) {\n      for (var key in rawScoped) {\n        if (!wasFound[key]) {\n          leftovers[key] = rawScoped[key];\n        }\n      }\n    }\n\n    return processUnscopedUiProps(rawUnscoped, calendar);\n  }\n\n  var EMPTY_EVENT_UI = {\n    startEditable: null,\n    durationEditable: null,\n    constraints: [],\n    overlap: null,\n    allows: [],\n    backgroundColor: '',\n    borderColor: '',\n    textColor: '',\n    classNames: []\n  }; // prevent against problems with <2 args!\n\n  function combineEventUis(uis) {\n    return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);\n  }\n\n  function combineTwoEventUis(item0, item1) {\n    return {\n      startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,\n      durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,\n      constraints: item0.constraints.concat(item1.constraints),\n      overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,\n      allows: item0.allows.concat(item1.allows),\n      backgroundColor: item1.backgroundColor || item0.backgroundColor,\n      borderColor: item1.borderColor || item0.borderColor,\n      textColor: item1.textColor || item0.textColor,\n      classNames: item0.classNames.concat(item1.classNames)\n    };\n  }\n\n  var NON_DATE_PROPS = {\n    id: String,\n    groupId: String,\n    title: String,\n    url: String,\n    rendering: String,\n    extendedProps: null\n  };\n  var DATE_PROPS = {\n    start: null,\n    date: null,\n    end: null,\n    allDay: null\n  };\n  var uid = 0;\n\n  function parseEvent(raw, sourceId, calendar, allowOpenRange) {\n    var allDayDefault = computeIsAllDayDefault(sourceId, calendar);\n    var leftovers0 = {};\n    var recurringRes = parseRecurring(raw, // raw, but with single-event stuff stripped out\n    allDayDefault, calendar.dateEnv, calendar.pluginSystem.hooks.recurringTypes, leftovers0 // will populate with non-recurring props\n    );\n\n    if (recurringRes) {\n      var def = parseEventDef(leftovers0, sourceId, recurringRes.allDay, Boolean(recurringRes.duration), calendar);\n      def.recurringDef = {\n        typeId: recurringRes.typeId,\n        typeData: recurringRes.typeData,\n        duration: recurringRes.duration\n      };\n      return {\n        def: def,\n        instance: null\n      };\n    } else {\n      var leftovers1 = {};\n      var singleRes = parseSingle(raw, allDayDefault, calendar, leftovers1, allowOpenRange);\n\n      if (singleRes) {\n        var def = parseEventDef(leftovers1, sourceId, singleRes.allDay, singleRes.hasEnd, calendar);\n        var instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);\n        return {\n          def: def,\n          instance: instance\n        };\n      }\n    }\n\n    return null;\n  }\n  /*\n  Will NOT populate extendedProps with the leftover properties.\n  Will NOT populate date-related props.\n  The EventNonDateInput has been normalized (id => publicId, etc).\n  */\n\n\n  function parseEventDef(raw, sourceId, allDay, hasEnd, calendar) {\n    var leftovers = {};\n    var def = pluckNonDateProps(raw, calendar, leftovers);\n    def.defId = String(uid++);\n    def.sourceId = sourceId;\n    def.allDay = allDay;\n    def.hasEnd = hasEnd;\n\n    for (var _i = 0, _a = calendar.pluginSystem.hooks.eventDefParsers; _i < _a.length; _i++) {\n      var eventDefParser = _a[_i];\n      var newLeftovers = {};\n      eventDefParser(def, leftovers, newLeftovers);\n      leftovers = newLeftovers;\n    }\n\n    def.extendedProps = __assign(leftovers, def.extendedProps || {}); // help out EventApi from having user modify props\n\n    Object.freeze(def.ui.classNames);\n    Object.freeze(def.extendedProps);\n    return def;\n  }\n\n  function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {\n    return {\n      instanceId: String(uid++),\n      defId: defId,\n      range: range,\n      forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,\n      forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo\n    };\n  }\n\n  function parseSingle(raw, allDayDefault, calendar, leftovers, allowOpenRange) {\n    var props = pluckDateProps(raw, leftovers);\n    var allDay = props.allDay;\n    var startMeta;\n    var startMarker = null;\n    var hasEnd = false;\n    var endMeta;\n    var endMarker = null;\n    startMeta = calendar.dateEnv.createMarkerMeta(props.start);\n\n    if (startMeta) {\n      startMarker = startMeta.marker;\n    } else if (!allowOpenRange) {\n      return null;\n    }\n\n    if (props.end != null) {\n      endMeta = calendar.dateEnv.createMarkerMeta(props.end);\n    }\n\n    if (allDay == null) {\n      if (allDayDefault != null) {\n        allDay = allDayDefault;\n      } else {\n        // fall back to the date props LAST\n        allDay = (!startMeta || startMeta.isTimeUnspecified) && (!endMeta || endMeta.isTimeUnspecified);\n      }\n    }\n\n    if (allDay && startMarker) {\n      startMarker = startOfDay(startMarker);\n    }\n\n    if (endMeta) {\n      endMarker = endMeta.marker;\n\n      if (allDay) {\n        endMarker = startOfDay(endMarker);\n      }\n\n      if (startMarker && endMarker <= startMarker) {\n        endMarker = null;\n      }\n    }\n\n    if (endMarker) {\n      hasEnd = true;\n    } else if (!allowOpenRange) {\n      hasEnd = calendar.opt('forceEventDuration') || false;\n      endMarker = calendar.dateEnv.add(startMarker, allDay ? calendar.defaultAllDayEventDuration : calendar.defaultTimedEventDuration);\n    }\n\n    return {\n      allDay: allDay,\n      hasEnd: hasEnd,\n      range: {\n        start: startMarker,\n        end: endMarker\n      },\n      forcedStartTzo: startMeta ? startMeta.forcedTzo : null,\n      forcedEndTzo: endMeta ? endMeta.forcedTzo : null\n    };\n  }\n\n  function pluckDateProps(raw, leftovers) {\n    var props = refineProps(raw, DATE_PROPS, {}, leftovers);\n    props.start = props.start !== null ? props.start : props.date;\n    delete props.date;\n    return props;\n  }\n\n  function pluckNonDateProps(raw, calendar, leftovers) {\n    var preLeftovers = {};\n    var props = refineProps(raw, NON_DATE_PROPS, {}, preLeftovers);\n    var ui = processUnscopedUiProps(preLeftovers, calendar, leftovers);\n    props.publicId = props.id;\n    delete props.id;\n    props.ui = ui;\n    return props;\n  }\n\n  function computeIsAllDayDefault(sourceId, calendar) {\n    var res = null;\n\n    if (sourceId) {\n      var source = calendar.state.eventSources[sourceId];\n      res = source.allDayDefault;\n    }\n\n    if (res == null) {\n      res = calendar.opt('allDayDefault');\n    }\n\n    return res;\n  }\n\n  var DEF_DEFAULTS = {\n    startTime: '09:00',\n    endTime: '17:00',\n    daysOfWeek: [1, 2, 3, 4, 5],\n    rendering: 'inverse-background',\n    classNames: 'fc-nonbusiness',\n    groupId: '_businessHours' // so multiple defs get grouped\n\n  };\n  /*\n  TODO: pass around as EventDefHash!!!\n  */\n\n  function parseBusinessHours(input, calendar) {\n    return parseEvents(refineInputs(input), '', calendar);\n  }\n\n  function refineInputs(input) {\n    var rawDefs;\n\n    if (input === true) {\n      rawDefs = [{}]; // will get DEF_DEFAULTS verbatim\n    } else if (Array.isArray(input)) {\n      // if specifying an array, every sub-definition NEEDS a day-of-week\n      rawDefs = input.filter(function (rawDef) {\n        return rawDef.daysOfWeek;\n      });\n    } else if (typeof input === 'object' && input) {\n      // non-null object\n      rawDefs = [input];\n    } else {\n      // is probably false\n      rawDefs = [];\n    }\n\n    rawDefs = rawDefs.map(function (rawDef) {\n      return __assign({}, DEF_DEFAULTS, rawDef);\n    });\n    return rawDefs;\n  }\n\n  function memoizeRendering(renderFunc, unrenderFunc, dependencies) {\n    if (dependencies === void 0) {\n      dependencies = [];\n    }\n\n    var dependents = [];\n    var thisContext;\n    var prevArgs;\n\n    function unrender() {\n      if (prevArgs) {\n        for (var _i = 0, dependents_1 = dependents; _i < dependents_1.length; _i++) {\n          var dependent = dependents_1[_i];\n          dependent.unrender();\n        }\n\n        if (unrenderFunc) {\n          unrenderFunc.apply(thisContext, prevArgs);\n        }\n\n        prevArgs = null;\n      }\n    }\n\n    function res() {\n      if (!prevArgs || !isArraysEqual(prevArgs, arguments)) {\n        unrender();\n        thisContext = this;\n        prevArgs = arguments;\n        renderFunc.apply(this, arguments);\n      }\n    }\n\n    res.dependents = dependents;\n    res.unrender = unrender;\n\n    for (var _i = 0, dependencies_1 = dependencies; _i < dependencies_1.length; _i++) {\n      var dependency = dependencies_1[_i];\n      dependency.dependents.push(res);\n    }\n\n    return res;\n  }\n\n  function isValuesSimilar(val0, val1, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n\n    if (val0 === val1) {\n      return true;\n    } else if (Array.isArray(val0) && Array.isArray(val1)) {\n      return isArraysSimilar(val0, val1, depth);\n    } else if (typeof val0 === 'object' && val0 && typeof val1 === 'object' && val1) {\n      // non-null objects\n      return isObjectsSimilar(val0, val1, depth);\n    } else {\n      return false;\n    }\n  }\n\n  function isArraysSimilar(a0, a1, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n\n    if (a0 === a1) {\n      return true;\n    } else if (depth > 0) {\n      if (a0.length !== a1.length) {\n        return false;\n      } else {\n        for (var i = 0; i < a0.length; i++) {\n          if (!isValuesSimilar(a0[i], a1[i], depth - 1)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  function isObjectsSimilar(obj0, obj1, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n\n    if (obj0 === obj1) {\n      return true;\n    } else if (depth > 0) {\n      for (var prop in obj0) {\n        if (!(prop in obj1)) {\n          return false;\n        }\n      }\n\n      for (var prop in obj1) {\n        if (!(prop in obj0)) {\n          return false;\n        } else {\n          if (!isValuesSimilar(obj0[prop], obj1[prop], depth - 1)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function computeChangedProps(obj0, obj1, depth) {\n    if (depth === void 0) {\n      depth = 1;\n    }\n\n    var res = {};\n\n    for (var prop in obj1) {\n      if (!(prop in obj0) || !isValuesSimilar(obj0[prop], obj1[prop], depth - 1)) {\n        res[prop] = obj1[prop];\n      }\n    }\n\n    return res;\n  }\n\n  function anyKeysRemoved(obj0, obj1) {\n    for (var prop in obj0) {\n      if (!(prop in obj1)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere\n\n  var Splitter =\n  /** @class */\n  function () {\n    function Splitter() {\n      this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);\n      this.splitDateSelection = memoize(this._splitDateSpan);\n      this.splitEventStore = memoize(this._splitEventStore);\n      this.splitIndividualUi = memoize(this._splitIndividualUi);\n      this.splitEventDrag = memoize(this._splitInteraction);\n      this.splitEventResize = memoize(this._splitInteraction);\n      this.eventUiBuilders = {}; // TODO: typescript protection\n    }\n\n    Splitter.prototype.splitProps = function (props) {\n      var _this = this;\n\n      var keyInfos = this.getKeyInfo(props);\n      var defKeys = this.getKeysForEventDefs(props.eventStore);\n      var dateSelections = this.splitDateSelection(props.dateSelection);\n      var individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*\n\n      var eventStores = this.splitEventStore(props.eventStore, defKeys);\n      var eventDrags = this.splitEventDrag(props.eventDrag);\n      var eventResizes = this.splitEventResize(props.eventResize);\n      var splitProps = {};\n      this.eventUiBuilders = mapHash(keyInfos, function (info, key) {\n        return _this.eventUiBuilders[key] || memoize(buildEventUiForKey);\n      });\n\n      for (var key in keyInfos) {\n        var keyInfo = keyInfos[key];\n        var eventStore = eventStores[key] || EMPTY_EVENT_STORE;\n        var buildEventUi = this.eventUiBuilders[key];\n        splitProps[key] = {\n          businessHours: keyInfo.businessHours || props.businessHours,\n          dateSelection: dateSelections[key] || null,\n          eventStore: eventStore,\n          eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),\n          eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',\n          eventDrag: eventDrags[key] || null,\n          eventResize: eventResizes[key] || null\n        };\n      }\n\n      return splitProps;\n    };\n\n    Splitter.prototype._splitDateSpan = function (dateSpan) {\n      var dateSpans = {};\n\n      if (dateSpan) {\n        var keys = this.getKeysForDateSpan(dateSpan);\n\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n          var key = keys_1[_i];\n          dateSpans[key] = dateSpan;\n        }\n      }\n\n      return dateSpans;\n    };\n\n    Splitter.prototype._getKeysForEventDefs = function (eventStore) {\n      var _this = this;\n\n      return mapHash(eventStore.defs, function (eventDef) {\n        return _this.getKeysForEventDef(eventDef);\n      });\n    };\n\n    Splitter.prototype._splitEventStore = function (eventStore, defKeys) {\n      var defs = eventStore.defs,\n          instances = eventStore.instances;\n      var splitStores = {};\n\n      for (var defId in defs) {\n        for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {\n          var key = _a[_i];\n\n          if (!splitStores[key]) {\n            splitStores[key] = createEmptyEventStore();\n          }\n\n          splitStores[key].defs[defId] = defs[defId];\n        }\n      }\n\n      for (var instanceId in instances) {\n        var instance = instances[instanceId];\n\n        for (var _b = 0, _c = defKeys[instance.defId]; _b < _c.length; _b++) {\n          var key = _c[_b];\n\n          if (splitStores[key]) {\n            // must have already been created\n            splitStores[key].instances[instanceId] = instance;\n          }\n        }\n      }\n\n      return splitStores;\n    };\n\n    Splitter.prototype._splitIndividualUi = function (eventUiBases, defKeys) {\n      var splitHashes = {};\n\n      for (var defId in eventUiBases) {\n        if (defId) {\n          // not the '' key\n          for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {\n            var key = _a[_i];\n\n            if (!splitHashes[key]) {\n              splitHashes[key] = {};\n            }\n\n            splitHashes[key][defId] = eventUiBases[defId];\n          }\n        }\n      }\n\n      return splitHashes;\n    };\n\n    Splitter.prototype._splitInteraction = function (interaction) {\n      var splitStates = {};\n\n      if (interaction) {\n        var affectedStores_1 = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents) // can't use cached. might be events from other calendar\n        ); // can't rely on defKeys because event data is mutated\n\n\n        var mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);\n\n        var mutatedStores_1 = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);\n\n        var populate = function (key) {\n          if (!splitStates[key]) {\n            splitStates[key] = {\n              affectedEvents: affectedStores_1[key] || EMPTY_EVENT_STORE,\n              mutatedEvents: mutatedStores_1[key] || EMPTY_EVENT_STORE,\n              isEvent: interaction.isEvent,\n              origSeg: interaction.origSeg\n            };\n          }\n        };\n\n        for (var key in affectedStores_1) {\n          populate(key);\n        }\n\n        for (var key in mutatedStores_1) {\n          populate(key);\n        }\n      }\n\n      return splitStates;\n    };\n\n    return Splitter;\n  }();\n\n  function buildEventUiForKey(allUi, eventUiForKey, individualUi) {\n    var baseParts = [];\n\n    if (allUi) {\n      baseParts.push(allUi);\n    }\n\n    if (eventUiForKey) {\n      baseParts.push(eventUiForKey);\n    }\n\n    var stuff = {\n      '': combineEventUis(baseParts)\n    };\n\n    if (individualUi) {\n      __assign(stuff, individualUi);\n    }\n\n    return stuff;\n  } // Generates HTML for an anchor to another view into the calendar.\n  // Will either generate an <a> tag or a non-clickable <span> tag, depending on enabled settings.\n  // `gotoOptions` can either be a DateMarker, or an object with the form:\n  // { date, type, forceOff }\n  // `type` is a view-type like \"day\" or \"week\". default value is \"day\".\n  // `attrs` and `innerHtml` are use to generate the rest of the HTML tag.\n\n\n  function buildGotoAnchorHtml(component, gotoOptions, attrs, innerHtml) {\n    var dateEnv = component.dateEnv;\n    var date;\n    var type;\n    var forceOff;\n    var finalOptions;\n\n    if (gotoOptions instanceof Date) {\n      date = gotoOptions; // a single date-like input\n    } else {\n      date = gotoOptions.date;\n      type = gotoOptions.type;\n      forceOff = gotoOptions.forceOff;\n    }\n\n    finalOptions = {\n      date: dateEnv.formatIso(date, {\n        omitTime: true\n      }),\n      type: type || 'day'\n    };\n\n    if (typeof attrs === 'string') {\n      innerHtml = attrs;\n      attrs = null;\n    }\n\n    attrs = attrs ? ' ' + attrsToStr(attrs) : ''; // will have a leading space\n\n    innerHtml = innerHtml || '';\n\n    if (!forceOff && component.opt('navLinks')) {\n      return '<a' + attrs + ' data-goto=\"' + htmlEscape(JSON.stringify(finalOptions)) + '\">' + innerHtml + '</a>';\n    } else {\n      return '<span' + attrs + '>' + innerHtml + '</span>';\n    }\n  }\n\n  function getAllDayHtml(component) {\n    return component.opt('allDayHtml') || htmlEscape(component.opt('allDayText'));\n  } // Computes HTML classNames for a single-day element\n\n\n  function getDayClasses(date, dateProfile, context, noThemeHighlight) {\n    var calendar = context.calendar,\n        view = context.view,\n        theme = context.theme,\n        dateEnv = context.dateEnv;\n    var classes = [];\n    var todayStart;\n    var todayEnd;\n\n    if (!rangeContainsMarker(dateProfile.activeRange, date)) {\n      classes.push('fc-disabled-day');\n    } else {\n      classes.push('fc-' + DAY_IDS[date.getUTCDay()]);\n\n      if (view.opt('monthMode') && dateEnv.getMonth(date) !== dateEnv.getMonth(dateProfile.currentRange.start)) {\n        classes.push('fc-other-month');\n      }\n\n      todayStart = startOfDay(calendar.getNow());\n      todayEnd = addDays(todayStart, 1);\n\n      if (date < todayStart) {\n        classes.push('fc-past');\n      } else if (date >= todayEnd) {\n        classes.push('fc-future');\n      } else {\n        classes.push('fc-today');\n\n        if (noThemeHighlight !== true) {\n          classes.push(theme.getClass('today'));\n        }\n      }\n    }\n\n    return classes;\n  } // given a function that resolves a result asynchronously.\n  // the function can either call passed-in success and failure callbacks,\n  // or it can return a promise.\n  // if you need to pass additional params to func, bind them first.\n\n\n  function unpromisify(func, success, failure) {\n    // guard against success/failure callbacks being called more than once\n    // and guard against a promise AND callback being used together.\n    var isResolved = false;\n\n    var wrappedSuccess = function () {\n      if (!isResolved) {\n        isResolved = true;\n        success.apply(this, arguments);\n      }\n    };\n\n    var wrappedFailure = function () {\n      if (!isResolved) {\n        isResolved = true;\n\n        if (failure) {\n          failure.apply(this, arguments);\n        }\n      }\n    };\n\n    var res = func(wrappedSuccess, wrappedFailure);\n\n    if (res && typeof res.then === 'function') {\n      res.then(wrappedSuccess, wrappedFailure);\n    }\n  }\n\n  var Mixin =\n  /** @class */\n  function () {\n    function Mixin() {} // mix into a CLASS\n\n\n    Mixin.mixInto = function (destClass) {\n      this.mixIntoObj(destClass.prototype);\n    }; // mix into ANY object\n\n\n    Mixin.mixIntoObj = function (destObj) {\n      var _this = this;\n\n      Object.getOwnPropertyNames(this.prototype).forEach(function (name) {\n        if (!destObj[name]) {\n          // if destination doesn't already define it\n          destObj[name] = _this.prototype[name];\n        }\n      });\n    };\n    /*\n    will override existing methods\n    TODO: remove! not used anymore\n    */\n\n\n    Mixin.mixOver = function (destClass) {\n      var _this = this;\n\n      Object.getOwnPropertyNames(this.prototype).forEach(function (name) {\n        destClass.prototype[name] = _this.prototype[name];\n      });\n    };\n\n    return Mixin;\n  }();\n  /*\n  USAGE:\n    import { default as EmitterMixin, EmitterInterface } from './EmitterMixin'\n  in class:\n    on: EmitterInterface['on']\n    one: EmitterInterface['one']\n    off: EmitterInterface['off']\n    trigger: EmitterInterface['trigger']\n    triggerWith: EmitterInterface['triggerWith']\n    hasHandlers: EmitterInterface['hasHandlers']\n  after class:\n    EmitterMixin.mixInto(TheClass)\n  */\n\n\n  var EmitterMixin =\n  /** @class */\n  function (_super) {\n    __extends(EmitterMixin, _super);\n\n    function EmitterMixin() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    EmitterMixin.prototype.on = function (type, handler) {\n      addToHash(this._handlers || (this._handlers = {}), type, handler);\n      return this; // for chaining\n    }; // todo: add comments\n\n\n    EmitterMixin.prototype.one = function (type, handler) {\n      addToHash(this._oneHandlers || (this._oneHandlers = {}), type, handler);\n      return this; // for chaining\n    };\n\n    EmitterMixin.prototype.off = function (type, handler) {\n      if (this._handlers) {\n        removeFromHash(this._handlers, type, handler);\n      }\n\n      if (this._oneHandlers) {\n        removeFromHash(this._oneHandlers, type, handler);\n      }\n\n      return this; // for chaining\n    };\n\n    EmitterMixin.prototype.trigger = function (type) {\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      this.triggerWith(type, this, args);\n      return this; // for chaining\n    };\n\n    EmitterMixin.prototype.triggerWith = function (type, context, args) {\n      if (this._handlers) {\n        applyAll(this._handlers[type], context, args);\n      }\n\n      if (this._oneHandlers) {\n        applyAll(this._oneHandlers[type], context, args);\n        delete this._oneHandlers[type]; // will never fire again\n      }\n\n      return this; // for chaining\n    };\n\n    EmitterMixin.prototype.hasHandlers = function (type) {\n      return this._handlers && this._handlers[type] && this._handlers[type].length || this._oneHandlers && this._oneHandlers[type] && this._oneHandlers[type].length;\n    };\n\n    return EmitterMixin;\n  }(Mixin);\n\n  function addToHash(hash, type, handler) {\n    (hash[type] || (hash[type] = [])).push(handler);\n  }\n\n  function removeFromHash(hash, type, handler) {\n    if (handler) {\n      if (hash[type]) {\n        hash[type] = hash[type].filter(function (func) {\n          return func !== handler;\n        });\n      }\n    } else {\n      delete hash[type]; // remove all handler funcs for this type\n    }\n  }\n  /*\n  Records offset information for a set of elements, relative to an origin element.\n  Can record the left/right OR the top/bottom OR both.\n  Provides methods for querying the cache by position.\n  */\n\n\n  var PositionCache =\n  /** @class */\n  function () {\n    function PositionCache(originEl, els, isHorizontal, isVertical) {\n      this.originEl = originEl;\n      this.els = els;\n      this.isHorizontal = isHorizontal;\n      this.isVertical = isVertical;\n    } // Queries the els for coordinates and stores them.\n    // Call this method before using and of the get* methods below.\n\n\n    PositionCache.prototype.build = function () {\n      var originEl = this.originEl;\n      var originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left\n\n      if (this.isHorizontal) {\n        this.buildElHorizontals(originClientRect.left);\n      }\n\n      if (this.isVertical) {\n        this.buildElVerticals(originClientRect.top);\n      }\n    }; // Populates the left/right internal coordinate arrays\n\n\n    PositionCache.prototype.buildElHorizontals = function (originClientLeft) {\n      var lefts = [];\n      var rights = [];\n\n      for (var _i = 0, _a = this.els; _i < _a.length; _i++) {\n        var el = _a[_i];\n        var rect = el.getBoundingClientRect();\n        lefts.push(rect.left - originClientLeft);\n        rights.push(rect.right - originClientLeft);\n      }\n\n      this.lefts = lefts;\n      this.rights = rights;\n    }; // Populates the top/bottom internal coordinate arrays\n\n\n    PositionCache.prototype.buildElVerticals = function (originClientTop) {\n      var tops = [];\n      var bottoms = [];\n\n      for (var _i = 0, _a = this.els; _i < _a.length; _i++) {\n        var el = _a[_i];\n        var rect = el.getBoundingClientRect();\n        tops.push(rect.top - originClientTop);\n        bottoms.push(rect.bottom - originClientTop);\n      }\n\n      this.tops = tops;\n      this.bottoms = bottoms;\n    }; // Given a left offset (from document left), returns the index of the el that it horizontally intersects.\n    // If no intersection is made, returns undefined.\n\n\n    PositionCache.prototype.leftToIndex = function (leftPosition) {\n      var lefts = this.lefts;\n      var rights = this.rights;\n      var len = lefts.length;\n      var i;\n\n      for (i = 0; i < len; i++) {\n        if (leftPosition >= lefts[i] && leftPosition < rights[i]) {\n          return i;\n        }\n      }\n    }; // Given a top offset (from document top), returns the index of the el that it vertically intersects.\n    // If no intersection is made, returns undefined.\n\n\n    PositionCache.prototype.topToIndex = function (topPosition) {\n      var tops = this.tops;\n      var bottoms = this.bottoms;\n      var len = tops.length;\n      var i;\n\n      for (i = 0; i < len; i++) {\n        if (topPosition >= tops[i] && topPosition < bottoms[i]) {\n          return i;\n        }\n      }\n    }; // Gets the width of the element at the given index\n\n\n    PositionCache.prototype.getWidth = function (leftIndex) {\n      return this.rights[leftIndex] - this.lefts[leftIndex];\n    }; // Gets the height of the element at the given index\n\n\n    PositionCache.prototype.getHeight = function (topIndex) {\n      return this.bottoms[topIndex] - this.tops[topIndex];\n    };\n\n    return PositionCache;\n  }();\n  /*\n  An object for getting/setting scroll-related information for an element.\n  Internally, this is done very differently for window versus DOM element,\n  so this object serves as a common interface.\n  */\n\n\n  var ScrollController =\n  /** @class */\n  function () {\n    function ScrollController() {}\n\n    ScrollController.prototype.getMaxScrollTop = function () {\n      return this.getScrollHeight() - this.getClientHeight();\n    };\n\n    ScrollController.prototype.getMaxScrollLeft = function () {\n      return this.getScrollWidth() - this.getClientWidth();\n    };\n\n    ScrollController.prototype.canScrollVertically = function () {\n      return this.getMaxScrollTop() > 0;\n    };\n\n    ScrollController.prototype.canScrollHorizontally = function () {\n      return this.getMaxScrollLeft() > 0;\n    };\n\n    ScrollController.prototype.canScrollUp = function () {\n      return this.getScrollTop() > 0;\n    };\n\n    ScrollController.prototype.canScrollDown = function () {\n      return this.getScrollTop() < this.getMaxScrollTop();\n    };\n\n    ScrollController.prototype.canScrollLeft = function () {\n      return this.getScrollLeft() > 0;\n    };\n\n    ScrollController.prototype.canScrollRight = function () {\n      return this.getScrollLeft() < this.getMaxScrollLeft();\n    };\n\n    return ScrollController;\n  }();\n\n  var ElementScrollController =\n  /** @class */\n  function (_super) {\n    __extends(ElementScrollController, _super);\n\n    function ElementScrollController(el) {\n      var _this = _super.call(this) || this;\n\n      _this.el = el;\n      return _this;\n    }\n\n    ElementScrollController.prototype.getScrollTop = function () {\n      return this.el.scrollTop;\n    };\n\n    ElementScrollController.prototype.getScrollLeft = function () {\n      return this.el.scrollLeft;\n    };\n\n    ElementScrollController.prototype.setScrollTop = function (top) {\n      this.el.scrollTop = top;\n    };\n\n    ElementScrollController.prototype.setScrollLeft = function (left) {\n      this.el.scrollLeft = left;\n    };\n\n    ElementScrollController.prototype.getScrollWidth = function () {\n      return this.el.scrollWidth;\n    };\n\n    ElementScrollController.prototype.getScrollHeight = function () {\n      return this.el.scrollHeight;\n    };\n\n    ElementScrollController.prototype.getClientHeight = function () {\n      return this.el.clientHeight;\n    };\n\n    ElementScrollController.prototype.getClientWidth = function () {\n      return this.el.clientWidth;\n    };\n\n    return ElementScrollController;\n  }(ScrollController);\n\n  var WindowScrollController =\n  /** @class */\n  function (_super) {\n    __extends(WindowScrollController, _super);\n\n    function WindowScrollController() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    WindowScrollController.prototype.getScrollTop = function () {\n      return window.pageYOffset;\n    };\n\n    WindowScrollController.prototype.getScrollLeft = function () {\n      return window.pageXOffset;\n    };\n\n    WindowScrollController.prototype.setScrollTop = function (n) {\n      window.scroll(window.pageXOffset, n);\n    };\n\n    WindowScrollController.prototype.setScrollLeft = function (n) {\n      window.scroll(n, window.pageYOffset);\n    };\n\n    WindowScrollController.prototype.getScrollWidth = function () {\n      return document.documentElement.scrollWidth;\n    };\n\n    WindowScrollController.prototype.getScrollHeight = function () {\n      return document.documentElement.scrollHeight;\n    };\n\n    WindowScrollController.prototype.getClientHeight = function () {\n      return document.documentElement.clientHeight;\n    };\n\n    WindowScrollController.prototype.getClientWidth = function () {\n      return document.documentElement.clientWidth;\n    };\n\n    return WindowScrollController;\n  }(ScrollController);\n  /*\n  Embodies a div that has potential scrollbars\n  */\n\n\n  var ScrollComponent =\n  /** @class */\n  function (_super) {\n    __extends(ScrollComponent, _super);\n\n    function ScrollComponent(overflowX, overflowY) {\n      var _this = _super.call(this, createElement('div', {\n        className: 'fc-scroller'\n      })) || this;\n\n      _this.overflowX = overflowX;\n      _this.overflowY = overflowY;\n\n      _this.applyOverflow();\n\n      return _this;\n    } // sets to natural height, unlocks overflow\n\n\n    ScrollComponent.prototype.clear = function () {\n      this.setHeight('auto');\n      this.applyOverflow();\n    };\n\n    ScrollComponent.prototype.destroy = function () {\n      removeElement(this.el);\n    }; // Overflow\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    ScrollComponent.prototype.applyOverflow = function () {\n      applyStyle(this.el, {\n        overflowX: this.overflowX,\n        overflowY: this.overflowY\n      });\n    }; // Causes any 'auto' overflow values to resolves to 'scroll' or 'hidden'.\n    // Useful for preserving scrollbar widths regardless of future resizes.\n    // Can pass in scrollbarWidths for optimization.\n\n\n    ScrollComponent.prototype.lockOverflow = function (scrollbarWidths) {\n      var overflowX = this.overflowX;\n      var overflowY = this.overflowY;\n      scrollbarWidths = scrollbarWidths || this.getScrollbarWidths();\n\n      if (overflowX === 'auto') {\n        overflowX = scrollbarWidths.bottom || // horizontal scrollbars?\n        this.canScrollHorizontally() // OR scrolling pane with massless scrollbars?\n        ? 'scroll' : 'hidden';\n      }\n\n      if (overflowY === 'auto') {\n        overflowY = scrollbarWidths.left || scrollbarWidths.right || // horizontal scrollbars?\n        this.canScrollVertically() // OR scrolling pane with massless scrollbars?\n        ? 'scroll' : 'hidden';\n      }\n\n      applyStyle(this.el, {\n        overflowX: overflowX,\n        overflowY: overflowY\n      });\n    };\n\n    ScrollComponent.prototype.setHeight = function (height) {\n      applyStyleProp(this.el, 'height', height);\n    };\n\n    ScrollComponent.prototype.getScrollbarWidths = function () {\n      var edges = computeEdges(this.el);\n      return {\n        left: edges.scrollbarLeft,\n        right: edges.scrollbarRight,\n        bottom: edges.scrollbarBottom\n      };\n    };\n\n    return ScrollComponent;\n  }(ElementScrollController);\n\n  var Theme =\n  /** @class */\n  function () {\n    function Theme(calendarOptions) {\n      this.calendarOptions = calendarOptions;\n      this.processIconOverride();\n    }\n\n    Theme.prototype.processIconOverride = function () {\n      if (this.iconOverrideOption) {\n        this.setIconOverride(this.calendarOptions[this.iconOverrideOption]);\n      }\n    };\n\n    Theme.prototype.setIconOverride = function (iconOverrideHash) {\n      var iconClassesCopy;\n      var buttonName;\n\n      if (typeof iconOverrideHash === 'object' && iconOverrideHash) {\n        // non-null object\n        iconClassesCopy = __assign({}, this.iconClasses);\n\n        for (buttonName in iconOverrideHash) {\n          iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);\n        }\n\n        this.iconClasses = iconClassesCopy;\n      } else if (iconOverrideHash === false) {\n        this.iconClasses = {};\n      }\n    };\n\n    Theme.prototype.applyIconOverridePrefix = function (className) {\n      var prefix = this.iconOverridePrefix;\n\n      if (prefix && className.indexOf(prefix) !== 0) {\n        // if not already present\n        className = prefix + className;\n      }\n\n      return className;\n    };\n\n    Theme.prototype.getClass = function (key) {\n      return this.classes[key] || '';\n    };\n\n    Theme.prototype.getIconClass = function (buttonName) {\n      var className = this.iconClasses[buttonName];\n\n      if (className) {\n        return this.baseIconClass + ' ' + className;\n      }\n\n      return '';\n    };\n\n    Theme.prototype.getCustomButtonIconClass = function (customButtonProps) {\n      var className;\n\n      if (this.iconOverrideCustomButtonOption) {\n        className = customButtonProps[this.iconOverrideCustomButtonOption];\n\n        if (className) {\n          return this.baseIconClass + ' ' + this.applyIconOverridePrefix(className);\n        }\n      }\n\n      return '';\n    };\n\n    return Theme;\n  }();\n\n  Theme.prototype.classes = {};\n  Theme.prototype.iconClasses = {};\n  Theme.prototype.baseIconClass = '';\n  Theme.prototype.iconOverridePrefix = '';\n  var guid = 0;\n\n  var Component =\n  /** @class */\n  function () {\n    function Component(context, isView) {\n      // HACK to populate view at top of component instantiation call chain\n      if (isView) {\n        context.view = this;\n      }\n\n      this.uid = String(guid++);\n      this.context = context;\n      this.dateEnv = context.dateEnv;\n      this.theme = context.theme;\n      this.view = context.view;\n      this.calendar = context.calendar;\n      this.isRtl = this.opt('dir') === 'rtl';\n    }\n\n    Component.addEqualityFuncs = function (newFuncs) {\n      this.prototype.equalityFuncs = __assign({}, this.prototype.equalityFuncs, newFuncs);\n    };\n\n    Component.prototype.opt = function (name) {\n      return this.context.options[name];\n    };\n\n    Component.prototype.receiveProps = function (props) {\n      var _a = recycleProps(this.props || {}, props, this.equalityFuncs),\n          anyChanges = _a.anyChanges,\n          comboProps = _a.comboProps;\n\n      this.props = comboProps;\n\n      if (anyChanges) {\n        this.render(comboProps);\n      }\n    };\n\n    Component.prototype.render = function (props) {}; // after destroy is called, this component won't ever be used again\n\n\n    Component.prototype.destroy = function () {};\n\n    return Component;\n  }();\n\n  Component.prototype.equalityFuncs = {};\n  /*\n  Reuses old values when equal. If anything is unequal, returns newProps as-is.\n  Great for PureComponent, but won't be feasible with React, so just eliminate and use React's DOM diffing.\n  */\n\n  function recycleProps(oldProps, newProps, equalityFuncs) {\n    var comboProps = {}; // some old, some new\n\n    var anyChanges = false;\n\n    for (var key in newProps) {\n      if (key in oldProps && (oldProps[key] === newProps[key] || equalityFuncs[key] && equalityFuncs[key](oldProps[key], newProps[key]))) {\n        // equal to old? use old prop\n        comboProps[key] = oldProps[key];\n      } else {\n        comboProps[key] = newProps[key];\n        anyChanges = true;\n      }\n    }\n\n    for (var key in oldProps) {\n      if (!(key in newProps)) {\n        anyChanges = true;\n        break;\n      }\n    }\n\n    return {\n      anyChanges: anyChanges,\n      comboProps: comboProps\n    };\n  }\n  /*\n  PURPOSES:\n  - hook up to fg, fill, and mirror renderers\n  - interface for dragging and hits\n  */\n\n\n  var DateComponent =\n  /** @class */\n  function (_super) {\n    __extends(DateComponent, _super);\n\n    function DateComponent(context, el, isView) {\n      var _this = _super.call(this, context, isView) || this;\n\n      _this.el = el;\n      return _this;\n    }\n\n    DateComponent.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      removeElement(this.el);\n    }; // TODO: WHAT ABOUT (sourceSeg && sourceSeg.component.doesDragMirror)\n    //\n    // Event Drag-n-Drop Rendering (for both events and external elements)\n    // ---------------------------------------------------------------------------------------------------------------\n\n    /*\n    renderEventDragSegs(state: EventSegUiInteractionState) {\n      if (state) {\n        let { isEvent, segs, sourceSeg } = state\n               if (this.eventRenderer) {\n          this.eventRenderer.hideByHash(state.affectedInstances)\n        }\n               // if the user is dragging something that is considered an event with real event data,\n        // and this component likes to do drag mirrors OR the component where the seg came from\n        // likes to do drag mirrors, then render a drag mirror.\n        if (isEvent && (this.doesDragMirror || sourceSeg && sourceSeg.component.doesDragMirror)) {\n          if (this.mirrorRenderer) {\n            this.mirrorRenderer.renderSegs(segs, { isDragging: true, sourceSeg })\n          }\n        }\n               // if it would be impossible to render a drag mirror OR this component likes to render\n        // highlights, then render a highlight.\n        if (!isEvent || this.doesDragHighlight) {\n          if (this.fillRenderer) {\n            this.fillRenderer.renderSegs('highlight', segs)\n          }\n        }\n      }\n    }\n    */\n    // Hit System\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    DateComponent.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n      return null; // this should be abstract\n    }; // Validation\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    DateComponent.prototype.isInteractionValid = function (interaction) {\n      var calendar = this.calendar;\n      var dateProfile = this.props.dateProfile; // HACK\n\n      var instances = interaction.mutatedEvents.instances;\n\n      if (dateProfile) {\n        // HACK for DayTile\n        for (var instanceId in instances) {\n          if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {\n            return false;\n          }\n        }\n      }\n\n      return isInteractionValid(interaction, calendar);\n    };\n\n    DateComponent.prototype.isDateSelectionValid = function (selection) {\n      var dateProfile = this.props.dateProfile; // HACK\n\n      if (dateProfile && // HACK for DayTile\n      !rangeContainsRange(dateProfile.validRange, selection.range)) {\n        return false;\n      }\n\n      return isDateSelectionValid(selection, this.calendar);\n    }; // Triggering\n    // -----------------------------------------------------------------------------------------------------------------\n    // TODO: move to Calendar\n\n\n    DateComponent.prototype.publiclyTrigger = function (name, args) {\n      var calendar = this.calendar;\n      return calendar.publiclyTrigger(name, args);\n    };\n\n    DateComponent.prototype.publiclyTriggerAfterSizing = function (name, args) {\n      var calendar = this.calendar;\n      return calendar.publiclyTriggerAfterSizing(name, args);\n    };\n\n    DateComponent.prototype.hasPublicHandlers = function (name) {\n      var calendar = this.calendar;\n      return calendar.hasPublicHandlers(name);\n    };\n\n    DateComponent.prototype.triggerRenderedSegs = function (segs, isMirrors) {\n      var calendar = this.calendar;\n\n      if (this.hasPublicHandlers('eventPositioned')) {\n        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n          var seg = segs_1[_i];\n          this.publiclyTriggerAfterSizing('eventPositioned', [{\n            event: new EventApi(calendar, seg.eventRange.def, seg.eventRange.instance),\n            isMirror: isMirrors,\n            isStart: seg.isStart,\n            isEnd: seg.isEnd,\n            el: seg.el,\n            view: this // ?\n\n          }]);\n        }\n      }\n\n      if (!calendar.state.loadingLevel) {\n        // avoid initial empty state while pending\n        calendar.afterSizingTriggers._eventsPositioned = [null]; // fire once\n      }\n    };\n\n    DateComponent.prototype.triggerWillRemoveSegs = function (segs, isMirrors) {\n      var calendar = this.calendar;\n\n      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n        var seg = segs_2[_i];\n        calendar.trigger('eventElRemove', seg.el);\n      }\n\n      if (this.hasPublicHandlers('eventDestroy')) {\n        for (var _a = 0, segs_3 = segs; _a < segs_3.length; _a++) {\n          var seg = segs_3[_a];\n          this.publiclyTrigger('eventDestroy', [{\n            event: new EventApi(calendar, seg.eventRange.def, seg.eventRange.instance),\n            isMirror: isMirrors,\n            el: seg.el,\n            view: this // ?\n\n          }]);\n        }\n      }\n    }; // Pointer Interaction Utils\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    DateComponent.prototype.isValidSegDownEl = function (el) {\n      return !this.props.eventDrag && // HACK\n      !this.props.eventResize && // HACK\n      !elementClosest(el, '.fc-mirror') && (this.isPopover() || !this.isInPopover(el)); // ^above line ensures we don't detect a seg interaction within a nested component.\n      // it's a HACK because it only supports a popover as the nested component.\n    };\n\n    DateComponent.prototype.isValidDateDownEl = function (el) {\n      var segEl = elementClosest(el, this.fgSegSelector);\n      return (!segEl || segEl.classList.contains('fc-mirror')) && !elementClosest(el, '.fc-more') && // a \"more..\" link\n      !elementClosest(el, 'a[data-goto]') && // a clickable nav link\n      !this.isInPopover(el);\n    };\n\n    DateComponent.prototype.isPopover = function () {\n      return this.el.classList.contains('fc-popover');\n    };\n\n    DateComponent.prototype.isInPopover = function (el) {\n      return Boolean(elementClosest(el, '.fc-popover'));\n    };\n\n    return DateComponent;\n  }(Component);\n\n  DateComponent.prototype.fgSegSelector = '.fc-event-container > *';\n  DateComponent.prototype.bgSegSelector = '.fc-bgevent:not(.fc-nonbusiness)';\n  var uid$1 = 0;\n\n  function createPlugin(input) {\n    return {\n      id: String(uid$1++),\n      deps: input.deps || [],\n      reducers: input.reducers || [],\n      eventDefParsers: input.eventDefParsers || [],\n      eventDragMutationMassagers: input.eventDragMutationMassagers || [],\n      eventDefMutationAppliers: input.eventDefMutationAppliers || [],\n      dateSelectionTransformers: input.dateSelectionTransformers || [],\n      datePointTransforms: input.datePointTransforms || [],\n      dateSpanTransforms: input.dateSpanTransforms || [],\n      views: input.views || {},\n      viewPropsTransformers: input.viewPropsTransformers || [],\n      isPropsValid: input.isPropsValid || null,\n      externalDefTransforms: input.externalDefTransforms || [],\n      eventResizeJoinTransforms: input.eventResizeJoinTransforms || [],\n      viewContainerModifiers: input.viewContainerModifiers || [],\n      eventDropTransformers: input.eventDropTransformers || [],\n      componentInteractions: input.componentInteractions || [],\n      calendarInteractions: input.calendarInteractions || [],\n      themeClasses: input.themeClasses || {},\n      eventSourceDefs: input.eventSourceDefs || [],\n      cmdFormatter: input.cmdFormatter,\n      recurringTypes: input.recurringTypes || [],\n      namedTimeZonedImpl: input.namedTimeZonedImpl,\n      defaultView: input.defaultView || '',\n      elementDraggingImpl: input.elementDraggingImpl,\n      optionChangeHandlers: input.optionChangeHandlers || {}\n    };\n  }\n\n  var PluginSystem =\n  /** @class */\n  function () {\n    function PluginSystem() {\n      this.hooks = {\n        reducers: [],\n        eventDefParsers: [],\n        eventDragMutationMassagers: [],\n        eventDefMutationAppliers: [],\n        dateSelectionTransformers: [],\n        datePointTransforms: [],\n        dateSpanTransforms: [],\n        views: {},\n        viewPropsTransformers: [],\n        isPropsValid: null,\n        externalDefTransforms: [],\n        eventResizeJoinTransforms: [],\n        viewContainerModifiers: [],\n        eventDropTransformers: [],\n        componentInteractions: [],\n        calendarInteractions: [],\n        themeClasses: {},\n        eventSourceDefs: [],\n        cmdFormatter: null,\n        recurringTypes: [],\n        namedTimeZonedImpl: null,\n        defaultView: '',\n        elementDraggingImpl: null,\n        optionChangeHandlers: {}\n      };\n      this.addedHash = {};\n    }\n\n    PluginSystem.prototype.add = function (plugin) {\n      if (!this.addedHash[plugin.id]) {\n        this.addedHash[plugin.id] = true;\n\n        for (var _i = 0, _a = plugin.deps; _i < _a.length; _i++) {\n          var dep = _a[_i];\n          this.add(dep);\n        }\n\n        this.hooks = combineHooks(this.hooks, plugin);\n      }\n    };\n\n    return PluginSystem;\n  }();\n\n  function combineHooks(hooks0, hooks1) {\n    return {\n      reducers: hooks0.reducers.concat(hooks1.reducers),\n      eventDefParsers: hooks0.eventDefParsers.concat(hooks1.eventDefParsers),\n      eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),\n      eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),\n      dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),\n      datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),\n      dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),\n      views: __assign({}, hooks0.views, hooks1.views),\n      viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),\n      isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,\n      externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),\n      eventResizeJoinTransforms: hooks0.eventResizeJoinTransforms.concat(hooks1.eventResizeJoinTransforms),\n      viewContainerModifiers: hooks0.viewContainerModifiers.concat(hooks1.viewContainerModifiers),\n      eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),\n      calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),\n      componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),\n      themeClasses: __assign({}, hooks0.themeClasses, hooks1.themeClasses),\n      eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),\n      cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,\n      recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),\n      namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,\n      defaultView: hooks0.defaultView || hooks1.defaultView,\n      elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,\n      optionChangeHandlers: __assign({}, hooks0.optionChangeHandlers, hooks1.optionChangeHandlers)\n    };\n  }\n\n  var eventSourceDef = {\n    ignoreRange: true,\n    parseMeta: function (raw) {\n      if (Array.isArray(raw)) {\n        // short form\n        return raw;\n      } else if (Array.isArray(raw.events)) {\n        return raw.events;\n      }\n\n      return null;\n    },\n    fetch: function (arg, success) {\n      success({\n        rawEvents: arg.eventSource.meta\n      });\n    }\n  };\n  var ArrayEventSourcePlugin = createPlugin({\n    eventSourceDefs: [eventSourceDef]\n  });\n  var eventSourceDef$1 = {\n    parseMeta: function (raw) {\n      if (typeof raw === 'function') {\n        // short form\n        return raw;\n      } else if (typeof raw.events === 'function') {\n        return raw.events;\n      }\n\n      return null;\n    },\n    fetch: function (arg, success, failure) {\n      var dateEnv = arg.calendar.dateEnv;\n      var func = arg.eventSource.meta;\n      unpromisify(func.bind(null, {\n        start: dateEnv.toDate(arg.range.start),\n        end: dateEnv.toDate(arg.range.end),\n        startStr: dateEnv.formatIso(arg.range.start),\n        endStr: dateEnv.formatIso(arg.range.end),\n        timeZone: dateEnv.timeZone\n      }), function (rawEvents) {\n        success({\n          rawEvents: rawEvents\n        }); // needs an object response\n      }, failure // send errorObj directly to failure callback\n      );\n    }\n  };\n  var FuncEventSourcePlugin = createPlugin({\n    eventSourceDefs: [eventSourceDef$1]\n  });\n\n  function requestJson(method, url, params, successCallback, failureCallback) {\n    method = method.toUpperCase();\n    var body = null;\n\n    if (method === 'GET') {\n      url = injectQueryStringParams(url, params);\n    } else {\n      body = encodeParams(params);\n    }\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url, true);\n\n    if (method !== 'GET') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.onload = function () {\n      if (xhr.status >= 200 && xhr.status < 400) {\n        try {\n          var res = JSON.parse(xhr.responseText);\n          successCallback(res, xhr);\n        } catch (err) {\n          failureCallback('Failure parsing JSON', xhr);\n        }\n      } else {\n        failureCallback('Request failed', xhr);\n      }\n    };\n\n    xhr.onerror = function () {\n      failureCallback('Request failed', xhr);\n    };\n\n    xhr.send(body);\n  }\n\n  function injectQueryStringParams(url, params) {\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + encodeParams(params);\n  }\n\n  function encodeParams(params) {\n    var parts = [];\n\n    for (var key in params) {\n      parts.push(encodeURIComponent(key) + '=' + encodeURIComponent(params[key]));\n    }\n\n    return parts.join('&');\n  }\n\n  var eventSourceDef$2 = {\n    parseMeta: function (raw) {\n      if (typeof raw === 'string') {\n        // short form\n        raw = {\n          url: raw\n        };\n      } else if (!raw || typeof raw !== 'object' || !raw.url) {\n        return null;\n      }\n\n      return {\n        url: raw.url,\n        method: (raw.method || 'GET').toUpperCase(),\n        extraParams: raw.extraParams,\n        startParam: raw.startParam,\n        endParam: raw.endParam,\n        timeZoneParam: raw.timeZoneParam\n      };\n    },\n    fetch: function (arg, success, failure) {\n      var meta = arg.eventSource.meta;\n      var requestParams = buildRequestParams(meta, arg.range, arg.calendar);\n      requestJson(meta.method, meta.url, requestParams, function (rawEvents, xhr) {\n        success({\n          rawEvents: rawEvents,\n          xhr: xhr\n        });\n      }, function (errorMessage, xhr) {\n        failure({\n          message: errorMessage,\n          xhr: xhr\n        });\n      });\n    }\n  };\n  var JsonFeedEventSourcePlugin = createPlugin({\n    eventSourceDefs: [eventSourceDef$2]\n  });\n\n  function buildRequestParams(meta, range, calendar) {\n    var dateEnv = calendar.dateEnv;\n    var startParam;\n    var endParam;\n    var timeZoneParam;\n    var customRequestParams;\n    var params = {};\n    startParam = meta.startParam;\n\n    if (startParam == null) {\n      startParam = calendar.opt('startParam');\n    }\n\n    endParam = meta.endParam;\n\n    if (endParam == null) {\n      endParam = calendar.opt('endParam');\n    }\n\n    timeZoneParam = meta.timeZoneParam;\n\n    if (timeZoneParam == null) {\n      timeZoneParam = calendar.opt('timeZoneParam');\n    } // retrieve any outbound GET/POST data from the options\n\n\n    if (typeof meta.extraParams === 'function') {\n      // supplied as a function that returns a key/value object\n      customRequestParams = meta.extraParams();\n    } else {\n      // probably supplied as a straight key/value object\n      customRequestParams = meta.extraParams || {};\n    }\n\n    __assign(params, customRequestParams);\n\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone;\n    }\n\n    return params;\n  }\n\n  var recurring = {\n    parse: function (rawEvent, leftoverProps, dateEnv) {\n      var createMarker = dateEnv.createMarker.bind(dateEnv);\n      var processors = {\n        daysOfWeek: null,\n        startTime: createDuration,\n        endTime: createDuration,\n        startRecur: createMarker,\n        endRecur: createMarker\n      };\n      var props = refineProps(rawEvent, processors, {}, leftoverProps);\n      var anyValid = false;\n\n      for (var propName in props) {\n        if (props[propName] != null) {\n          anyValid = true;\n          break;\n        }\n      }\n\n      if (anyValid) {\n        return {\n          allDayGuess: Boolean(!props.startTime && !props.endTime),\n          duration: props.startTime && props.endTime ? subtractDurations(props.endTime, props.startTime) : null,\n          typeData: props // doesn't need endTime anymore but oh well\n\n        };\n      }\n\n      return null;\n    },\n    expand: function (typeData, framingRange, dateEnv) {\n      var clippedFramingRange = intersectRanges(framingRange, {\n        start: typeData.startRecur,\n        end: typeData.endRecur\n      });\n\n      if (clippedFramingRange) {\n        return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);\n      } else {\n        return [];\n      }\n    }\n  };\n  var SimpleRecurrencePlugin = createPlugin({\n    recurringTypes: [recurring]\n  });\n\n  function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {\n    var dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;\n    var dayMarker = startOfDay(framingRange.start);\n    var endMarker = framingRange.end;\n    var instanceStarts = [];\n\n    while (dayMarker < endMarker) {\n      var instanceStart // if everyday, or this particular day-of-week\n      = void 0; // if everyday, or this particular day-of-week\n\n      if (!dowHash || dowHash[dayMarker.getUTCDay()]) {\n        if (startTime) {\n          instanceStart = dateEnv.add(dayMarker, startTime);\n        } else {\n          instanceStart = dayMarker;\n        }\n\n        instanceStarts.push(instanceStart);\n      }\n\n      dayMarker = addDays(dayMarker, 1);\n    }\n\n    return instanceStarts;\n  }\n\n  var DefaultOptionChangeHandlers = createPlugin({\n    optionChangeHandlers: {\n      events: function (events, calendar) {\n        handleEventSources([events], calendar);\n      },\n      eventSources: handleEventSources,\n      plugins: handlePlugins\n    }\n  });\n\n  function handleEventSources(inputs, calendar) {\n    var unfoundSources = hashValuesToArray(calendar.state.eventSources);\n    var newInputs = [];\n\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n      var input = inputs_1[_i];\n      var inputFound = false;\n\n      for (var i = 0; i < unfoundSources.length; i++) {\n        if (isValuesSimilar(unfoundSources[i]._raw, input, 2)) {\n          unfoundSources.splice(i, 1); // delete\n\n          inputFound = true;\n          break;\n        }\n      }\n\n      if (!inputFound) {\n        newInputs.push(input);\n      }\n    }\n\n    for (var _a = 0, unfoundSources_1 = unfoundSources; _a < unfoundSources_1.length; _a++) {\n      var unfoundSource = unfoundSources_1[_a];\n      calendar.dispatch({\n        type: 'REMOVE_EVENT_SOURCE',\n        sourceId: unfoundSource.sourceId\n      });\n    }\n\n    for (var _b = 0, newInputs_1 = newInputs; _b < newInputs_1.length; _b++) {\n      var newInput = newInputs_1[_b];\n      calendar.addEventSource(newInput);\n    }\n  } // shortcoming: won't remove plugins\n\n\n  function handlePlugins(inputs, calendar) {\n    calendar.addPluginInputs(inputs); // will gracefully handle duplicates\n  }\n\n  var config = {}; // TODO: make these options\n\n  var globalDefaults = {\n    defaultRangeSeparator: ' - ',\n    titleRangeSeparator: ' \\u2013 ',\n    defaultTimedEventDuration: '01:00:00',\n    defaultAllDayEventDuration: {\n      day: 1\n    },\n    forceEventDuration: false,\n    nextDayThreshold: '00:00:00',\n    // display\n    columnHeader: true,\n    defaultView: '',\n    aspectRatio: 1.35,\n    header: {\n      left: 'title',\n      center: '',\n      right: 'today prev,next'\n    },\n    weekends: true,\n    weekNumbers: false,\n    weekNumberCalculation: 'local',\n    editable: false,\n    // nowIndicator: false,\n    scrollTime: '06:00:00',\n    minTime: '00:00:00',\n    maxTime: '24:00:00',\n    showNonCurrentDates: true,\n    // event ajax\n    lazyFetching: true,\n    startParam: 'start',\n    endParam: 'end',\n    timeZoneParam: 'timeZone',\n    timeZone: 'local',\n    // allDayDefault: undefined,\n    // locale\n    locales: [],\n    locale: '',\n    // dir: will get this from the default locale\n    // buttonIcons: null,\n    // allows setting a min-height to the event segment to prevent short events overlapping each other\n    timeGridEventMinHeight: 0,\n    themeSystem: 'standard',\n    // eventResizableFromStart: false,\n    dragRevertDuration: 500,\n    dragScroll: true,\n    allDayMaintainDuration: false,\n    // selectable: false,\n    unselectAuto: true,\n    // selectMinDistance: 0,\n    dropAccept: '*',\n    eventOrder: 'start,-duration,allDay,title',\n    // ^ if start tie, longer events go before shorter. final tie-breaker is title text\n    // rerenderDelay: null,\n    eventLimit: false,\n    eventLimitClick: 'popover',\n    dayPopoverFormat: {\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    },\n    handleWindowResize: true,\n    windowResizeDelay: 100,\n    longPressDelay: 1000,\n    eventDragMinDistance: 5 // only applies to mouse\n\n  };\n  var rtlDefaults = {\n    header: {\n      left: 'next,prev today',\n      center: '',\n      right: 'title'\n    },\n    buttonIcons: {\n      // TODO: make RTL support the responibility of the theme\n      prev: 'fc-icon-chevron-right',\n      next: 'fc-icon-chevron-left',\n      prevYear: 'fc-icon-chevrons-right',\n      nextYear: 'fc-icon-chevrons-left'\n    }\n  };\n  var complexOptions = ['header', 'footer', 'buttonText', 'buttonIcons']; // Merges an array of option objects into a single object\n\n  function mergeOptions(optionObjs) {\n    return mergeProps(optionObjs, complexOptions);\n  } // TODO: move this stuff to a \"plugin\"-related file...\n\n\n  var INTERNAL_PLUGINS = [ArrayEventSourcePlugin, FuncEventSourcePlugin, JsonFeedEventSourcePlugin, SimpleRecurrencePlugin, DefaultOptionChangeHandlers];\n\n  function refinePluginDefs(pluginInputs) {\n    var plugins = [];\n\n    for (var _i = 0, pluginInputs_1 = pluginInputs; _i < pluginInputs_1.length; _i++) {\n      var pluginInput = pluginInputs_1[_i];\n\n      if (typeof pluginInput === 'string') {\n        var globalName = 'FullCalendar' + capitaliseFirstLetter(pluginInput);\n\n        if (!window[globalName]) {\n          console.warn('Plugin file not loaded for ' + pluginInput);\n        } else {\n          plugins.push(window[globalName].default); // is an ES6 module\n        }\n      } else {\n        plugins.push(pluginInput);\n      }\n    }\n\n    return INTERNAL_PLUGINS.concat(plugins);\n  }\n\n  var RAW_EN_LOCALE = {\n    code: 'en',\n    week: {\n      dow: 0,\n      doy: 4 // 4 days need to be within the year to be considered the first week\n\n    },\n    dir: 'ltr',\n    buttonText: {\n      prev: 'prev',\n      next: 'next',\n      prevYear: 'prev year',\n      nextYear: 'next year',\n      year: 'year',\n      today: 'today',\n      month: 'month',\n      week: 'week',\n      day: 'day',\n      list: 'list'\n    },\n    weekLabel: 'W',\n    allDayText: 'all-day',\n    eventLimitText: 'more',\n    noEventsMessage: 'No events to display'\n  };\n\n  function parseRawLocales(explicitRawLocales) {\n    var defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';\n    var globalArray = window['FullCalendarLocalesAll'] || []; // from locales-all.js\n\n    var globalObject = window['FullCalendarLocales'] || {}; // from locales/*.js. keys are meaningless\n\n    var allRawLocales = globalArray.concat( // globalArray is low prio\n    hashValuesToArray(globalObject), // medium prio\n    explicitRawLocales // highest prio\n    );\n    var rawLocaleMap = {\n      en: RAW_EN_LOCALE // necessary?\n\n    };\n\n    for (var _i = 0, allRawLocales_1 = allRawLocales; _i < allRawLocales_1.length; _i++) {\n      var rawLocale = allRawLocales_1[_i];\n      rawLocaleMap[rawLocale.code] = rawLocale;\n    }\n\n    return {\n      map: rawLocaleMap,\n      defaultCode: defaultCode\n    };\n  }\n\n  function buildLocale(inputSingular, available) {\n    if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {\n      return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);\n    } else {\n      return queryLocale(inputSingular, available);\n    }\n  }\n\n  function queryLocale(codeArg, available) {\n    var codes = [].concat(codeArg || []); // will convert to array\n\n    var raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;\n    return parseLocale(codeArg, codes, raw);\n  }\n\n  function queryRawLocale(codes, available) {\n    for (var i = 0; i < codes.length; i++) {\n      var parts = codes[i].toLocaleLowerCase().split('-');\n\n      for (var j = parts.length; j > 0; j--) {\n        var simpleId = parts.slice(0, j).join('-');\n\n        if (available[simpleId]) {\n          return available[simpleId];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  function parseLocale(codeArg, codes, raw) {\n    var merged = mergeProps([RAW_EN_LOCALE, raw], ['buttonText']);\n    delete merged.code; // don't want this part of the options\n\n    var week = merged.week;\n    delete merged.week;\n    return {\n      codeArg: codeArg,\n      codes: codes,\n      week: week,\n      simpleNumberFormat: new Intl.NumberFormat(codeArg),\n      options: merged\n    };\n  }\n\n  var OptionsManager =\n  /** @class */\n  function () {\n    function OptionsManager(overrides) {\n      this.overrides = __assign({}, overrides); // make a copy\n\n      this.dynamicOverrides = {};\n      this.compute();\n    }\n\n    OptionsManager.prototype.add = function (props) {\n      __assign(this.overrides, props);\n\n      this.compute();\n    };\n\n    OptionsManager.prototype.addDynamic = function (props) {\n      __assign(this.dynamicOverrides, props);\n\n      this.compute();\n    };\n\n    OptionsManager.prototype.reset = function (props) {\n      this.overrides = props;\n      this.compute();\n    }; // Computes the flattened options hash for the calendar and assigns to `this.options`.\n    // Assumes this.overrides and this.dynamicOverrides have already been initialized.\n\n\n    OptionsManager.prototype.compute = function () {\n      // TODO: not a very efficient system\n      var locales = firstDefined( // explicit locale option given?\n      this.dynamicOverrides.locales, this.overrides.locales, globalDefaults.locales);\n      var locale = firstDefined( // explicit locales option given?\n      this.dynamicOverrides.locale, this.overrides.locale, globalDefaults.locale);\n      var available = parseRawLocales(locales);\n      var localeDefaults = buildLocale(locale || available.defaultCode, available.map).options;\n      var dir = firstDefined( // based on options computed so far, is direction RTL?\n      this.dynamicOverrides.dir, this.overrides.dir, localeDefaults.dir);\n      var dirDefaults = dir === 'rtl' ? rtlDefaults : {};\n      this.dirDefaults = dirDefaults;\n      this.localeDefaults = localeDefaults;\n      this.computed = mergeOptions([globalDefaults, dirDefaults, localeDefaults, this.overrides, this.dynamicOverrides]);\n    };\n\n    return OptionsManager;\n  }();\n\n  var calendarSystemClassMap = {};\n\n  function registerCalendarSystem(name, theClass) {\n    calendarSystemClassMap[name] = theClass;\n  }\n\n  function createCalendarSystem(name) {\n    return new calendarSystemClassMap[name]();\n  }\n\n  var GregorianCalendarSystem =\n  /** @class */\n  function () {\n    function GregorianCalendarSystem() {}\n\n    GregorianCalendarSystem.prototype.getMarkerYear = function (d) {\n      return d.getUTCFullYear();\n    };\n\n    GregorianCalendarSystem.prototype.getMarkerMonth = function (d) {\n      return d.getUTCMonth();\n    };\n\n    GregorianCalendarSystem.prototype.getMarkerDay = function (d) {\n      return d.getUTCDate();\n    };\n\n    GregorianCalendarSystem.prototype.arrayToMarker = function (arr) {\n      return arrayToUtcDate(arr);\n    };\n\n    GregorianCalendarSystem.prototype.markerToArray = function (marker) {\n      return dateToUtcArray(marker);\n    };\n\n    return GregorianCalendarSystem;\n  }();\n\n  registerCalendarSystem('gregory', GregorianCalendarSystem);\n  var ISO_START = /^\\s*\\d{4}-\\d\\d-\\d\\d([T ]\\d)?/;\n  var ISO_TZO_RE = /(?:(Z)|([-+])(\\d\\d)(?::(\\d\\d))?)$/;\n\n  function parse(str) {\n    var timeZoneOffset = null;\n    var isTimeUnspecified = false;\n    var m = ISO_START.exec(str);\n\n    if (m) {\n      isTimeUnspecified = !m[1];\n\n      if (isTimeUnspecified) {\n        str += 'T00:00:00Z';\n      } else {\n        str = str.replace(ISO_TZO_RE, function (whole, z, sign, minutes, seconds) {\n          if (z) {\n            timeZoneOffset = 0;\n          } else {\n            timeZoneOffset = (parseInt(minutes, 10) * 60 + parseInt(seconds || 0, 10)) * (sign === '-' ? -1 : 1);\n          }\n\n          return '';\n        }) + 'Z'; // otherwise will parse in local\n      }\n    }\n\n    var marker = new Date(str);\n\n    if (!isValidDate(marker)) {\n      return null;\n    }\n\n    return {\n      marker: marker,\n      isTimeUnspecified: isTimeUnspecified,\n      timeZoneOffset: timeZoneOffset\n    };\n  }\n\n  var DateEnv =\n  /** @class */\n  function () {\n    function DateEnv(settings) {\n      var timeZone = this.timeZone = settings.timeZone;\n      var isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';\n\n      if (settings.namedTimeZoneImpl && isNamedTimeZone) {\n        this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);\n      }\n\n      this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);\n      this.calendarSystem = createCalendarSystem(settings.calendarSystem);\n      this.locale = settings.locale;\n      this.weekDow = settings.locale.week.dow;\n      this.weekDoy = settings.locale.week.doy;\n\n      if (settings.weekNumberCalculation === 'ISO') {\n        this.weekDow = 1;\n        this.weekDoy = 4;\n      } else if (typeof settings.firstDay === 'number') {\n        this.weekDow = settings.firstDay;\n      }\n\n      if (typeof settings.weekNumberCalculation === 'function') {\n        this.weekNumberFunc = settings.weekNumberCalculation;\n      }\n\n      this.weekLabel = settings.weekLabel != null ? settings.weekLabel : settings.locale.options.weekLabel;\n      this.cmdFormatter = settings.cmdFormatter;\n    } // Creating / Parsing\n\n\n    DateEnv.prototype.createMarker = function (input) {\n      var meta = this.createMarkerMeta(input);\n\n      if (meta === null) {\n        return null;\n      }\n\n      return meta.marker;\n    };\n\n    DateEnv.prototype.createNowMarker = function () {\n      if (this.canComputeOffset) {\n        return this.timestampToMarker(new Date().valueOf());\n      } else {\n        // if we can't compute the current date val for a timezone,\n        // better to give the current local date vals than UTC\n        return arrayToUtcDate(dateToLocalArray(new Date()));\n      }\n    };\n\n    DateEnv.prototype.createMarkerMeta = function (input) {\n      if (typeof input === 'string') {\n        return this.parse(input);\n      }\n\n      var marker = null;\n\n      if (typeof input === 'number') {\n        marker = this.timestampToMarker(input);\n      } else if (input instanceof Date) {\n        input = input.valueOf();\n\n        if (!isNaN(input)) {\n          marker = this.timestampToMarker(input);\n        }\n      } else if (Array.isArray(input)) {\n        marker = arrayToUtcDate(input);\n      }\n\n      if (marker === null || !isValidDate(marker)) {\n        return null;\n      }\n\n      return {\n        marker: marker,\n        isTimeUnspecified: false,\n        forcedTzo: null\n      };\n    };\n\n    DateEnv.prototype.parse = function (s) {\n      var parts = parse(s);\n\n      if (parts === null) {\n        return null;\n      }\n\n      var marker = parts.marker;\n      var forcedTzo = null;\n\n      if (parts.timeZoneOffset !== null) {\n        if (this.canComputeOffset) {\n          marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);\n        } else {\n          forcedTzo = parts.timeZoneOffset;\n        }\n      }\n\n      return {\n        marker: marker,\n        isTimeUnspecified: parts.isTimeUnspecified,\n        forcedTzo: forcedTzo\n      };\n    }; // Accessors\n\n\n    DateEnv.prototype.getYear = function (marker) {\n      return this.calendarSystem.getMarkerYear(marker);\n    };\n\n    DateEnv.prototype.getMonth = function (marker) {\n      return this.calendarSystem.getMarkerMonth(marker);\n    }; // Adding / Subtracting\n\n\n    DateEnv.prototype.add = function (marker, dur) {\n      var a = this.calendarSystem.markerToArray(marker);\n      a[0] += dur.years;\n      a[1] += dur.months;\n      a[2] += dur.days;\n      a[6] += dur.milliseconds;\n      return this.calendarSystem.arrayToMarker(a);\n    };\n\n    DateEnv.prototype.subtract = function (marker, dur) {\n      var a = this.calendarSystem.markerToArray(marker);\n      a[0] -= dur.years;\n      a[1] -= dur.months;\n      a[2] -= dur.days;\n      a[6] -= dur.milliseconds;\n      return this.calendarSystem.arrayToMarker(a);\n    };\n\n    DateEnv.prototype.addYears = function (marker, n) {\n      var a = this.calendarSystem.markerToArray(marker);\n      a[0] += n;\n      return this.calendarSystem.arrayToMarker(a);\n    };\n\n    DateEnv.prototype.addMonths = function (marker, n) {\n      var a = this.calendarSystem.markerToArray(marker);\n      a[1] += n;\n      return this.calendarSystem.arrayToMarker(a);\n    }; // Diffing Whole Units\n\n\n    DateEnv.prototype.diffWholeYears = function (m0, m1) {\n      var calendarSystem = this.calendarSystem;\n\n      if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) && calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {\n        return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);\n      }\n\n      return null;\n    };\n\n    DateEnv.prototype.diffWholeMonths = function (m0, m1) {\n      var calendarSystem = this.calendarSystem;\n\n      if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {\n        return calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0) + (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;\n      }\n\n      return null;\n    }; // Range / Duration\n\n\n    DateEnv.prototype.greatestWholeUnit = function (m0, m1) {\n      var n = this.diffWholeYears(m0, m1);\n\n      if (n !== null) {\n        return {\n          unit: 'year',\n          value: n\n        };\n      }\n\n      n = this.diffWholeMonths(m0, m1);\n\n      if (n !== null) {\n        return {\n          unit: 'month',\n          value: n\n        };\n      }\n\n      n = diffWholeWeeks(m0, m1);\n\n      if (n !== null) {\n        return {\n          unit: 'week',\n          value: n\n        };\n      }\n\n      n = diffWholeDays(m0, m1);\n\n      if (n !== null) {\n        return {\n          unit: 'day',\n          value: n\n        };\n      }\n\n      n = diffHours(m0, m1);\n\n      if (isInt(n)) {\n        return {\n          unit: 'hour',\n          value: n\n        };\n      }\n\n      n = diffMinutes(m0, m1);\n\n      if (isInt(n)) {\n        return {\n          unit: 'minute',\n          value: n\n        };\n      }\n\n      n = diffSeconds(m0, m1);\n\n      if (isInt(n)) {\n        return {\n          unit: 'second',\n          value: n\n        };\n      }\n\n      return {\n        unit: 'millisecond',\n        value: m1.valueOf() - m0.valueOf()\n      };\n    };\n\n    DateEnv.prototype.countDurationsBetween = function (m0, m1, d) {\n      // TODO: can use greatestWholeUnit\n      var diff;\n\n      if (d.years) {\n        diff = this.diffWholeYears(m0, m1);\n\n        if (diff !== null) {\n          return diff / asRoughYears(d);\n        }\n      }\n\n      if (d.months) {\n        diff = this.diffWholeMonths(m0, m1);\n\n        if (diff !== null) {\n          return diff / asRoughMonths(d);\n        }\n      }\n\n      if (d.days) {\n        diff = diffWholeDays(m0, m1);\n\n        if (diff !== null) {\n          return diff / asRoughDays(d);\n        }\n      }\n\n      return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);\n    }; // Start-Of\n\n\n    DateEnv.prototype.startOf = function (m, unit) {\n      if (unit === 'year') {\n        return this.startOfYear(m);\n      } else if (unit === 'month') {\n        return this.startOfMonth(m);\n      } else if (unit === 'week') {\n        return this.startOfWeek(m);\n      } else if (unit === 'day') {\n        return startOfDay(m);\n      } else if (unit === 'hour') {\n        return startOfHour(m);\n      } else if (unit === 'minute') {\n        return startOfMinute(m);\n      } else if (unit === 'second') {\n        return startOfSecond(m);\n      }\n    };\n\n    DateEnv.prototype.startOfYear = function (m) {\n      return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m)]);\n    };\n\n    DateEnv.prototype.startOfMonth = function (m) {\n      return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m)]);\n    };\n\n    DateEnv.prototype.startOfWeek = function (m) {\n      return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m), m.getUTCDate() - (m.getUTCDay() - this.weekDow + 7) % 7]);\n    }; // Week Number\n\n\n    DateEnv.prototype.computeWeekNumber = function (marker) {\n      if (this.weekNumberFunc) {\n        return this.weekNumberFunc(this.toDate(marker));\n      } else {\n        return weekOfYear(marker, this.weekDow, this.weekDoy);\n      }\n    }; // TODO: choke on timeZoneName: long\n\n\n    DateEnv.prototype.format = function (marker, formatter, dateOptions) {\n      if (dateOptions === void 0) {\n        dateOptions = {};\n      }\n\n      return formatter.format({\n        marker: marker,\n        timeZoneOffset: dateOptions.forcedTzo != null ? dateOptions.forcedTzo : this.offsetForMarker(marker)\n      }, this);\n    };\n\n    DateEnv.prototype.formatRange = function (start, end, formatter, dateOptions) {\n      if (dateOptions === void 0) {\n        dateOptions = {};\n      }\n\n      if (dateOptions.isEndExclusive) {\n        end = addMs(end, -1);\n      }\n\n      return formatter.formatRange({\n        marker: start,\n        timeZoneOffset: dateOptions.forcedStartTzo != null ? dateOptions.forcedStartTzo : this.offsetForMarker(start)\n      }, {\n        marker: end,\n        timeZoneOffset: dateOptions.forcedEndTzo != null ? dateOptions.forcedEndTzo : this.offsetForMarker(end)\n      }, this);\n    };\n\n    DateEnv.prototype.formatIso = function (marker, extraOptions) {\n      if (extraOptions === void 0) {\n        extraOptions = {};\n      }\n\n      var timeZoneOffset = null;\n\n      if (!extraOptions.omitTimeZoneOffset) {\n        if (extraOptions.forcedTzo != null) {\n          timeZoneOffset = extraOptions.forcedTzo;\n        } else {\n          timeZoneOffset = this.offsetForMarker(marker);\n        }\n      }\n\n      return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);\n    }; // TimeZone\n\n\n    DateEnv.prototype.timestampToMarker = function (ms) {\n      if (this.timeZone === 'local') {\n        return arrayToUtcDate(dateToLocalArray(new Date(ms)));\n      } else if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {\n        return new Date(ms);\n      } else {\n        return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));\n      }\n    };\n\n    DateEnv.prototype.offsetForMarker = function (m) {\n      if (this.timeZone === 'local') {\n        return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert \"inverse\" offset to \"normal\" offset\n      } else if (this.timeZone === 'UTC') {\n        return 0;\n      } else if (this.namedTimeZoneImpl) {\n        return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));\n      }\n\n      return null;\n    }; // Conversion\n\n\n    DateEnv.prototype.toDate = function (m, forcedTzo) {\n      if (this.timeZone === 'local') {\n        return arrayToLocalDate(dateToUtcArray(m));\n      } else if (this.timeZone === 'UTC') {\n        return new Date(m.valueOf()); // make sure it's a copy\n      } else if (!this.namedTimeZoneImpl) {\n        return new Date(m.valueOf() - (forcedTzo || 0));\n      } else {\n        return new Date(m.valueOf() - this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60 // convert minutes -> ms\n        );\n      }\n    };\n\n    return DateEnv;\n  }();\n\n  var SIMPLE_SOURCE_PROPS = {\n    id: String,\n    allDayDefault: Boolean,\n    eventDataTransform: Function,\n    success: Function,\n    failure: Function\n  };\n  var uid$2 = 0;\n\n  function doesSourceNeedRange(eventSource, calendar) {\n    var defs = calendar.pluginSystem.hooks.eventSourceDefs;\n    return !defs[eventSource.sourceDefId].ignoreRange;\n  }\n\n  function parseEventSource(raw, calendar) {\n    var defs = calendar.pluginSystem.hooks.eventSourceDefs;\n\n    for (var i = defs.length - 1; i >= 0; i--) {\n      // later-added plugins take precedence\n      var def = defs[i];\n      var meta = def.parseMeta(raw);\n\n      if (meta) {\n        var res = parseEventSourceProps(typeof raw === 'object' ? raw : {}, meta, i, calendar);\n        res._raw = freezeRaw(raw);\n        return res;\n      }\n    }\n\n    return null;\n  }\n\n  function parseEventSourceProps(raw, meta, sourceDefId, calendar) {\n    var leftovers0 = {};\n    var props = refineProps(raw, SIMPLE_SOURCE_PROPS, {}, leftovers0);\n    var leftovers1 = {};\n    var ui = processUnscopedUiProps(leftovers0, calendar, leftovers1);\n    props.isFetching = false;\n    props.latestFetchId = '';\n    props.fetchRange = null;\n    props.publicId = String(raw.id || '');\n    props.sourceId = String(uid$2++);\n    props.sourceDefId = sourceDefId;\n    props.meta = meta;\n    props.ui = ui;\n    props.extendedProps = leftovers1;\n    return props;\n  }\n\n  function reduceEventSources(eventSources, action, dateProfile, calendar) {\n    switch (action.type) {\n      case 'ADD_EVENT_SOURCES':\n        // already parsed\n        return addSources(eventSources, action.sources, dateProfile ? dateProfile.activeRange : null, calendar);\n\n      case 'REMOVE_EVENT_SOURCE':\n        return removeSource(eventSources, action.sourceId);\n\n      case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n\n      case 'NEXT':\n      case 'SET_DATE':\n      case 'SET_VIEW_TYPE':\n        if (dateProfile) {\n          return fetchDirtySources(eventSources, dateProfile.activeRange, calendar);\n        } else {\n          return eventSources;\n        }\n\n      case 'FETCH_EVENT_SOURCES':\n      case 'CHANGE_TIMEZONE':\n        return fetchSourcesByIds(eventSources, action.sourceIds ? arrayToHash(action.sourceIds) : excludeStaticSources(eventSources, calendar), dateProfile ? dateProfile.activeRange : null, calendar);\n\n      case 'RECEIVE_EVENTS':\n      case 'RECEIVE_EVENT_ERROR':\n        return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);\n\n      case 'REMOVE_ALL_EVENT_SOURCES':\n        return {};\n\n      default:\n        return eventSources;\n    }\n  }\n\n  var uid$3 = 0;\n\n  function addSources(eventSourceHash, sources, fetchRange, calendar) {\n    var hash = {};\n\n    for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {\n      var source = sources_1[_i];\n      hash[source.sourceId] = source;\n    }\n\n    if (fetchRange) {\n      hash = fetchDirtySources(hash, fetchRange, calendar);\n    }\n\n    return __assign({}, eventSourceHash, hash);\n  }\n\n  function removeSource(eventSourceHash, sourceId) {\n    return filterHash(eventSourceHash, function (eventSource) {\n      return eventSource.sourceId !== sourceId;\n    });\n  }\n\n  function fetchDirtySources(sourceHash, fetchRange, calendar) {\n    return fetchSourcesByIds(sourceHash, filterHash(sourceHash, function (eventSource) {\n      return isSourceDirty(eventSource, fetchRange, calendar);\n    }), fetchRange, calendar);\n  }\n\n  function isSourceDirty(eventSource, fetchRange, calendar) {\n    if (!doesSourceNeedRange(eventSource, calendar)) {\n      return !eventSource.latestFetchId;\n    } else {\n      return !calendar.opt('lazyFetching') || !eventSource.fetchRange || fetchRange.start < eventSource.fetchRange.start || fetchRange.end > eventSource.fetchRange.end;\n    }\n  }\n\n  function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, calendar) {\n    var nextSources = {};\n\n    for (var sourceId in prevSources) {\n      var source = prevSources[sourceId];\n\n      if (sourceIdHash[sourceId]) {\n        nextSources[sourceId] = fetchSource(source, fetchRange, calendar);\n      } else {\n        nextSources[sourceId] = source;\n      }\n    }\n\n    return nextSources;\n  }\n\n  function fetchSource(eventSource, fetchRange, calendar) {\n    var sourceDef = calendar.pluginSystem.hooks.eventSourceDefs[eventSource.sourceDefId];\n    var fetchId = String(uid$3++);\n    sourceDef.fetch({\n      eventSource: eventSource,\n      calendar: calendar,\n      range: fetchRange\n    }, function (res) {\n      var rawEvents = res.rawEvents;\n      var calSuccess = calendar.opt('eventSourceSuccess');\n      var calSuccessRes;\n      var sourceSuccessRes;\n\n      if (eventSource.success) {\n        sourceSuccessRes = eventSource.success(rawEvents, res.xhr);\n      }\n\n      if (calSuccess) {\n        calSuccessRes = calSuccess(rawEvents, res.xhr);\n      }\n\n      rawEvents = sourceSuccessRes || calSuccessRes || rawEvents;\n      calendar.dispatch({\n        type: 'RECEIVE_EVENTS',\n        sourceId: eventSource.sourceId,\n        fetchId: fetchId,\n        fetchRange: fetchRange,\n        rawEvents: rawEvents\n      });\n    }, function (error) {\n      var callFailure = calendar.opt('eventSourceFailure');\n      console.warn(error.message, error);\n\n      if (eventSource.failure) {\n        eventSource.failure(error);\n      }\n\n      if (callFailure) {\n        callFailure(error);\n      }\n\n      calendar.dispatch({\n        type: 'RECEIVE_EVENT_ERROR',\n        sourceId: eventSource.sourceId,\n        fetchId: fetchId,\n        fetchRange: fetchRange,\n        error: error\n      });\n    });\n    return __assign({}, eventSource, {\n      isFetching: true,\n      latestFetchId: fetchId\n    });\n  }\n\n  function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {\n    var _a;\n\n    var eventSource = sourceHash[sourceId];\n\n    if (eventSource && // not already removed\n    fetchId === eventSource.latestFetchId) {\n      return __assign({}, sourceHash, (_a = {}, _a[sourceId] = __assign({}, eventSource, {\n        isFetching: false,\n        fetchRange: fetchRange\n      }), _a));\n    }\n\n    return sourceHash;\n  }\n\n  function excludeStaticSources(eventSources, calendar) {\n    return filterHash(eventSources, function (eventSource) {\n      return doesSourceNeedRange(eventSource, calendar);\n    });\n  }\n\n  var DateProfileGenerator =\n  /** @class */\n  function () {\n    function DateProfileGenerator(viewSpec, calendar) {\n      this.viewSpec = viewSpec;\n      this.options = viewSpec.options;\n      this.dateEnv = calendar.dateEnv;\n      this.calendar = calendar;\n      this.initHiddenDays();\n    }\n    /* Date Range Computation\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds a structure with info about what the dates/ranges will be for the \"prev\" view.\n\n\n    DateProfileGenerator.prototype.buildPrev = function (currentDateProfile, currentDate) {\n      var dateEnv = this.dateEnv;\n      var prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n      currentDateProfile.dateIncrement);\n      return this.build(prevDate, -1);\n    }; // Builds a structure with info about what the dates/ranges will be for the \"next\" view.\n\n\n    DateProfileGenerator.prototype.buildNext = function (currentDateProfile, currentDate) {\n      var dateEnv = this.dateEnv;\n      var nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month\n      currentDateProfile.dateIncrement);\n      return this.build(nextDate, 1);\n    }; // Builds a structure holding dates/ranges for rendering around the given date.\n    // Optional direction param indicates whether the date is being incremented/decremented\n    // from its previous value. decremented = -1, incremented = 1 (default).\n\n\n    DateProfileGenerator.prototype.build = function (currentDate, direction, forceToValid) {\n      if (forceToValid === void 0) {\n        forceToValid = false;\n      }\n\n      var validRange;\n      var minTime = null;\n      var maxTime = null;\n      var currentInfo;\n      var isRangeAllDay;\n      var renderRange;\n      var activeRange;\n      var isValid;\n      validRange = this.buildValidRange();\n      validRange = this.trimHiddenDays(validRange);\n\n      if (forceToValid) {\n        currentDate = constrainMarkerToRange(currentDate, validRange);\n      }\n\n      currentInfo = this.buildCurrentRangeInfo(currentDate, direction);\n      isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);\n      renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);\n      renderRange = this.trimHiddenDays(renderRange);\n      activeRange = renderRange;\n\n      if (!this.options.showNonCurrentDates) {\n        activeRange = intersectRanges(activeRange, currentInfo.range);\n      }\n\n      minTime = createDuration(this.options.minTime);\n      maxTime = createDuration(this.options.maxTime);\n      activeRange = this.adjustActiveRange(activeRange, minTime, maxTime);\n      activeRange = intersectRanges(activeRange, validRange); // might return null\n      // it's invalid if the originally requested date is not contained,\n      // or if the range is completely outside of the valid range.\n\n      isValid = rangesIntersect(currentInfo.range, validRange);\n      return {\n        // constraint for where prev/next operations can go and where events can be dragged/resized to.\n        // an object with optional start and end properties.\n        validRange: validRange,\n        // range the view is formally responsible for.\n        // for example, a month view might have 1st-31st, excluding padded dates\n        currentRange: currentInfo.range,\n        // name of largest unit being displayed, like \"month\" or \"week\"\n        currentRangeUnit: currentInfo.unit,\n        isRangeAllDay: isRangeAllDay,\n        // dates that display events and accept drag-n-drop\n        // will be `null` if no dates accept events\n        activeRange: activeRange,\n        // date range with a rendered skeleton\n        // includes not-active days that need some sort of DOM\n        renderRange: renderRange,\n        // Duration object that denotes the first visible time of any given day\n        minTime: minTime,\n        // Duration object that denotes the exclusive visible end time of any given day\n        maxTime: maxTime,\n        isValid: isValid,\n        // how far the current date will move for a prev/next operation\n        dateIncrement: this.buildDateIncrement(currentInfo.duration) // pass a fallback (might be null) ^\n\n      };\n    }; // Builds an object with optional start/end properties.\n    // Indicates the minimum/maximum dates to display.\n    // not responsible for trimming hidden days.\n\n\n    DateProfileGenerator.prototype.buildValidRange = function () {\n      return this.getRangeOption('validRange', this.calendar.getNow()) || {\n        start: null,\n        end: null\n      }; // completely open-ended\n    }; // Builds a structure with info about the \"current\" range, the range that is\n    // highlighted as being the current month for example.\n    // See build() for a description of `direction`.\n    // Guaranteed to have `range` and `unit` properties. `duration` is optional.\n\n\n    DateProfileGenerator.prototype.buildCurrentRangeInfo = function (date, direction) {\n      var _a = this,\n          viewSpec = _a.viewSpec,\n          dateEnv = _a.dateEnv;\n\n      var duration = null;\n      var unit = null;\n      var range = null;\n      var dayCount;\n\n      if (viewSpec.duration) {\n        duration = viewSpec.duration;\n        unit = viewSpec.durationUnit;\n        range = this.buildRangeFromDuration(date, direction, duration, unit);\n      } else if (dayCount = this.options.dayCount) {\n        unit = 'day';\n        range = this.buildRangeFromDayCount(date, direction, dayCount);\n      } else if (range = this.buildCustomVisibleRange(date)) {\n        unit = dateEnv.greatestWholeUnit(range.start, range.end).unit;\n      } else {\n        duration = this.getFallbackDuration();\n        unit = greatestDurationDenominator(duration).unit;\n        range = this.buildRangeFromDuration(date, direction, duration, unit);\n      }\n\n      return {\n        duration: duration,\n        unit: unit,\n        range: range\n      };\n    };\n\n    DateProfileGenerator.prototype.getFallbackDuration = function () {\n      return createDuration({\n        day: 1\n      });\n    }; // Returns a new activeRange to have time values (un-ambiguate)\n    // minTime or maxTime causes the range to expand.\n\n\n    DateProfileGenerator.prototype.adjustActiveRange = function (range, minTime, maxTime) {\n      var dateEnv = this.dateEnv;\n      var start = range.start;\n      var end = range.end;\n\n      if (this.viewSpec.class.prototype.usesMinMaxTime) {\n        // expand active range if minTime is negative (why not when positive?)\n        if (asRoughDays(minTime) < 0) {\n          start = startOfDay(start); // necessary?\n\n          start = dateEnv.add(start, minTime);\n        } // expand active range if maxTime is beyond one day (why not when positive?)\n\n\n        if (asRoughDays(maxTime) > 1) {\n          end = startOfDay(end); // necessary?\n\n          end = addDays(end, -1);\n          end = dateEnv.add(end, maxTime);\n        }\n      }\n\n      return {\n        start: start,\n        end: end\n      };\n    }; // Builds the \"current\" range when it is specified as an explicit duration.\n    // `unit` is the already-computed greatestDurationDenominator unit of duration.\n\n\n    DateProfileGenerator.prototype.buildRangeFromDuration = function (date, direction, duration, unit) {\n      var dateEnv = this.dateEnv;\n      var alignment = this.options.dateAlignment;\n      var dateIncrementInput;\n      var dateIncrementDuration;\n      var start;\n      var end;\n      var res; // compute what the alignment should be\n\n      if (!alignment) {\n        dateIncrementInput = this.options.dateIncrement;\n\n        if (dateIncrementInput) {\n          dateIncrementDuration = createDuration(dateIncrementInput); // use the smaller of the two units\n\n          if (asRoughMs(dateIncrementDuration) < asRoughMs(duration)) {\n            alignment = greatestDurationDenominator(dateIncrementDuration, !getWeeksFromInput(dateIncrementInput)).unit;\n          } else {\n            alignment = unit;\n          }\n        } else {\n          alignment = unit;\n        }\n      } // if the view displays a single day or smaller\n\n\n      if (asRoughDays(duration) <= 1) {\n        if (this.isHiddenDay(start)) {\n          start = this.skipHiddenDays(start, direction);\n          start = startOfDay(start);\n        }\n      }\n\n      function computeRes() {\n        start = dateEnv.startOf(date, alignment);\n        end = dateEnv.add(start, duration);\n        res = {\n          start: start,\n          end: end\n        };\n      }\n\n      computeRes(); // if range is completely enveloped by hidden days, go past the hidden days\n\n      if (!this.trimHiddenDays(res)) {\n        date = this.skipHiddenDays(date, direction);\n        computeRes();\n      }\n\n      return res;\n    }; // Builds the \"current\" range when a dayCount is specified.\n\n\n    DateProfileGenerator.prototype.buildRangeFromDayCount = function (date, direction, dayCount) {\n      var dateEnv = this.dateEnv;\n      var customAlignment = this.options.dateAlignment;\n      var runningCount = 0;\n      var start = date;\n      var end;\n\n      if (customAlignment) {\n        start = dateEnv.startOf(start, customAlignment);\n      }\n\n      start = startOfDay(start);\n      start = this.skipHiddenDays(start, direction);\n      end = start;\n\n      do {\n        end = addDays(end, 1);\n\n        if (!this.isHiddenDay(end)) {\n          runningCount++;\n        }\n      } while (runningCount < dayCount);\n\n      return {\n        start: start,\n        end: end\n      };\n    }; // Builds a normalized range object for the \"visible\" range,\n    // which is a way to define the currentRange and activeRange at the same time.\n\n\n    DateProfileGenerator.prototype.buildCustomVisibleRange = function (date) {\n      var dateEnv = this.dateEnv;\n      var visibleRange = this.getRangeOption('visibleRange', dateEnv.toDate(date));\n\n      if (visibleRange && (visibleRange.start == null || visibleRange.end == null)) {\n        return null;\n      }\n\n      return visibleRange;\n    }; // Computes the range that will represent the element/cells for *rendering*,\n    // but which may have voided days/times.\n    // not responsible for trimming hidden days.\n\n\n    DateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n      return currentRange;\n    }; // Compute the duration value that should be added/substracted to the current date\n    // when a prev/next operation happens.\n\n\n    DateProfileGenerator.prototype.buildDateIncrement = function (fallback) {\n      var dateIncrementInput = this.options.dateIncrement;\n      var customAlignment;\n\n      if (dateIncrementInput) {\n        return createDuration(dateIncrementInput);\n      } else if (customAlignment = this.options.dateAlignment) {\n        return createDuration(1, customAlignment);\n      } else if (fallback) {\n        return fallback;\n      } else {\n        return createDuration({\n          days: 1\n        });\n      }\n    }; // Arguments after name will be forwarded to a hypothetical function value\n    // WARNING: passed-in arguments will be given to generator functions as-is and can cause side-effects.\n    // Always clone your objects if you fear mutation.\n\n\n    DateProfileGenerator.prototype.getRangeOption = function (name) {\n      var otherArgs = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n      }\n\n      var val = this.options[name];\n\n      if (typeof val === 'function') {\n        val = val.apply(null, otherArgs);\n      }\n\n      if (val) {\n        val = parseRange(val, this.dateEnv);\n      }\n\n      if (val) {\n        val = computeVisibleDayRange(val);\n      }\n\n      return val;\n    };\n    /* Hidden Days\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Initializes internal variables related to calculating hidden days-of-week\n\n\n    DateProfileGenerator.prototype.initHiddenDays = function () {\n      var hiddenDays = this.options.hiddenDays || []; // array of day-of-week indices that are hidden\n\n      var isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)\n\n      var dayCnt = 0;\n      var i;\n\n      if (this.options.weekends === false) {\n        hiddenDays.push(0, 6); // 0=sunday, 6=saturday\n      }\n\n      for (i = 0; i < 7; i++) {\n        if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {\n          dayCnt++;\n        }\n      }\n\n      if (!dayCnt) {\n        throw new Error('invalid hiddenDays'); // all days were hidden? bad.\n      }\n\n      this.isHiddenDayHash = isHiddenDayHash;\n    }; // Remove days from the beginning and end of the range that are computed as hidden.\n    // If the whole range is trimmed off, returns null\n\n\n    DateProfileGenerator.prototype.trimHiddenDays = function (range) {\n      var start = range.start;\n      var end = range.end;\n\n      if (start) {\n        start = this.skipHiddenDays(start);\n      }\n\n      if (end) {\n        end = this.skipHiddenDays(end, -1, true);\n      }\n\n      if (start == null || end == null || start < end) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n\n      return null;\n    }; // Is the current day hidden?\n    // `day` is a day-of-week index (0-6), or a Date (used for UTC)\n\n\n    DateProfileGenerator.prototype.isHiddenDay = function (day) {\n      if (day instanceof Date) {\n        day = day.getUTCDay();\n      }\n\n      return this.isHiddenDayHash[day];\n    }; // Incrementing the current day until it is no longer a hidden day, returning a copy.\n    // DOES NOT CONSIDER validRange!\n    // If the initial value of `date` is not a hidden day, don't do anything.\n    // Pass `isExclusive` as `true` if you are dealing with an end date.\n    // `inc` defaults to `1` (increment one day forward each time)\n\n\n    DateProfileGenerator.prototype.skipHiddenDays = function (date, inc, isExclusive) {\n      if (inc === void 0) {\n        inc = 1;\n      }\n\n      if (isExclusive === void 0) {\n        isExclusive = false;\n      }\n\n      while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {\n        date = addDays(date, inc);\n      }\n\n      return date;\n    };\n\n    return DateProfileGenerator;\n  }(); // TODO: find a way to avoid comparing DateProfiles. it's tedious\n\n\n  function isDateProfilesEqual(p0, p1) {\n    return rangesEqual(p0.activeRange, p1.activeRange) && rangesEqual(p0.validRange, p1.validRange) && durationsEqual(p0.minTime, p1.minTime) && durationsEqual(p0.maxTime, p1.maxTime);\n  }\n\n  function reduce(state, action, calendar) {\n    var viewType = reduceViewType(state.viewType, action);\n    var dateProfile = reduceDateProfile(state.dateProfile, action, state.currentDate, viewType, calendar);\n    var eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendar);\n\n    var nextState = __assign({}, state, {\n      viewType: viewType,\n      dateProfile: dateProfile,\n      currentDate: reduceCurrentDate(state.currentDate, action, dateProfile),\n      eventSources: eventSources,\n      eventStore: reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendar),\n      dateSelection: reduceDateSelection(state.dateSelection, action, calendar),\n      eventSelection: reduceSelectedEvent(state.eventSelection, action),\n      eventDrag: reduceEventDrag(state.eventDrag, action, eventSources, calendar),\n      eventResize: reduceEventResize(state.eventResize, action, eventSources, calendar),\n      eventSourceLoadingLevel: computeLoadingLevel(eventSources),\n      loadingLevel: computeLoadingLevel(eventSources)\n    });\n\n    for (var _i = 0, _a = calendar.pluginSystem.hooks.reducers; _i < _a.length; _i++) {\n      var reducerFunc = _a[_i];\n      nextState = reducerFunc(nextState, action, calendar);\n    } // console.log(action.type, nextState)\n\n\n    return nextState;\n  }\n\n  function reduceViewType(currentViewType, action) {\n    switch (action.type) {\n      case 'SET_VIEW_TYPE':\n        return action.viewType;\n\n      default:\n        return currentViewType;\n    }\n  }\n\n  function reduceDateProfile(currentDateProfile, action, currentDate, viewType, calendar) {\n    var newDateProfile;\n\n    switch (action.type) {\n      case 'PREV':\n        newDateProfile = calendar.dateProfileGenerators[viewType].buildPrev(currentDateProfile, currentDate);\n        break;\n\n      case 'NEXT':\n        newDateProfile = calendar.dateProfileGenerators[viewType].buildNext(currentDateProfile, currentDate);\n        break;\n\n      case 'SET_DATE':\n        if (!currentDateProfile.activeRange || !rangeContainsMarker(currentDateProfile.currentRange, action.dateMarker)) {\n          newDateProfile = calendar.dateProfileGenerators[viewType].build(action.dateMarker, undefined, true // forceToValid\n          );\n        }\n\n        break;\n\n      case 'SET_VIEW_TYPE':\n        var generator = calendar.dateProfileGenerators[viewType];\n\n        if (!generator) {\n          throw new Error(viewType ? 'The FullCalendar view \"' + viewType + '\" does not exist. Make sure your plugins are loaded correctly.' : 'No available FullCalendar view plugins.');\n        }\n\n        newDateProfile = generator.build(action.dateMarker || currentDate, undefined, true // forceToValid\n        );\n        break;\n    }\n\n    if (newDateProfile && newDateProfile.isValid && !(currentDateProfile && isDateProfilesEqual(currentDateProfile, newDateProfile))) {\n      return newDateProfile;\n    } else {\n      return currentDateProfile;\n    }\n  }\n\n  function reduceCurrentDate(currentDate, action, dateProfile) {\n    switch (action.type) {\n      case 'PREV':\n      case 'NEXT':\n        if (!rangeContainsMarker(dateProfile.currentRange, currentDate)) {\n          return dateProfile.currentRange.start;\n        } else {\n          return currentDate;\n        }\n\n      case 'SET_DATE':\n      case 'SET_VIEW_TYPE':\n        var newDate = action.dateMarker || currentDate;\n\n        if (dateProfile.activeRange && !rangeContainsMarker(dateProfile.activeRange, newDate)) {\n          return dateProfile.currentRange.start;\n        } else {\n          return newDate;\n        }\n\n      default:\n        return currentDate;\n    }\n  }\n\n  function reduceDateSelection(currentSelection, action, calendar) {\n    switch (action.type) {\n      case 'SELECT_DATES':\n        return action.selection;\n\n      case 'UNSELECT_DATES':\n        return null;\n\n      default:\n        return currentSelection;\n    }\n  }\n\n  function reduceSelectedEvent(currentInstanceId, action) {\n    switch (action.type) {\n      case 'SELECT_EVENT':\n        return action.eventInstanceId;\n\n      case 'UNSELECT_EVENT':\n        return '';\n\n      default:\n        return currentInstanceId;\n    }\n  }\n\n  function reduceEventDrag(currentDrag, action, sources, calendar) {\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n        var newDrag = action.state;\n        return {\n          affectedEvents: newDrag.affectedEvents,\n          mutatedEvents: newDrag.mutatedEvents,\n          isEvent: newDrag.isEvent,\n          origSeg: newDrag.origSeg\n        };\n\n      case 'UNSET_EVENT_DRAG':\n        return null;\n\n      default:\n        return currentDrag;\n    }\n  }\n\n  function reduceEventResize(currentResize, action, sources, calendar) {\n    switch (action.type) {\n      case 'SET_EVENT_RESIZE':\n        var newResize = action.state;\n        return {\n          affectedEvents: newResize.affectedEvents,\n          mutatedEvents: newResize.mutatedEvents,\n          isEvent: newResize.isEvent,\n          origSeg: newResize.origSeg\n        };\n\n      case 'UNSET_EVENT_RESIZE':\n        return null;\n\n      default:\n        return currentResize;\n    }\n  }\n\n  function computeLoadingLevel(eventSources) {\n    var cnt = 0;\n\n    for (var sourceId in eventSources) {\n      if (eventSources[sourceId].isFetching) {\n        cnt++;\n      }\n    }\n\n    return cnt;\n  }\n\n  var STANDARD_PROPS = {\n    start: null,\n    end: null,\n    allDay: Boolean\n  };\n\n  function parseDateSpan(raw, dateEnv, defaultDuration) {\n    var span = parseOpenDateSpan(raw, dateEnv);\n    var range = span.range;\n\n    if (!range.start) {\n      return null;\n    }\n\n    if (!range.end) {\n      if (defaultDuration == null) {\n        return null;\n      } else {\n        range.end = dateEnv.add(range.start, defaultDuration);\n      }\n    }\n\n    return span;\n  }\n  /*\n  TODO: somehow combine with parseRange?\n  Will return null if the start/end props were present but parsed invalidly.\n  */\n\n\n  function parseOpenDateSpan(raw, dateEnv) {\n    var leftovers = {};\n    var standardProps = refineProps(raw, STANDARD_PROPS, {}, leftovers);\n    var startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;\n    var endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;\n    var allDay = standardProps.allDay;\n\n    if (allDay == null) {\n      allDay = startMeta && startMeta.isTimeUnspecified && (!endMeta || endMeta.isTimeUnspecified);\n    } // use this leftover object as the selection object\n\n\n    leftovers.range = {\n      start: startMeta ? startMeta.marker : null,\n      end: endMeta ? endMeta.marker : null\n    };\n    leftovers.allDay = allDay;\n    return leftovers;\n  }\n\n  function isDateSpansEqual(span0, span1) {\n    return rangesEqual(span0.range, span1.range) && span0.allDay === span1.allDay && isSpanPropsEqual(span0, span1);\n  } // the NON-DATE-RELATED props\n\n\n  function isSpanPropsEqual(span0, span1) {\n    for (var propName in span1) {\n      if (propName !== 'range' && propName !== 'allDay') {\n        if (span0[propName] !== span1[propName]) {\n          return false;\n        }\n      }\n    } // are there any props that span0 has that span1 DOESN'T have?\n    // both have range/allDay, so no need to special-case.\n\n\n    for (var propName in span0) {\n      if (!(propName in span1)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function buildDateSpanApi(span, dateEnv) {\n    return {\n      start: dateEnv.toDate(span.range.start),\n      end: dateEnv.toDate(span.range.end),\n      startStr: dateEnv.formatIso(span.range.start, {\n        omitTime: span.allDay\n      }),\n      endStr: dateEnv.formatIso(span.range.end, {\n        omitTime: span.allDay\n      }),\n      allDay: span.allDay\n    };\n  }\n\n  function buildDatePointApi(span, dateEnv) {\n    return {\n      date: dateEnv.toDate(span.range.start),\n      dateStr: dateEnv.formatIso(span.range.start, {\n        omitTime: span.allDay\n      }),\n      allDay: span.allDay\n    };\n  }\n\n  function fabricateEventRange(dateSpan, eventUiBases, calendar) {\n    var def = parseEventDef({\n      editable: false\n    }, '', // sourceId\n    dateSpan.allDay, true, // hasEnd\n    calendar);\n    return {\n      def: def,\n      ui: compileEventUi(def, eventUiBases),\n      instance: createEventInstance(def.defId, dateSpan.range),\n      range: dateSpan.range,\n      isStart: true,\n      isEnd: true\n    };\n  }\n\n  function compileViewDefs(defaultConfigs, overrideConfigs) {\n    var hash = {};\n    var viewType;\n\n    for (viewType in defaultConfigs) {\n      ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n\n    for (viewType in overrideConfigs) {\n      ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n    }\n\n    return hash;\n  }\n\n  function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    if (hash[viewType]) {\n      return hash[viewType];\n    }\n\n    var viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);\n\n    if (viewDef) {\n      hash[viewType] = viewDef;\n    }\n\n    return viewDef;\n  }\n\n  function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {\n    var defaultConfig = defaultConfigs[viewType];\n    var overrideConfig = overrideConfigs[viewType];\n\n    var queryProp = function (name) {\n      return defaultConfig && defaultConfig[name] !== null ? defaultConfig[name] : overrideConfig && overrideConfig[name] !== null ? overrideConfig[name] : null;\n    };\n\n    var theClass = queryProp('class');\n    var superType = queryProp('superType');\n\n    if (!superType && theClass) {\n      superType = findViewNameBySubclass(theClass, overrideConfigs) || findViewNameBySubclass(theClass, defaultConfigs);\n    }\n\n    var superDef = superType ? ensureViewDef(superType, hash, defaultConfigs, overrideConfigs) : null;\n\n    if (!theClass && superDef) {\n      theClass = superDef.class;\n    }\n\n    if (!theClass) {\n      return null; // don't throw a warning, might be settings for a single-unit view\n    }\n\n    return {\n      type: viewType,\n      class: theClass,\n      defaults: __assign({}, superDef ? superDef.defaults : {}, defaultConfig ? defaultConfig.options : {}),\n      overrides: __assign({}, superDef ? superDef.overrides : {}, overrideConfig ? overrideConfig.options : {})\n    };\n  }\n\n  function findViewNameBySubclass(viewSubclass, configs) {\n    var superProto = Object.getPrototypeOf(viewSubclass.prototype);\n\n    for (var viewType in configs) {\n      var parsed = configs[viewType]; // need DIRECT subclass, so instanceof won't do it\n\n      if (parsed.class && parsed.class.prototype === superProto) {\n        return viewType;\n      }\n    }\n\n    return '';\n  }\n\n  function parseViewConfigs(inputs) {\n    return mapHash(inputs, parseViewConfig);\n  }\n\n  var VIEW_DEF_PROPS = {\n    type: String,\n    class: null\n  };\n\n  function parseViewConfig(input) {\n    if (typeof input === 'function') {\n      input = {\n        class: input\n      };\n    }\n\n    var options = {};\n    var props = refineProps(input, VIEW_DEF_PROPS, {}, options);\n    return {\n      superType: props.type,\n      class: props.class,\n      options: options\n    };\n  }\n\n  function buildViewSpecs(defaultInputs, optionsManager) {\n    var defaultConfigs = parseViewConfigs(defaultInputs);\n    var overrideConfigs = parseViewConfigs(optionsManager.overrides.views);\n    var viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);\n    return mapHash(viewDefs, function (viewDef) {\n      return buildViewSpec(viewDef, overrideConfigs, optionsManager);\n    });\n  }\n\n  function buildViewSpec(viewDef, overrideConfigs, optionsManager) {\n    var durationInput = viewDef.overrides.duration || viewDef.defaults.duration || optionsManager.dynamicOverrides.duration || optionsManager.overrides.duration;\n    var duration = null;\n    var durationUnit = '';\n    var singleUnit = '';\n    var singleUnitOverrides = {};\n\n    if (durationInput) {\n      duration = createDuration(durationInput);\n\n      if (duration) {\n        // valid?\n        var denom = greatestDurationDenominator(duration, !getWeeksFromInput(durationInput));\n        durationUnit = denom.unit;\n\n        if (denom.value === 1) {\n          singleUnit = durationUnit;\n          singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].options : {};\n        }\n      }\n    }\n\n    var queryButtonText = function (options) {\n      var buttonTextMap = options.buttonText || {};\n      var buttonTextKey = viewDef.defaults.buttonTextKey;\n\n      if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {\n        return buttonTextMap[buttonTextKey];\n      }\n\n      if (buttonTextMap[viewDef.type] != null) {\n        return buttonTextMap[viewDef.type];\n      }\n\n      if (buttonTextMap[singleUnit] != null) {\n        return buttonTextMap[singleUnit];\n      }\n    };\n\n    return {\n      type: viewDef.type,\n      class: viewDef.class,\n      duration: duration,\n      durationUnit: durationUnit,\n      singleUnit: singleUnit,\n      options: __assign({}, globalDefaults, viewDef.defaults, optionsManager.dirDefaults, optionsManager.localeDefaults, optionsManager.overrides, singleUnitOverrides, viewDef.overrides, optionsManager.dynamicOverrides),\n      buttonTextOverride: queryButtonText(optionsManager.dynamicOverrides) || queryButtonText(optionsManager.overrides) || // constructor-specified buttonText lookup hash takes precedence\n      viewDef.overrides.buttonText,\n      buttonTextDefault: queryButtonText(optionsManager.localeDefaults) || queryButtonText(optionsManager.dirDefaults) || viewDef.defaults.buttonText || queryButtonText(globalDefaults) || viewDef.type // fall back to given view name\n\n    };\n  }\n\n  var Toolbar =\n  /** @class */\n  function (_super) {\n    __extends(Toolbar, _super);\n\n    function Toolbar(context, extraClassName) {\n      var _this = _super.call(this, context) || this;\n\n      _this._renderLayout = memoizeRendering(_this.renderLayout, _this.unrenderLayout);\n      _this._updateTitle = memoizeRendering(_this.updateTitle, null, [_this._renderLayout]);\n      _this._updateActiveButton = memoizeRendering(_this.updateActiveButton, null, [_this._renderLayout]);\n      _this._updateToday = memoizeRendering(_this.updateToday, null, [_this._renderLayout]);\n      _this._updatePrev = memoizeRendering(_this.updatePrev, null, [_this._renderLayout]);\n      _this._updateNext = memoizeRendering(_this.updateNext, null, [_this._renderLayout]);\n      _this.el = createElement('div', {\n        className: 'fc-toolbar ' + extraClassName\n      });\n      return _this;\n    }\n\n    Toolbar.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this._renderLayout.unrender(); // should unrender everything else\n\n\n      removeElement(this.el);\n    };\n\n    Toolbar.prototype.render = function (props) {\n      this._renderLayout(props.layout);\n\n      this._updateTitle(props.title);\n\n      this._updateActiveButton(props.activeButton);\n\n      this._updateToday(props.isTodayEnabled);\n\n      this._updatePrev(props.isPrevEnabled);\n\n      this._updateNext(props.isNextEnabled);\n    };\n\n    Toolbar.prototype.renderLayout = function (layout) {\n      var el = this.el;\n      this.viewsWithButtons = [];\n      appendToElement(el, this.renderSection('left', layout.left));\n      appendToElement(el, this.renderSection('center', layout.center));\n      appendToElement(el, this.renderSection('right', layout.right));\n    };\n\n    Toolbar.prototype.unrenderLayout = function () {\n      this.el.innerHTML = '';\n    };\n\n    Toolbar.prototype.renderSection = function (position, buttonStr) {\n      var _this = this;\n\n      var _a = this,\n          theme = _a.theme,\n          calendar = _a.calendar;\n\n      var optionsManager = calendar.optionsManager;\n      var viewSpecs = calendar.viewSpecs;\n      var sectionEl = createElement('div', {\n        className: 'fc-' + position\n      });\n      var calendarCustomButtons = optionsManager.computed.customButtons || {};\n      var calendarButtonTextOverrides = optionsManager.overrides.buttonText || {};\n      var calendarButtonText = optionsManager.computed.buttonText || {};\n\n      if (buttonStr) {\n        buttonStr.split(' ').forEach(function (buttonGroupStr, i) {\n          var groupChildren = [];\n          var isOnlyButtons = true;\n          var groupEl;\n          buttonGroupStr.split(',').forEach(function (buttonName, j) {\n            var customButtonProps;\n            var viewSpec;\n            var buttonClick;\n            var buttonIcon; // only one of these will be set\n\n            var buttonText; // \"\n\n            var buttonInnerHtml;\n            var buttonClasses;\n            var buttonEl;\n            var buttonAriaAttr;\n\n            if (buttonName === 'title') {\n              groupChildren.push(htmlToElement('<h2>&nbsp;</h2>')); // we always want it to take up height\n\n              isOnlyButtons = false;\n            } else {\n              if (customButtonProps = calendarCustomButtons[buttonName]) {\n                buttonClick = function (ev) {\n                  if (customButtonProps.click) {\n                    customButtonProps.click.call(buttonEl, ev);\n                  }\n                };\n\n                (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = customButtonProps.text);\n              } else if (viewSpec = viewSpecs[buttonName]) {\n                _this.viewsWithButtons.push(buttonName);\n\n                buttonClick = function () {\n                  calendar.changeView(buttonName);\n                };\n\n                (buttonText = viewSpec.buttonTextOverride) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = viewSpec.buttonTextDefault);\n              } else if (calendar[buttonName]) {\n                // a calendar method\n                buttonClick = function () {\n                  calendar[buttonName]();\n                };\n\n                (buttonText = calendarButtonTextOverrides[buttonName]) || (buttonIcon = theme.getIconClass(buttonName)) || (buttonText = calendarButtonText[buttonName]); //            ^ everything else is considered default\n              }\n\n              if (buttonClick) {\n                buttonClasses = ['fc-' + buttonName + '-button', theme.getClass('button')];\n\n                if (buttonText) {\n                  buttonInnerHtml = htmlEscape(buttonText);\n                  buttonAriaAttr = '';\n                } else if (buttonIcon) {\n                  buttonInnerHtml = \"<span class='\" + buttonIcon + \"'></span>\";\n                  buttonAriaAttr = ' aria-label=\"' + buttonName + '\"';\n                }\n\n                buttonEl = htmlToElement( // type=\"button\" so that it doesn't submit a form\n                '<button type=\"button\" class=\"' + buttonClasses.join(' ') + '\"' + buttonAriaAttr + '>' + buttonInnerHtml + '</button>');\n                buttonEl.addEventListener('click', buttonClick);\n                groupChildren.push(buttonEl);\n              }\n            }\n          });\n\n          if (groupChildren.length > 1) {\n            groupEl = document.createElement('div');\n            var buttonGroupClassName = theme.getClass('buttonGroup');\n\n            if (isOnlyButtons && buttonGroupClassName) {\n              groupEl.classList.add(buttonGroupClassName);\n            }\n\n            appendToElement(groupEl, groupChildren);\n            sectionEl.appendChild(groupEl);\n          } else {\n            appendToElement(sectionEl, groupChildren); // 1 or 0 children\n          }\n        });\n      }\n\n      return sectionEl;\n    };\n\n    Toolbar.prototype.updateToday = function (isTodayEnabled) {\n      this.toggleButtonEnabled('today', isTodayEnabled);\n    };\n\n    Toolbar.prototype.updatePrev = function (isPrevEnabled) {\n      this.toggleButtonEnabled('prev', isPrevEnabled);\n    };\n\n    Toolbar.prototype.updateNext = function (isNextEnabled) {\n      this.toggleButtonEnabled('next', isNextEnabled);\n    };\n\n    Toolbar.prototype.updateTitle = function (text) {\n      findElements(this.el, 'h2').forEach(function (titleEl) {\n        titleEl.innerText = text;\n      });\n    };\n\n    Toolbar.prototype.updateActiveButton = function (buttonName) {\n      var className = this.theme.getClass('buttonActive');\n      findElements(this.el, 'button').forEach(function (buttonEl) {\n        if (buttonName && buttonEl.classList.contains('fc-' + buttonName + '-button')) {\n          buttonEl.classList.add(className);\n        } else {\n          buttonEl.classList.remove(className);\n        }\n      });\n    };\n\n    Toolbar.prototype.toggleButtonEnabled = function (buttonName, bool) {\n      findElements(this.el, '.fc-' + buttonName + '-button').forEach(function (buttonEl) {\n        buttonEl.disabled = !bool;\n      });\n    };\n\n    return Toolbar;\n  }(Component);\n\n  var CalendarComponent =\n  /** @class */\n  function (_super) {\n    __extends(CalendarComponent, _super);\n\n    function CalendarComponent(context, el) {\n      var _this = _super.call(this, context) || this;\n\n      _this._renderToolbars = memoizeRendering(_this.renderToolbars);\n      _this.buildViewPropTransformers = memoize(buildViewPropTransformers);\n      _this.el = el;\n      prependToElement(el, _this.contentEl = createElement('div', {\n        className: 'fc-view-container'\n      }));\n      var calendar = _this.calendar;\n\n      for (var _i = 0, _a = calendar.pluginSystem.hooks.viewContainerModifiers; _i < _a.length; _i++) {\n        var modifyViewContainer = _a[_i];\n        modifyViewContainer(_this.contentEl, calendar);\n      }\n\n      _this.toggleElClassNames(true);\n\n      _this.computeTitle = memoize(computeTitle);\n      _this.parseBusinessHours = memoize(function (input) {\n        return parseBusinessHours(input, _this.calendar);\n      });\n      return _this;\n    }\n\n    CalendarComponent.prototype.destroy = function () {\n      if (this.header) {\n        this.header.destroy();\n      }\n\n      if (this.footer) {\n        this.footer.destroy();\n      }\n\n      if (this.view) {\n        this.view.destroy();\n      }\n\n      removeElement(this.contentEl);\n      this.toggleElClassNames(false);\n\n      _super.prototype.destroy.call(this);\n    };\n\n    CalendarComponent.prototype.toggleElClassNames = function (bool) {\n      var classList = this.el.classList;\n      var dirClassName = 'fc-' + this.opt('dir');\n      var themeClassName = this.theme.getClass('widget');\n\n      if (bool) {\n        classList.add('fc');\n        classList.add(dirClassName);\n        classList.add(themeClassName);\n      } else {\n        classList.remove('fc');\n        classList.remove(dirClassName);\n        classList.remove(themeClassName);\n      }\n    };\n\n    CalendarComponent.prototype.render = function (props) {\n      this.freezeHeight();\n      var title = this.computeTitle(props.dateProfile, props.viewSpec.options);\n\n      this._renderToolbars(props.viewSpec, props.dateProfile, props.currentDate, props.dateProfileGenerator, title);\n\n      this.renderView(props, title);\n      this.updateSize();\n      this.thawHeight();\n    };\n\n    CalendarComponent.prototype.renderToolbars = function (viewSpec, dateProfile, currentDate, dateProfileGenerator, title) {\n      var headerLayout = this.opt('header');\n      var footerLayout = this.opt('footer');\n      var now = this.calendar.getNow();\n      var todayInfo = dateProfileGenerator.build(now);\n      var prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate);\n      var nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate);\n      var toolbarProps = {\n        title: title,\n        activeButton: viewSpec.type,\n        isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),\n        isPrevEnabled: prevInfo.isValid,\n        isNextEnabled: nextInfo.isValid\n      };\n\n      if (headerLayout) {\n        if (!this.header) {\n          this.header = new Toolbar(this.context, 'fc-header-toolbar');\n          prependToElement(this.el, this.header.el);\n        }\n\n        this.header.receiveProps(__assign({\n          layout: headerLayout\n        }, toolbarProps));\n      } else if (this.header) {\n        this.header.destroy();\n        this.header = null;\n      }\n\n      if (footerLayout) {\n        if (!this.footer) {\n          this.footer = new Toolbar(this.context, 'fc-footer-toolbar');\n          appendToElement(this.el, this.footer.el);\n        }\n\n        this.footer.receiveProps(__assign({\n          layout: footerLayout\n        }, toolbarProps));\n      } else if (this.footer) {\n        this.footer.destroy();\n        this.footer = null;\n      }\n    };\n\n    CalendarComponent.prototype.renderView = function (props, title) {\n      var view = this.view;\n      var viewSpec = props.viewSpec,\n          dateProfileGenerator = props.dateProfileGenerator;\n\n      if (!view || view.viewSpec !== viewSpec) {\n        if (view) {\n          view.destroy();\n        }\n\n        view = this.view = new viewSpec['class']({\n          calendar: this.calendar,\n          view: null,\n          dateEnv: this.dateEnv,\n          theme: this.theme,\n          options: viewSpec.options\n        }, viewSpec, dateProfileGenerator, this.contentEl);\n      } else {\n        view.addScroll(view.queryScroll());\n      }\n\n      view.title = title; // for the API\n\n      var viewProps = {\n        dateProfile: props.dateProfile,\n        businessHours: this.parseBusinessHours(viewSpec.options.businessHours),\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        dateSelection: props.dateSelection,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize\n      };\n      var transformers = this.buildViewPropTransformers(this.calendar.pluginSystem.hooks.viewPropsTransformers);\n\n      for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {\n        var transformer = transformers_1[_i];\n\n        __assign(viewProps, transformer.transform(viewProps, viewSpec, props, view));\n      }\n\n      view.receiveProps(viewProps);\n    }; // Sizing\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    CalendarComponent.prototype.updateSize = function (isResize) {\n      if (isResize === void 0) {\n        isResize = false;\n      }\n\n      var view = this.view;\n\n      if (isResize) {\n        view.addScroll(view.queryScroll());\n      }\n\n      if (isResize || this.isHeightAuto == null) {\n        this.computeHeightVars();\n      }\n\n      view.updateSize(isResize, this.viewHeight, this.isHeightAuto);\n      view.updateNowIndicator(); // we need to guarantee this will run after updateSize\n\n      view.popScroll(isResize);\n    };\n\n    CalendarComponent.prototype.computeHeightVars = function () {\n      var calendar = this.calendar; // yuck. need to handle dynamic options\n\n      var heightInput = calendar.opt('height');\n      var contentHeightInput = calendar.opt('contentHeight');\n      this.isHeightAuto = heightInput === 'auto' || contentHeightInput === 'auto';\n\n      if (typeof contentHeightInput === 'number') {\n        // exists and not 'auto'\n        this.viewHeight = contentHeightInput;\n      } else if (typeof contentHeightInput === 'function') {\n        // exists and is a function\n        this.viewHeight = contentHeightInput();\n      } else if (typeof heightInput === 'number') {\n        // exists and not 'auto'\n        this.viewHeight = heightInput - this.queryToolbarsHeight();\n      } else if (typeof heightInput === 'function') {\n        // exists and is a function\n        this.viewHeight = heightInput() - this.queryToolbarsHeight();\n      } else if (heightInput === 'parent') {\n        // set to height of parent element\n        this.viewHeight = this.el.parentNode.offsetHeight - this.queryToolbarsHeight();\n      } else {\n        this.viewHeight = Math.round(this.contentEl.offsetWidth / Math.max(calendar.opt('aspectRatio'), .5));\n      }\n    };\n\n    CalendarComponent.prototype.queryToolbarsHeight = function () {\n      var height = 0;\n\n      if (this.header) {\n        height += computeHeightAndMargins(this.header.el);\n      }\n\n      if (this.footer) {\n        height += computeHeightAndMargins(this.footer.el);\n      }\n\n      return height;\n    }; // Height \"Freezing\"\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    CalendarComponent.prototype.freezeHeight = function () {\n      applyStyle(this.el, {\n        height: this.el.offsetHeight,\n        overflow: 'hidden'\n      });\n    };\n\n    CalendarComponent.prototype.thawHeight = function () {\n      applyStyle(this.el, {\n        height: '',\n        overflow: ''\n      });\n    };\n\n    return CalendarComponent;\n  }(Component); // Title and Date Formatting\n  // -----------------------------------------------------------------------------------------------------------------\n  // Computes what the title at the top of the calendar should be for this view\n\n\n  function computeTitle(dateProfile, viewOptions) {\n    var range; // for views that span a large unit of time, show the proper interval, ignoring stray days before and after\n\n    if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {\n      range = dateProfile.currentRange;\n    } else {\n      // for day units or smaller, use the actual day range\n      range = dateProfile.activeRange;\n    }\n\n    return this.dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || computeTitleFormat(dateProfile), viewOptions.titleRangeSeparator), {\n      isEndExclusive: dateProfile.isRangeAllDay\n    });\n  } // Generates the format string that should be used to generate the title for the current date range.\n  // Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.\n\n\n  function computeTitleFormat(dateProfile) {\n    var currentRangeUnit = dateProfile.currentRangeUnit;\n\n    if (currentRangeUnit === 'year') {\n      return {\n        year: 'numeric'\n      };\n    } else if (currentRangeUnit === 'month') {\n      return {\n        year: 'numeric',\n        month: 'long'\n      }; // like \"September 2014\"\n    } else {\n      var days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);\n\n      if (days !== null && days > 1) {\n        // multi-day range. shorter, like \"Sep 9 - 10 2014\"\n        return {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        };\n      } else {\n        // one day. longer, like \"September 9 2014\"\n        return {\n          year: 'numeric',\n          month: 'long',\n          day: 'numeric'\n        };\n      }\n    }\n  } // Plugin\n  // -----------------------------------------------------------------------------------------------------------------\n\n\n  function buildViewPropTransformers(theClasses) {\n    return theClasses.map(function (theClass) {\n      return new theClass();\n    });\n  }\n\n  var Interaction =\n  /** @class */\n  function () {\n    function Interaction(settings) {\n      this.component = settings.component;\n    }\n\n    Interaction.prototype.destroy = function () {};\n\n    return Interaction;\n  }();\n\n  function parseInteractionSettings(component, input) {\n    return {\n      component: component,\n      el: input.el,\n      useEventCenter: input.useEventCenter != null ? input.useEventCenter : true\n    };\n  }\n\n  function interactionSettingsToStore(settings) {\n    var _a;\n\n    return _a = {}, _a[settings.component.uid] = settings, _a;\n  } // global state\n\n\n  var interactionSettingsStore = {};\n  /*\n  Detects when the user clicks on an event within a DateComponent\n  */\n\n  var EventClicking =\n  /** @class */\n  function (_super) {\n    __extends(EventClicking, _super);\n\n    function EventClicking(settings) {\n      var _this = _super.call(this, settings) || this;\n\n      _this.handleSegClick = function (ev, segEl) {\n        var component = _this.component;\n        var seg = getElSeg(segEl);\n\n        if (seg && // might be the <div> surrounding the more link\n        component.isValidSegDownEl(ev.target)) {\n          // our way to simulate a link click for elements that can't be <a> tags\n          // grab before trigger fired in case trigger trashes DOM thru rerendering\n          var hasUrlContainer = elementClosest(ev.target, '.fc-has-url');\n          var url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';\n          component.publiclyTrigger('eventClick', [{\n            el: segEl,\n            event: new EventApi(component.calendar, seg.eventRange.def, seg.eventRange.instance),\n            jsEvent: ev,\n            view: component.view\n          }]);\n\n          if (url && !ev.defaultPrevented) {\n            window.location.href = url;\n          }\n        }\n      };\n\n      var component = settings.component;\n      _this.destroy = listenBySelector(component.el, 'click', component.fgSegSelector + ',' + component.bgSegSelector, _this.handleSegClick);\n      return _this;\n    }\n\n    return EventClicking;\n  }(Interaction);\n  /*\n  Triggers events and adds/removes core classNames when the user's pointer\n  enters/leaves event-elements of a component.\n  */\n\n\n  var EventHovering =\n  /** @class */\n  function (_super) {\n    __extends(EventHovering, _super);\n\n    function EventHovering(settings) {\n      var _this = _super.call(this, settings) || this; // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it\n\n\n      _this.handleEventElRemove = function (el) {\n        if (el === _this.currentSegEl) {\n          _this.handleSegLeave(null, _this.currentSegEl);\n        }\n      };\n\n      _this.handleSegEnter = function (ev, segEl) {\n        if (getElSeg(segEl)) {\n          // TODO: better way to make sure not hovering over more+ link or its wrapper\n          segEl.classList.add('fc-allow-mouse-resize');\n          _this.currentSegEl = segEl;\n\n          _this.triggerEvent('eventMouseEnter', ev, segEl);\n        }\n      };\n\n      _this.handleSegLeave = function (ev, segEl) {\n        if (_this.currentSegEl) {\n          segEl.classList.remove('fc-allow-mouse-resize');\n          _this.currentSegEl = null;\n\n          _this.triggerEvent('eventMouseLeave', ev, segEl);\n        }\n      };\n\n      var component = settings.component;\n      _this.removeHoverListeners = listenToHoverBySelector(component.el, component.fgSegSelector + ',' + component.bgSegSelector, _this.handleSegEnter, _this.handleSegLeave);\n      component.calendar.on('eventElRemove', _this.handleEventElRemove);\n      return _this;\n    }\n\n    EventHovering.prototype.destroy = function () {\n      this.removeHoverListeners();\n      this.component.calendar.off('eventElRemove', this.handleEventElRemove);\n    };\n\n    EventHovering.prototype.triggerEvent = function (publicEvName, ev, segEl) {\n      var component = this.component;\n      var seg = getElSeg(segEl);\n\n      if (!ev || component.isValidSegDownEl(ev.target)) {\n        component.publiclyTrigger(publicEvName, [{\n          el: segEl,\n          event: new EventApi(this.component.calendar, seg.eventRange.def, seg.eventRange.instance),\n          jsEvent: ev,\n          view: component.view\n        }]);\n      }\n    };\n\n    return EventHovering;\n  }(Interaction);\n\n  var StandardTheme =\n  /** @class */\n  function (_super) {\n    __extends(StandardTheme, _super);\n\n    function StandardTheme() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    return StandardTheme;\n  }(Theme);\n\n  StandardTheme.prototype.classes = {\n    widget: 'fc-unthemed',\n    widgetHeader: 'fc-widget-header',\n    widgetContent: 'fc-widget-content',\n    buttonGroup: 'fc-button-group',\n    button: 'fc-button fc-button-primary',\n    buttonActive: 'fc-button-active',\n    popoverHeader: 'fc-widget-header',\n    popoverContent: 'fc-widget-content',\n    // day grid\n    headerRow: 'fc-widget-header',\n    dayRow: 'fc-widget-content',\n    // list view\n    listView: 'fc-widget-content'\n  };\n  StandardTheme.prototype.baseIconClass = 'fc-icon';\n  StandardTheme.prototype.iconClasses = {\n    close: 'fc-icon-x',\n    prev: 'fc-icon-chevron-left',\n    next: 'fc-icon-chevron-right',\n    prevYear: 'fc-icon-chevrons-left',\n    nextYear: 'fc-icon-chevrons-right'\n  };\n  StandardTheme.prototype.iconOverrideOption = 'buttonIcons';\n  StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';\n  StandardTheme.prototype.iconOverridePrefix = 'fc-icon-';\n\n  var Calendar =\n  /** @class */\n  function () {\n    function Calendar(el, overrides) {\n      var _this = this;\n\n      this.parseRawLocales = memoize(parseRawLocales);\n      this.buildLocale = memoize(buildLocale);\n      this.buildDateEnv = memoize(buildDateEnv);\n      this.buildTheme = memoize(buildTheme);\n      this.buildEventUiSingleBase = memoize(this._buildEventUiSingleBase);\n      this.buildSelectionConfig = memoize(this._buildSelectionConfig);\n      this.buildEventUiBySource = memoizeOutput(buildEventUiBySource, isObjectsSimilar);\n      this.buildEventUiBases = memoize(buildEventUiBases);\n      this.interactionsStore = {};\n      this.actionQueue = [];\n      this.isReducing = false; // isDisplaying: boolean = false // installed in DOM? accepting renders?\n\n      this.needsRerender = false; // needs a render?\n\n      this.needsFullRerender = false;\n      this.isRendering = false; // currently in the executeRender function?\n\n      this.renderingPauseDepth = 0;\n      this.buildDelayedRerender = memoize(buildDelayedRerender);\n      this.afterSizingTriggers = {};\n      this.isViewUpdated = false;\n      this.isDatesUpdated = false;\n      this.isEventsUpdated = false;\n      this.el = el;\n      this.optionsManager = new OptionsManager(overrides || {});\n      this.pluginSystem = new PluginSystem(); // only do once. don't do in handleOptions. because can't remove plugins\n\n      this.addPluginInputs(this.optionsManager.computed.plugins || []);\n      this.handleOptions(this.optionsManager.computed);\n      this.publiclyTrigger('_init'); // for tests\n\n      this.hydrate();\n      this.calendarInteractions = this.pluginSystem.hooks.calendarInteractions.map(function (calendarInteractionClass) {\n        return new calendarInteractionClass(_this);\n      });\n    }\n\n    Calendar.prototype.addPluginInputs = function (pluginInputs) {\n      var pluginDefs = refinePluginDefs(pluginInputs);\n\n      for (var _i = 0, pluginDefs_1 = pluginDefs; _i < pluginDefs_1.length; _i++) {\n        var pluginDef = pluginDefs_1[_i];\n        this.pluginSystem.add(pluginDef);\n      }\n    };\n\n    Object.defineProperty(Calendar.prototype, \"view\", {\n      // public API\n      get: function () {\n        return this.component ? this.component.view : null;\n      },\n      enumerable: true,\n      configurable: true\n    }); // Public API for rendering\n    // -----------------------------------------------------------------------------------------------------------------\n\n    Calendar.prototype.render = function () {\n      if (!this.component) {\n        this.renderableEventStore = createEmptyEventStore();\n        this.bindHandlers();\n        this.executeRender();\n      } else {\n        this.requestRerender(true);\n      }\n    };\n\n    Calendar.prototype.destroy = function () {\n      if (this.component) {\n        this.unbindHandlers();\n        this.component.destroy(); // don't null-out. in case API needs access\n\n        this.component = null; // umm ???\n\n        for (var _i = 0, _a = this.calendarInteractions; _i < _a.length; _i++) {\n          var interaction = _a[_i];\n          interaction.destroy();\n        }\n\n        this.publiclyTrigger('_destroyed');\n      }\n    }; // Handlers\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.bindHandlers = function () {\n      var _this = this; // event delegation for nav links\n\n\n      this.removeNavLinkListener = listenBySelector(this.el, 'click', 'a[data-goto]', function (ev, anchorEl) {\n        var gotoOptions = anchorEl.getAttribute('data-goto');\n        gotoOptions = gotoOptions ? JSON.parse(gotoOptions) : {};\n        var dateEnv = _this.dateEnv;\n        var dateMarker = dateEnv.createMarker(gotoOptions.date);\n        var viewType = gotoOptions.type; // property like \"navLinkDayClick\". might be a string or a function\n\n        var customAction = _this.viewOpt('navLink' + capitaliseFirstLetter(viewType) + 'Click');\n\n        if (typeof customAction === 'function') {\n          customAction(dateEnv.toDate(dateMarker), ev);\n        } else {\n          if (typeof customAction === 'string') {\n            viewType = customAction;\n          }\n\n          _this.zoomTo(dateMarker, viewType);\n        }\n      });\n\n      if (this.opt('handleWindowResize')) {\n        window.addEventListener('resize', this.windowResizeProxy = debounce( // prevents rapid calls\n        this.windowResize.bind(this), this.opt('windowResizeDelay')));\n      }\n    };\n\n    Calendar.prototype.unbindHandlers = function () {\n      this.removeNavLinkListener();\n\n      if (this.windowResizeProxy) {\n        window.removeEventListener('resize', this.windowResizeProxy);\n        this.windowResizeProxy = null;\n      }\n    }; // Dispatcher\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.hydrate = function () {\n      var _this = this;\n\n      this.state = this.buildInitialState();\n      var rawSources = this.opt('eventSources') || [];\n      var singleRawSource = this.opt('events');\n      var sources = []; // parsed\n\n      if (singleRawSource) {\n        rawSources.unshift(singleRawSource);\n      }\n\n      for (var _i = 0, rawSources_1 = rawSources; _i < rawSources_1.length; _i++) {\n        var rawSource = rawSources_1[_i];\n        var source = parseEventSource(rawSource, this);\n\n        if (source) {\n          sources.push(source);\n        }\n      }\n\n      this.batchRendering(function () {\n        _this.dispatch({\n          type: 'INIT'\n        }); // pass in sources here?\n\n\n        _this.dispatch({\n          type: 'ADD_EVENT_SOURCES',\n          sources: sources\n        });\n\n        _this.dispatch({\n          type: 'SET_VIEW_TYPE',\n          viewType: _this.opt('defaultView') || _this.pluginSystem.hooks.defaultView\n        });\n      });\n    };\n\n    Calendar.prototype.buildInitialState = function () {\n      return {\n        viewType: null,\n        loadingLevel: 0,\n        eventSourceLoadingLevel: 0,\n        currentDate: this.getInitialDate(),\n        dateProfile: null,\n        eventSources: {},\n        eventStore: createEmptyEventStore(),\n        dateSelection: null,\n        eventSelection: '',\n        eventDrag: null,\n        eventResize: null\n      };\n    };\n\n    Calendar.prototype.dispatch = function (action) {\n      this.actionQueue.push(action);\n\n      if (!this.isReducing) {\n        this.isReducing = true;\n        var oldState = this.state;\n\n        while (this.actionQueue.length) {\n          this.state = this.reduce(this.state, this.actionQueue.shift(), this);\n        }\n\n        var newState = this.state;\n        this.isReducing = false;\n\n        if (!oldState.loadingLevel && newState.loadingLevel) {\n          this.publiclyTrigger('loading', [true]);\n        } else if (oldState.loadingLevel && !newState.loadingLevel) {\n          this.publiclyTrigger('loading', [false]);\n        }\n\n        var view = this.component && this.component.view;\n\n        if (oldState.eventStore !== newState.eventStore || this.needsFullRerender) {\n          if (oldState.eventStore) {\n            this.isEventsUpdated = true;\n          }\n        }\n\n        if (oldState.dateProfile !== newState.dateProfile || this.needsFullRerender) {\n          if (oldState.dateProfile && view) {\n            // why would view be null!?\n            this.publiclyTrigger('datesDestroy', [{\n              view: view,\n              el: view.el\n            }]);\n          }\n\n          this.isDatesUpdated = true;\n        }\n\n        if (oldState.viewType !== newState.viewType || this.needsFullRerender) {\n          if (oldState.viewType && view) {\n            // why would view be null!?\n            this.publiclyTrigger('viewSkeletonDestroy', [{\n              view: view,\n              el: view.el\n            }]);\n          }\n\n          this.isViewUpdated = true;\n        }\n\n        this.requestRerender();\n      }\n    };\n\n    Calendar.prototype.reduce = function (state, action, calendar) {\n      return reduce(state, action, calendar);\n    }; // Render Queue\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.requestRerender = function (needsFull) {\n      if (needsFull === void 0) {\n        needsFull = false;\n      }\n\n      this.needsRerender = true;\n      this.needsFullRerender = this.needsFullRerender || needsFull;\n      this.delayedRerender(); // will call a debounced-version of tryRerender\n    };\n\n    Calendar.prototype.tryRerender = function () {\n      if (this.component && // must be accepting renders\n      this.needsRerender && // indicates that a rerender was requested\n      !this.renderingPauseDepth && // not paused\n      !this.isRendering // not currently in the render loop\n      ) {\n          this.executeRender();\n        }\n    };\n\n    Calendar.prototype.batchRendering = function (func) {\n      this.renderingPauseDepth++;\n      func();\n      this.renderingPauseDepth--;\n\n      if (this.needsRerender) {\n        this.requestRerender();\n      }\n    }; // Rendering\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.executeRender = function () {\n      var needsFullRerender = this.needsFullRerender; // save before clearing\n      // clear these BEFORE the render so that new values will accumulate during render\n\n      this.needsRerender = false;\n      this.needsFullRerender = false;\n      this.isRendering = true;\n      this.renderComponent(needsFullRerender);\n      this.isRendering = false; // received a rerender request while rendering\n\n      if (this.needsRerender) {\n        this.delayedRerender();\n      }\n    };\n    /*\n    don't call this directly. use executeRender instead\n    */\n\n\n    Calendar.prototype.renderComponent = function (needsFull) {\n      var _a = this,\n          state = _a.state,\n          component = _a.component;\n\n      var viewType = state.viewType;\n      var viewSpec = this.viewSpecs[viewType];\n      var savedScroll = needsFull && component ? component.view.queryScroll() : null;\n\n      if (!viewSpec) {\n        throw new Error(\"View type \\\"\" + viewType + \"\\\" is not valid\");\n      } // if event sources are still loading and progressive rendering hasn't been enabled,\n      // keep rendering the last fully loaded set of events\n\n\n      var renderableEventStore = this.renderableEventStore = state.eventSourceLoadingLevel && !this.opt('progressiveEventRendering') ? this.renderableEventStore : state.eventStore;\n      var eventUiSingleBase = this.buildEventUiSingleBase(viewSpec.options);\n      var eventUiBySource = this.buildEventUiBySource(state.eventSources);\n      var eventUiBases = this.eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);\n\n      if (needsFull || !component) {\n        if (component) {\n          component.freezeHeight(); // next component will unfreeze it\n\n          component.destroy();\n        }\n\n        component = this.component = new CalendarComponent({\n          calendar: this,\n          view: null,\n          dateEnv: this.dateEnv,\n          theme: this.theme,\n          options: this.optionsManager.computed\n        }, this.el);\n      }\n\n      component.receiveProps(__assign({}, state, {\n        viewSpec: viewSpec,\n        dateProfile: state.dateProfile,\n        dateProfileGenerator: this.dateProfileGenerators[viewType],\n        eventStore: renderableEventStore,\n        eventUiBases: eventUiBases,\n        dateSelection: state.dateSelection,\n        eventSelection: state.eventSelection,\n        eventDrag: state.eventDrag,\n        eventResize: state.eventResize\n      }));\n\n      if (savedScroll) {\n        component.view.applyScroll(savedScroll, false);\n      }\n\n      if (this.isViewUpdated) {\n        this.isViewUpdated = false;\n        this.publiclyTrigger('viewSkeletonRender', [{\n          view: component.view,\n          el: component.view.el\n        }]);\n      }\n\n      if (this.isDatesUpdated) {\n        this.isDatesUpdated = false;\n        this.publiclyTrigger('datesRender', [{\n          view: component.view,\n          el: component.view.el\n        }]);\n      }\n\n      if (this.isEventsUpdated) {\n        this.isEventsUpdated = false;\n      }\n\n      this.releaseAfterSizingTriggers();\n    }; // Options\n    // -----------------------------------------------------------------------------------------------------------------\n\n    /*\n    Not meant for public API\n    */\n\n\n    Calendar.prototype.resetOptions = function (options) {\n      var _this = this;\n\n      var changeHandlers = this.pluginSystem.hooks.optionChangeHandlers;\n      var oldOptions = this.optionsManager.overrides;\n      var oldNormalOptions = {};\n      var normalOptions = {};\n      var specialOptions = {};\n\n      for (var name_1 in oldOptions) {\n        if (!changeHandlers[name_1]) {\n          oldNormalOptions[name_1] = oldOptions[name_1];\n        }\n      }\n\n      for (var name_2 in options) {\n        if (changeHandlers[name_2]) {\n          specialOptions[name_2] = options[name_2];\n        } else {\n          normalOptions[name_2] = options[name_2];\n        }\n      }\n\n      this.batchRendering(function () {\n        if (anyKeysRemoved(oldNormalOptions, normalOptions)) {\n          _this.processOptions(options, 'reset');\n        } else {\n          _this.processOptions(computeChangedProps(oldNormalOptions, normalOptions));\n        } // handle special options last\n\n\n        for (var name_3 in specialOptions) {\n          changeHandlers[name_3](specialOptions[name_3], _this);\n        }\n      });\n    };\n    /*\n    Not meant for public API. Won't give the same precedence that setOption does\n    */\n\n\n    Calendar.prototype.setOptions = function (options) {\n      var _this = this;\n\n      var changeHandlers = this.pluginSystem.hooks.optionChangeHandlers;\n      var normalOptions = {};\n      var specialOptions = {};\n\n      for (var name_4 in options) {\n        if (changeHandlers[name_4]) {\n          specialOptions[name_4] = options[name_4];\n        } else {\n          normalOptions[name_4] = options[name_4];\n        }\n      }\n\n      this.batchRendering(function () {\n        _this.processOptions(normalOptions); // handle special options last\n\n\n        for (var name_5 in specialOptions) {\n          changeHandlers[name_5](specialOptions[name_5], _this);\n        }\n      });\n    };\n\n    Calendar.prototype.processOptions = function (options, mode) {\n      var _this = this;\n\n      var oldDateEnv = this.dateEnv; // do this before handleOptions\n\n      var isTimeZoneDirty = false;\n      var isSizeDirty = false;\n      var anyDifficultOptions = false;\n\n      for (var name_6 in options) {\n        if (/^(height|contentHeight|aspectRatio)$/.test(name_6)) {\n          isSizeDirty = true;\n        } else if (/^(defaultDate|defaultView)$/.test(name_6)) ;else {\n          anyDifficultOptions = true;\n\n          if (name_6 === 'timeZone') {\n            isTimeZoneDirty = true;\n          }\n        }\n      }\n\n      if (mode === 'reset') {\n        anyDifficultOptions = true;\n        this.optionsManager.reset(options);\n      } else if (mode === 'dynamic') {\n        this.optionsManager.addDynamic(options); // takes higher precedence\n      } else {\n        this.optionsManager.add(options);\n      }\n\n      if (anyDifficultOptions) {\n        this.handleOptions(this.optionsManager.computed); // only for \"difficult\" options\n\n        this.needsFullRerender = true;\n        this.batchRendering(function () {\n          if (isTimeZoneDirty) {\n            _this.dispatch({\n              type: 'CHANGE_TIMEZONE',\n              oldDateEnv: oldDateEnv\n            });\n          }\n          /* HACK\n          has the same effect as calling this.requestRerender(true)\n          but recomputes the state's dateProfile\n          */\n\n\n          _this.dispatch({\n            type: 'SET_VIEW_TYPE',\n            viewType: _this.state.viewType\n          });\n        });\n      }\n\n      if (isSizeDirty) {\n        this.updateSize();\n      }\n    };\n\n    Calendar.prototype.setOption = function (name, val) {\n      var _a;\n\n      this.processOptions((_a = {}, _a[name] = val, _a), 'dynamic');\n    };\n\n    Calendar.prototype.getOption = function (name) {\n      return this.optionsManager.computed[name];\n    };\n\n    Calendar.prototype.opt = function (name) {\n      return this.optionsManager.computed[name];\n    };\n\n    Calendar.prototype.viewOpt = function (name) {\n      return this.viewOpts()[name];\n    };\n\n    Calendar.prototype.viewOpts = function () {\n      return this.viewSpecs[this.state.viewType].options;\n    };\n    /*\n    rebuilds things based off of a complete set of refined options\n    */\n\n\n    Calendar.prototype.handleOptions = function (options) {\n      var _this = this;\n\n      var pluginHooks = this.pluginSystem.hooks;\n      this.defaultAllDayEventDuration = createDuration(options.defaultAllDayEventDuration);\n      this.defaultTimedEventDuration = createDuration(options.defaultTimedEventDuration);\n      this.delayedRerender = this.buildDelayedRerender(options.rerenderDelay);\n      this.theme = this.buildTheme(options);\n      var available = this.parseRawLocales(options.locales);\n      this.availableRawLocales = available.map;\n      var locale = this.buildLocale(options.locale || available.defaultCode, available.map);\n      this.dateEnv = this.buildDateEnv(locale, options.timeZone, pluginHooks.namedTimeZonedImpl, options.firstDay, options.weekNumberCalculation, options.weekLabel, pluginHooks.cmdFormatter);\n      this.selectionConfig = this.buildSelectionConfig(options); // needs dateEnv. do after :(\n      // ineffecient to do every time?\n\n      this.viewSpecs = buildViewSpecs(pluginHooks.views, this.optionsManager); // ineffecient to do every time?\n\n      this.dateProfileGenerators = mapHash(this.viewSpecs, function (viewSpec) {\n        return new viewSpec.class.prototype.dateProfileGeneratorClass(viewSpec, _this);\n      });\n    };\n\n    Calendar.prototype.getAvailableLocaleCodes = function () {\n      return Object.keys(this.availableRawLocales);\n    };\n\n    Calendar.prototype._buildSelectionConfig = function (rawOpts) {\n      return processScopedUiProps('select', rawOpts, this);\n    };\n\n    Calendar.prototype._buildEventUiSingleBase = function (rawOpts) {\n      if (rawOpts.editable) {\n        // so 'editable' affected events\n        rawOpts = __assign({}, rawOpts, {\n          eventEditable: true\n        });\n      }\n\n      return processScopedUiProps('event', rawOpts, this);\n    }; // Trigger\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.hasPublicHandlers = function (name) {\n      return this.hasHandlers(name) || this.opt(name); // handler specified in options\n    };\n\n    Calendar.prototype.publiclyTrigger = function (name, args) {\n      var optHandler = this.opt(name);\n      this.triggerWith(name, this, args);\n\n      if (optHandler) {\n        return optHandler.apply(this, args);\n      }\n    };\n\n    Calendar.prototype.publiclyTriggerAfterSizing = function (name, args) {\n      var afterSizingTriggers = this.afterSizingTriggers;\n      (afterSizingTriggers[name] || (afterSizingTriggers[name] = [])).push(args);\n    };\n\n    Calendar.prototype.releaseAfterSizingTriggers = function () {\n      var afterSizingTriggers = this.afterSizingTriggers;\n\n      for (var name_7 in afterSizingTriggers) {\n        for (var _i = 0, _a = afterSizingTriggers[name_7]; _i < _a.length; _i++) {\n          var args = _a[_i];\n          this.publiclyTrigger(name_7, args);\n        }\n      }\n\n      this.afterSizingTriggers = {};\n    }; // View\n    // -----------------------------------------------------------------------------------------------------------------\n    // Returns a boolean about whether the view is okay to instantiate at some point\n\n\n    Calendar.prototype.isValidViewType = function (viewType) {\n      return Boolean(this.viewSpecs[viewType]);\n    };\n\n    Calendar.prototype.changeView = function (viewType, dateOrRange) {\n      var dateMarker = null;\n\n      if (dateOrRange) {\n        if (dateOrRange.start && dateOrRange.end) {\n          // a range\n          this.optionsManager.addDynamic({\n            visibleRange: dateOrRange\n          }); // will not rerender\n\n          this.handleOptions(this.optionsManager.computed); // ...but yuck\n        } else {\n          // a date\n          dateMarker = this.dateEnv.createMarker(dateOrRange); // just like gotoDate\n        }\n      }\n\n      this.unselect();\n      this.dispatch({\n        type: 'SET_VIEW_TYPE',\n        viewType: viewType,\n        dateMarker: dateMarker\n      });\n    }; // Forces navigation to a view for the given date.\n    // `viewType` can be a specific view name or a generic one like \"week\" or \"day\".\n    // needs to change\n\n\n    Calendar.prototype.zoomTo = function (dateMarker, viewType) {\n      var spec;\n      viewType = viewType || 'day'; // day is default zoom\n\n      spec = this.viewSpecs[viewType] || this.getUnitViewSpec(viewType);\n      this.unselect();\n\n      if (spec) {\n        this.dispatch({\n          type: 'SET_VIEW_TYPE',\n          viewType: spec.type,\n          dateMarker: dateMarker\n        });\n      } else {\n        this.dispatch({\n          type: 'SET_DATE',\n          dateMarker: dateMarker\n        });\n      }\n    }; // Given a duration singular unit, like \"week\" or \"day\", finds a matching view spec.\n    // Preference is given to views that have corresponding buttons.\n\n\n    Calendar.prototype.getUnitViewSpec = function (unit) {\n      var viewTypes;\n      var i;\n      var spec; // put views that have buttons first. there will be duplicates, but oh well\n\n      viewTypes = this.component.header.viewsWithButtons; // TODO: include footer as well?\n\n      for (var viewType in this.viewSpecs) {\n        viewTypes.push(viewType);\n      }\n\n      for (i = 0; i < viewTypes.length; i++) {\n        spec = this.viewSpecs[viewTypes[i]];\n\n        if (spec) {\n          if (spec.singleUnit === unit) {\n            return spec;\n          }\n        }\n      }\n    }; // Current Date\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.getInitialDate = function () {\n      var defaultDateInput = this.opt('defaultDate'); // compute the initial ambig-timezone date\n\n      if (defaultDateInput != null) {\n        return this.dateEnv.createMarker(defaultDateInput);\n      } else {\n        return this.getNow(); // getNow already returns unzoned\n      }\n    };\n\n    Calendar.prototype.prev = function () {\n      this.unselect();\n      this.dispatch({\n        type: 'PREV'\n      });\n    };\n\n    Calendar.prototype.next = function () {\n      this.unselect();\n      this.dispatch({\n        type: 'NEXT'\n      });\n    };\n\n    Calendar.prototype.prevYear = function () {\n      this.unselect();\n      this.dispatch({\n        type: 'SET_DATE',\n        dateMarker: this.dateEnv.addYears(this.state.currentDate, -1)\n      });\n    };\n\n    Calendar.prototype.nextYear = function () {\n      this.unselect();\n      this.dispatch({\n        type: 'SET_DATE',\n        dateMarker: this.dateEnv.addYears(this.state.currentDate, 1)\n      });\n    };\n\n    Calendar.prototype.today = function () {\n      this.unselect();\n      this.dispatch({\n        type: 'SET_DATE',\n        dateMarker: this.getNow()\n      });\n    };\n\n    Calendar.prototype.gotoDate = function (zonedDateInput) {\n      this.unselect();\n      this.dispatch({\n        type: 'SET_DATE',\n        dateMarker: this.dateEnv.createMarker(zonedDateInput)\n      });\n    };\n\n    Calendar.prototype.incrementDate = function (deltaInput) {\n      var delta = createDuration(deltaInput);\n\n      if (delta) {\n        // else, warn about invalid input?\n        this.unselect();\n        this.dispatch({\n          type: 'SET_DATE',\n          dateMarker: this.dateEnv.add(this.state.currentDate, delta)\n        });\n      }\n    }; // for external API\n\n\n    Calendar.prototype.getDate = function () {\n      return this.dateEnv.toDate(this.state.currentDate);\n    }; // Date Formatting Utils\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.formatDate = function (d, formatter) {\n      var dateEnv = this.dateEnv;\n      return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));\n    }; // `settings` is for formatter AND isEndExclusive\n\n\n    Calendar.prototype.formatRange = function (d0, d1, settings) {\n      var dateEnv = this.dateEnv;\n      return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings, this.opt('defaultRangeSeparator')), settings);\n    };\n\n    Calendar.prototype.formatIso = function (d, omitTime) {\n      var dateEnv = this.dateEnv;\n      return dateEnv.formatIso(dateEnv.createMarker(d), {\n        omitTime: omitTime\n      });\n    }; // Sizing\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.windowResize = function (ev) {\n      if (!this.isHandlingWindowResize && this.component && // why?\n      ev.target === window // not a jqui resize event\n      ) {\n          this.isHandlingWindowResize = true;\n          this.updateSize();\n          this.publiclyTrigger('windowResize', [this.view]);\n          this.isHandlingWindowResize = false;\n        }\n    };\n\n    Calendar.prototype.updateSize = function () {\n      if (this.component) {\n        // when?\n        this.component.updateSize(true);\n      }\n    }; // Component Registration\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.registerInteractiveComponent = function (component, settingsInput) {\n      var settings = parseInteractionSettings(component, settingsInput);\n      var DEFAULT_INTERACTIONS = [EventClicking, EventHovering];\n      var interactionClasses = DEFAULT_INTERACTIONS.concat(this.pluginSystem.hooks.componentInteractions);\n      var interactions = interactionClasses.map(function (interactionClass) {\n        return new interactionClass(settings);\n      });\n      this.interactionsStore[component.uid] = interactions;\n      interactionSettingsStore[component.uid] = settings;\n    };\n\n    Calendar.prototype.unregisterInteractiveComponent = function (component) {\n      for (var _i = 0, _a = this.interactionsStore[component.uid]; _i < _a.length; _i++) {\n        var listener = _a[_i];\n        listener.destroy();\n      }\n\n      delete this.interactionsStore[component.uid];\n      delete interactionSettingsStore[component.uid];\n    }; // Date Selection / Event Selection / DayClick\n    // -----------------------------------------------------------------------------------------------------------------\n    // this public method receives start/end dates in any format, with any timezone\n    // NOTE: args were changed from v3\n\n\n    Calendar.prototype.select = function (dateOrObj, endDate) {\n      var selectionInput;\n\n      if (endDate == null) {\n        if (dateOrObj.start != null) {\n          selectionInput = dateOrObj;\n        } else {\n          selectionInput = {\n            start: dateOrObj,\n            end: null\n          };\n        }\n      } else {\n        selectionInput = {\n          start: dateOrObj,\n          end: endDate\n        };\n      }\n\n      var selection = parseDateSpan(selectionInput, this.dateEnv, createDuration({\n        days: 1\n      }) // TODO: cache this?\n      );\n\n      if (selection) {\n        // throw parse error otherwise?\n        this.dispatch({\n          type: 'SELECT_DATES',\n          selection: selection\n        });\n        this.triggerDateSelect(selection);\n      }\n    }; // public method\n\n\n    Calendar.prototype.unselect = function (pev) {\n      if (this.state.dateSelection) {\n        this.dispatch({\n          type: 'UNSELECT_DATES'\n        });\n        this.triggerDateUnselect(pev);\n      }\n    };\n\n    Calendar.prototype.triggerDateSelect = function (selection, pev) {\n      var arg = this.buildDateSpanApi(selection);\n      arg.jsEvent = pev ? pev.origEvent : null;\n      arg.view = this.view;\n      this.publiclyTrigger('select', [arg]);\n    };\n\n    Calendar.prototype.triggerDateUnselect = function (pev) {\n      this.publiclyTrigger('unselect', [{\n        jsEvent: pev ? pev.origEvent : null,\n        view: this.view\n      }]);\n    }; // TODO: receive pev?\n\n\n    Calendar.prototype.triggerDateClick = function (dateSpan, dayEl, view, ev) {\n      var arg = this.buildDatePointApi(dateSpan);\n      arg.dayEl = dayEl;\n      arg.jsEvent = ev;\n      arg.view = view;\n      this.publiclyTrigger('dateClick', [arg]);\n    };\n\n    Calendar.prototype.buildDatePointApi = function (dateSpan) {\n      var props = {};\n\n      for (var _i = 0, _a = this.pluginSystem.hooks.datePointTransforms; _i < _a.length; _i++) {\n        var transform = _a[_i];\n\n        __assign(props, transform(dateSpan, this));\n      }\n\n      __assign(props, buildDatePointApi(dateSpan, this.dateEnv));\n\n      return props;\n    };\n\n    Calendar.prototype.buildDateSpanApi = function (dateSpan) {\n      var props = {};\n\n      for (var _i = 0, _a = this.pluginSystem.hooks.dateSpanTransforms; _i < _a.length; _i++) {\n        var transform = _a[_i];\n\n        __assign(props, transform(dateSpan, this));\n      }\n\n      __assign(props, buildDateSpanApi(dateSpan, this.dateEnv));\n\n      return props;\n    }; // Date Utils\n    // -----------------------------------------------------------------------------------------------------------------\n    // Returns a DateMarker for the current date, as defined by the client's computer or from the `now` option\n\n\n    Calendar.prototype.getNow = function () {\n      var now = this.opt('now');\n\n      if (typeof now === 'function') {\n        now = now();\n      }\n\n      if (now == null) {\n        return this.dateEnv.createNowMarker();\n      }\n\n      return this.dateEnv.createMarker(now);\n    }; // Event-Date Utilities\n    // -----------------------------------------------------------------------------------------------------------------\n    // Given an event's allDay status and start date, return what its fallback end date should be.\n    // TODO: rename to computeDefaultEventEnd\n\n\n    Calendar.prototype.getDefaultEventEnd = function (allDay, marker) {\n      var end = marker;\n\n      if (allDay) {\n        end = startOfDay(end);\n        end = this.dateEnv.add(end, this.defaultAllDayEventDuration);\n      } else {\n        end = this.dateEnv.add(end, this.defaultTimedEventDuration);\n      }\n\n      return end;\n    }; // Public Events API\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.addEvent = function (eventInput, sourceInput) {\n      if (eventInput instanceof EventApi) {\n        var def = eventInput._def;\n        var instance = eventInput._instance; // not already present? don't want to add an old snapshot\n\n        if (!this.state.eventStore.defs[def.defId]) {\n          this.dispatch({\n            type: 'ADD_EVENTS',\n            eventStore: eventTupleToStore({\n              def: def,\n              instance: instance\n            }) // TODO: better util for two args?\n\n          });\n        }\n\n        return eventInput;\n      }\n\n      var sourceId;\n\n      if (sourceInput instanceof EventSourceApi) {\n        sourceId = sourceInput.internalEventSource.sourceId;\n      } else if (sourceInput != null) {\n        var sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function\n\n        if (!sourceApi) {\n          console.warn('Could not find an event source with ID \"' + sourceInput + '\"'); // TODO: test\n\n          return null;\n        } else {\n          sourceId = sourceApi.internalEventSource.sourceId;\n        }\n      }\n\n      var tuple = parseEvent(eventInput, sourceId, this);\n\n      if (tuple) {\n        this.dispatch({\n          type: 'ADD_EVENTS',\n          eventStore: eventTupleToStore(tuple)\n        });\n        return new EventApi(this, tuple.def, tuple.def.recurringDef ? null : tuple.instance);\n      }\n\n      return null;\n    }; // TODO: optimize\n\n\n    Calendar.prototype.getEventById = function (id) {\n      var _a = this.state.eventStore,\n          defs = _a.defs,\n          instances = _a.instances;\n      id = String(id);\n\n      for (var defId in defs) {\n        var def = defs[defId];\n\n        if (def.publicId === id) {\n          if (def.recurringDef) {\n            return new EventApi(this, def, null);\n          } else {\n            for (var instanceId in instances) {\n              var instance = instances[instanceId];\n\n              if (instance.defId === def.defId) {\n                return new EventApi(this, def, instance);\n              }\n            }\n          }\n        }\n      }\n\n      return null;\n    };\n\n    Calendar.prototype.getEvents = function () {\n      var _a = this.state.eventStore,\n          defs = _a.defs,\n          instances = _a.instances;\n      var eventApis = [];\n\n      for (var id in instances) {\n        var instance = instances[id];\n        var def = defs[instance.defId];\n        eventApis.push(new EventApi(this, def, instance));\n      }\n\n      return eventApis;\n    };\n\n    Calendar.prototype.removeAllEvents = function () {\n      this.dispatch({\n        type: 'REMOVE_ALL_EVENTS'\n      });\n    };\n\n    Calendar.prototype.rerenderEvents = function () {\n      this.dispatch({\n        type: 'RESET_EVENTS'\n      });\n    }; // Public Event Sources API\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    Calendar.prototype.getEventSources = function () {\n      var sourceHash = this.state.eventSources;\n      var sourceApis = [];\n\n      for (var internalId in sourceHash) {\n        sourceApis.push(new EventSourceApi(this, sourceHash[internalId]));\n      }\n\n      return sourceApis;\n    };\n\n    Calendar.prototype.getEventSourceById = function (id) {\n      var sourceHash = this.state.eventSources;\n      id = String(id);\n\n      for (var sourceId in sourceHash) {\n        if (sourceHash[sourceId].publicId === id) {\n          return new EventSourceApi(this, sourceHash[sourceId]);\n        }\n      }\n\n      return null;\n    };\n\n    Calendar.prototype.addEventSource = function (sourceInput) {\n      if (sourceInput instanceof EventSourceApi) {\n        // not already present? don't want to add an old snapshot\n        if (!this.state.eventSources[sourceInput.internalEventSource.sourceId]) {\n          this.dispatch({\n            type: 'ADD_EVENT_SOURCES',\n            sources: [sourceInput.internalEventSource]\n          });\n        }\n\n        return sourceInput;\n      }\n\n      var eventSource = parseEventSource(sourceInput, this);\n\n      if (eventSource) {\n        // TODO: error otherwise?\n        this.dispatch({\n          type: 'ADD_EVENT_SOURCES',\n          sources: [eventSource]\n        });\n        return new EventSourceApi(this, eventSource);\n      }\n\n      return null;\n    };\n\n    Calendar.prototype.removeAllEventSources = function () {\n      this.dispatch({\n        type: 'REMOVE_ALL_EVENT_SOURCES'\n      });\n    };\n\n    Calendar.prototype.refetchEvents = function () {\n      this.dispatch({\n        type: 'FETCH_EVENT_SOURCES'\n      });\n    };\n\n    return Calendar;\n  }();\n\n  EmitterMixin.mixInto(Calendar); // for memoizers\n  // -----------------------------------------------------------------------------------------------------------------\n\n  function buildDateEnv(locale, timeZone, namedTimeZoneImpl, firstDay, weekNumberCalculation, weekLabel, cmdFormatter) {\n    return new DateEnv({\n      calendarSystem: 'gregory',\n      timeZone: timeZone,\n      namedTimeZoneImpl: namedTimeZoneImpl,\n      locale: locale,\n      weekNumberCalculation: weekNumberCalculation,\n      firstDay: firstDay,\n      weekLabel: weekLabel,\n      cmdFormatter: cmdFormatter\n    });\n  }\n\n  function buildTheme(calendarOptions) {\n    var themeClass = this.pluginSystem.hooks.themeClasses[calendarOptions.themeSystem] || StandardTheme;\n    return new themeClass(calendarOptions);\n  }\n\n  function buildDelayedRerender(wait) {\n    var func = this.tryRerender.bind(this);\n\n    if (wait != null) {\n      func = debounce(func, wait);\n    }\n\n    return func;\n  }\n\n  function buildEventUiBySource(eventSources) {\n    return mapHash(eventSources, function (eventSource) {\n      return eventSource.ui;\n    });\n  }\n\n  function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {\n    var eventUiBases = {\n      '': eventUiSingleBase\n    };\n\n    for (var defId in eventDefs) {\n      var def = eventDefs[defId];\n\n      if (def.sourceId && eventUiBySource[def.sourceId]) {\n        eventUiBases[defId] = eventUiBySource[def.sourceId];\n      }\n    }\n\n    return eventUiBases;\n  }\n\n  var View =\n  /** @class */\n  function (_super) {\n    __extends(View, _super);\n\n    function View(context, viewSpec, dateProfileGenerator, parentEl) {\n      var _this = _super.call(this, context, createElement('div', {\n        className: 'fc-view fc-' + viewSpec.type + '-view'\n      }), true // isView (HACK)\n      ) || this;\n\n      _this.renderDatesMem = memoizeRendering(_this.renderDatesWrap, _this.unrenderDatesWrap);\n      _this.renderBusinessHoursMem = memoizeRendering(_this.renderBusinessHours, _this.unrenderBusinessHours, [_this.renderDatesMem]);\n      _this.renderDateSelectionMem = memoizeRendering(_this.renderDateSelectionWrap, _this.unrenderDateSelectionWrap, [_this.renderDatesMem]);\n      _this.renderEventsMem = memoizeRendering(_this.renderEvents, _this.unrenderEvents, [_this.renderDatesMem]);\n      _this.renderEventSelectionMem = memoizeRendering(_this.renderEventSelectionWrap, _this.unrenderEventSelectionWrap, [_this.renderEventsMem]);\n      _this.renderEventDragMem = memoizeRendering(_this.renderEventDragWrap, _this.unrenderEventDragWrap, [_this.renderDatesMem]);\n      _this.renderEventResizeMem = memoizeRendering(_this.renderEventResizeWrap, _this.unrenderEventResizeWrap, [_this.renderDatesMem]);\n      _this.viewSpec = viewSpec;\n      _this.dateProfileGenerator = dateProfileGenerator;\n      _this.type = viewSpec.type;\n      _this.eventOrderSpecs = parseFieldSpecs(_this.opt('eventOrder'));\n      _this.nextDayThreshold = createDuration(_this.opt('nextDayThreshold'));\n      parentEl.appendChild(_this.el);\n\n      _this.initialize();\n\n      return _this;\n    }\n\n    View.prototype.initialize = function () {};\n\n    Object.defineProperty(View.prototype, \"activeStart\", {\n      // Date Setting/Unsetting\n      // -----------------------------------------------------------------------------------------------------------------\n      get: function () {\n        return this.dateEnv.toDate(this.props.dateProfile.activeRange.start);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(View.prototype, \"activeEnd\", {\n      get: function () {\n        return this.dateEnv.toDate(this.props.dateProfile.activeRange.end);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(View.prototype, \"currentStart\", {\n      get: function () {\n        return this.dateEnv.toDate(this.props.dateProfile.currentRange.start);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(View.prototype, \"currentEnd\", {\n      get: function () {\n        return this.dateEnv.toDate(this.props.dateProfile.currentRange.end);\n      },\n      enumerable: true,\n      configurable: true\n    }); // General Rendering\n    // -----------------------------------------------------------------------------------------------------------------\n\n    View.prototype.render = function (props) {\n      this.renderDatesMem(props.dateProfile);\n      this.renderBusinessHoursMem(props.businessHours);\n      this.renderDateSelectionMem(props.dateSelection);\n      this.renderEventsMem(props.eventStore);\n      this.renderEventSelectionMem(props.eventSelection);\n      this.renderEventDragMem(props.eventDrag);\n      this.renderEventResizeMem(props.eventResize);\n    };\n\n    View.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.renderDatesMem.unrender(); // should unrender everything else\n    }; // Sizing\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n      var calendar = this.calendar;\n\n      if (isResize || calendar.isViewUpdated || calendar.isDatesUpdated || calendar.isEventsUpdated) {\n        // sort of the catch-all sizing\n        // anything that might cause dimension changes\n        this.updateBaseSize(isResize, viewHeight, isAuto);\n      }\n    };\n\n    View.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {}; // Date Rendering\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderDatesWrap = function (dateProfile) {\n      this.renderDates(dateProfile);\n      this.addScroll({\n        isDateInit: true\n      });\n      this.startNowIndicator(dateProfile); // shouldn't render yet because updateSize will be called soon\n    };\n\n    View.prototype.unrenderDatesWrap = function () {\n      this.stopNowIndicator();\n      this.unrenderDates();\n    };\n\n    View.prototype.renderDates = function (dateProfile) {};\n\n    View.prototype.unrenderDates = function () {}; // Business Hours\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderBusinessHours = function (businessHours) {};\n\n    View.prototype.unrenderBusinessHours = function () {}; // Date Selection\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderDateSelectionWrap = function (selection) {\n      if (selection) {\n        this.renderDateSelection(selection);\n      }\n    };\n\n    View.prototype.unrenderDateSelectionWrap = function (selection) {\n      if (selection) {\n        this.unrenderDateSelection(selection);\n      }\n    };\n\n    View.prototype.renderDateSelection = function (selection) {};\n\n    View.prototype.unrenderDateSelection = function (selection) {}; // Event Rendering\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderEvents = function (eventStore) {};\n\n    View.prototype.unrenderEvents = function () {}; // util for subclasses\n\n\n    View.prototype.sliceEvents = function (eventStore, allDay) {\n      var props = this.props;\n      return sliceEventStore(eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? this.nextDayThreshold : null).fg;\n    }; // Event Selection\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderEventSelectionWrap = function (instanceId) {\n      if (instanceId) {\n        this.renderEventSelection(instanceId);\n      }\n    };\n\n    View.prototype.unrenderEventSelectionWrap = function (instanceId) {\n      if (instanceId) {\n        this.unrenderEventSelection(instanceId);\n      }\n    };\n\n    View.prototype.renderEventSelection = function (instanceId) {};\n\n    View.prototype.unrenderEventSelection = function (instanceId) {}; // Event Drag\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderEventDragWrap = function (state) {\n      if (state) {\n        this.renderEventDrag(state);\n      }\n    };\n\n    View.prototype.unrenderEventDragWrap = function (state) {\n      if (state) {\n        this.unrenderEventDrag(state);\n      }\n    };\n\n    View.prototype.renderEventDrag = function (state) {};\n\n    View.prototype.unrenderEventDrag = function (state) {}; // Event Resize\n    // -----------------------------------------------------------------------------------------------------------------\n\n\n    View.prototype.renderEventResizeWrap = function (state) {\n      if (state) {\n        this.renderEventResize(state);\n      }\n    };\n\n    View.prototype.unrenderEventResizeWrap = function (state) {\n      if (state) {\n        this.unrenderEventResize(state);\n      }\n    };\n\n    View.prototype.renderEventResize = function (state) {};\n\n    View.prototype.unrenderEventResize = function (state) {};\n    /* Now Indicator\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Immediately render the current time indicator and begins re-rendering it at an interval,\n    // which is defined by this.getNowIndicatorUnit().\n    // TODO: somehow do this for the current whole day's background too\n\n\n    View.prototype.startNowIndicator = function (dateProfile) {\n      var _this = this;\n\n      var dateEnv = this.dateEnv;\n      var unit;\n      var update;\n      var delay; // ms wait value\n\n      if (this.opt('nowIndicator')) {\n        unit = this.getNowIndicatorUnit(dateProfile);\n\n        if (unit) {\n          update = this.updateNowIndicator.bind(this);\n          this.initialNowDate = this.calendar.getNow();\n          this.initialNowQueriedMs = new Date().valueOf(); // wait until the beginning of the next interval\n\n          delay = dateEnv.add(dateEnv.startOf(this.initialNowDate, unit), createDuration(1, unit)).valueOf() - this.initialNowDate.valueOf(); // TODO: maybe always use setTimeout, waiting until start of next unit\n\n          this.nowIndicatorTimeoutID = setTimeout(function () {\n            _this.nowIndicatorTimeoutID = null;\n            update();\n\n            if (unit === 'second') {\n              delay = 1000; // every second\n            } else {\n              delay = 1000 * 60; // otherwise, every minute\n            }\n\n            _this.nowIndicatorIntervalID = setInterval(update, delay); // update every interval\n          }, delay);\n        } // rendering will be initiated in updateSize\n\n      }\n    }; // rerenders the now indicator, computing the new current time from the amount of time that has passed\n    // since the initial getNow call.\n\n\n    View.prototype.updateNowIndicator = function () {\n      if (this.props.dateProfile && // a way to determine if dates were rendered yet\n      this.initialNowDate // activated before?\n      ) {\n          this.unrenderNowIndicator(); // won't unrender if unnecessary\n\n          this.renderNowIndicator(addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs));\n          this.isNowIndicatorRendered = true;\n        }\n    }; // Immediately unrenders the view's current time indicator and stops any re-rendering timers.\n    // Won't cause side effects if indicator isn't rendered.\n\n\n    View.prototype.stopNowIndicator = function () {\n      if (this.isNowIndicatorRendered) {\n        if (this.nowIndicatorTimeoutID) {\n          clearTimeout(this.nowIndicatorTimeoutID);\n          this.nowIndicatorTimeoutID = null;\n        }\n\n        if (this.nowIndicatorIntervalID) {\n          clearInterval(this.nowIndicatorIntervalID);\n          this.nowIndicatorIntervalID = null;\n        }\n\n        this.unrenderNowIndicator();\n        this.isNowIndicatorRendered = false;\n      }\n    };\n\n    View.prototype.getNowIndicatorUnit = function (dateProfile) {// subclasses should implement\n    }; // Renders a current time indicator at the given datetime\n\n\n    View.prototype.renderNowIndicator = function (date) {// SUBCLASSES MUST PASS TO CHILDREN!\n    }; // Undoes the rendering actions from renderNowIndicator\n\n\n    View.prototype.unrenderNowIndicator = function () {// SUBCLASSES MUST PASS TO CHILDREN!\n    };\n    /* Scroller\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    View.prototype.addScroll = function (scroll) {\n      var queuedScroll = this.queuedScroll || (this.queuedScroll = {});\n\n      __assign(queuedScroll, scroll);\n    };\n\n    View.prototype.popScroll = function (isResize) {\n      this.applyQueuedScroll(isResize);\n      this.queuedScroll = null;\n    };\n\n    View.prototype.applyQueuedScroll = function (isResize) {\n      this.applyScroll(this.queuedScroll || {}, isResize);\n    };\n\n    View.prototype.queryScroll = function () {\n      var scroll = {};\n\n      if (this.props.dateProfile) {\n        // dates rendered yet?\n        __assign(scroll, this.queryDateScroll());\n      }\n\n      return scroll;\n    };\n\n    View.prototype.applyScroll = function (scroll, isResize) {\n      if (scroll.isDateInit) {\n        delete scroll.isDateInit;\n\n        if (this.props.dateProfile) {\n          // dates rendered yet?\n          __assign(scroll, this.computeInitialDateScroll());\n        }\n      }\n\n      if (this.props.dateProfile) {\n        // dates rendered yet?\n        this.applyDateScroll(scroll);\n      }\n    };\n\n    View.prototype.computeInitialDateScroll = function () {\n      return {}; // subclasses must implement\n    };\n\n    View.prototype.queryDateScroll = function () {\n      return {}; // subclasses must implement\n    };\n\n    View.prototype.applyDateScroll = function (scroll) {// subclasses must implement\n    };\n\n    return View;\n  }(DateComponent);\n\n  EmitterMixin.mixInto(View);\n  View.prototype.usesMinMaxTime = false;\n  View.prototype.dateProfileGeneratorClass = DateProfileGenerator;\n\n  var FgEventRenderer =\n  /** @class */\n  function () {\n    function FgEventRenderer(context) {\n      this.segs = [];\n      this.isSizeDirty = false;\n      this.context = context;\n    }\n\n    FgEventRenderer.prototype.renderSegs = function (segs, mirrorInfo) {\n      this.rangeUpdated(); // called too frequently :(\n      // render an `.el` on each seg\n      // returns a subset of the segs. segs that were actually rendered\n\n      segs = this.renderSegEls(segs, mirrorInfo);\n      this.segs = segs;\n      this.attachSegs(segs, mirrorInfo);\n      this.isSizeDirty = true;\n      this.context.view.triggerRenderedSegs(this.segs, Boolean(mirrorInfo));\n    };\n\n    FgEventRenderer.prototype.unrender = function (_segs, mirrorInfo) {\n      this.context.view.triggerWillRemoveSegs(this.segs, Boolean(mirrorInfo));\n      this.detachSegs(this.segs);\n      this.segs = [];\n    }; // Updates values that rely on options and also relate to range\n\n\n    FgEventRenderer.prototype.rangeUpdated = function () {\n      var options = this.context.options;\n      var displayEventTime;\n      var displayEventEnd;\n      this.eventTimeFormat = createFormatter(options.eventTimeFormat || this.computeEventTimeFormat(), options.defaultRangeSeparator);\n      displayEventTime = options.displayEventTime;\n\n      if (displayEventTime == null) {\n        displayEventTime = this.computeDisplayEventTime(); // might be based off of range\n      }\n\n      displayEventEnd = options.displayEventEnd;\n\n      if (displayEventEnd == null) {\n        displayEventEnd = this.computeDisplayEventEnd(); // might be based off of range\n      }\n\n      this.displayEventTime = displayEventTime;\n      this.displayEventEnd = displayEventEnd;\n    }; // Renders and assigns an `el` property for each foreground event segment.\n    // Only returns segments that successfully rendered.\n\n\n    FgEventRenderer.prototype.renderSegEls = function (segs, mirrorInfo) {\n      var html = '';\n      var i;\n\n      if (segs.length) {\n        // don't build an empty html string\n        // build a large concatenation of event segment HTML\n        for (i = 0; i < segs.length; i++) {\n          html += this.renderSegHtml(segs[i], mirrorInfo);\n        } // Grab individual elements from the combined HTML string. Use each as the default rendering.\n        // Then, compute the 'el' for each segment. An el might be null if the eventRender callback returned false.\n\n\n        htmlToElements(html).forEach(function (el, i) {\n          var seg = segs[i];\n\n          if (el) {\n            seg.el = el;\n          }\n        });\n        segs = filterSegsViaEls(this.context.view, segs, Boolean(mirrorInfo));\n      }\n\n      return segs;\n    }; // Generic utility for generating the HTML classNames for an event segment's element\n\n\n    FgEventRenderer.prototype.getSegClasses = function (seg, isDraggable, isResizable, mirrorInfo) {\n      var classes = ['fc-event', seg.isStart ? 'fc-start' : 'fc-not-start', seg.isEnd ? 'fc-end' : 'fc-not-end'].concat(seg.eventRange.ui.classNames);\n\n      if (isDraggable) {\n        classes.push('fc-draggable');\n      }\n\n      if (isResizable) {\n        classes.push('fc-resizable');\n      }\n\n      if (mirrorInfo) {\n        classes.push('fc-mirror');\n\n        if (mirrorInfo.isDragging) {\n          classes.push('fc-dragging');\n        }\n\n        if (mirrorInfo.isResizing) {\n          classes.push('fc-resizing');\n        }\n      }\n\n      return classes;\n    }; // Compute the text that should be displayed on an event's element.\n    // `range` can be the Event object itself, or something range-like, with at least a `start`.\n    // If event times are disabled, or the event has no time, will return a blank string.\n    // If not specified, formatter will default to the eventTimeFormat setting,\n    // and displayEnd will default to the displayEventEnd setting.\n\n\n    FgEventRenderer.prototype.getTimeText = function (eventRange, formatter, displayEnd) {\n      var def = eventRange.def,\n          instance = eventRange.instance;\n      return this._getTimeText(instance.range.start, def.hasEnd ? instance.range.end : null, def.allDay, formatter, displayEnd, instance.forcedStartTzo, instance.forcedEndTzo);\n    };\n\n    FgEventRenderer.prototype._getTimeText = function (start, end, allDay, formatter, displayEnd, forcedStartTzo, forcedEndTzo) {\n      var dateEnv = this.context.dateEnv;\n\n      if (formatter == null) {\n        formatter = this.eventTimeFormat;\n      }\n\n      if (displayEnd == null) {\n        displayEnd = this.displayEventEnd;\n      }\n\n      if (this.displayEventTime && !allDay) {\n        if (displayEnd && end) {\n          return dateEnv.formatRange(start, end, formatter, {\n            forcedStartTzo: forcedStartTzo,\n            forcedEndTzo: forcedEndTzo\n          });\n        } else {\n          return dateEnv.format(start, formatter, {\n            forcedTzo: forcedStartTzo\n          });\n        }\n      }\n\n      return '';\n    };\n\n    FgEventRenderer.prototype.computeEventTimeFormat = function () {\n      return {\n        hour: 'numeric',\n        minute: '2-digit',\n        omitZeroMinute: true\n      };\n    };\n\n    FgEventRenderer.prototype.computeDisplayEventTime = function () {\n      return true;\n    };\n\n    FgEventRenderer.prototype.computeDisplayEventEnd = function () {\n      return true;\n    }; // Utility for generating event skin-related CSS properties\n\n\n    FgEventRenderer.prototype.getSkinCss = function (ui) {\n      return {\n        'background-color': ui.backgroundColor,\n        'border-color': ui.borderColor,\n        color: ui.textColor\n      };\n    };\n\n    FgEventRenderer.prototype.sortEventSegs = function (segs) {\n      var specs = this.context.view.eventOrderSpecs;\n      var objs = segs.map(buildSegCompareObj);\n      objs.sort(function (obj0, obj1) {\n        return compareByFieldSpecs(obj0, obj1, specs);\n      });\n      return objs.map(function (c) {\n        return c._seg;\n      });\n    };\n\n    FgEventRenderer.prototype.computeSizes = function (force) {\n      if (force || this.isSizeDirty) {\n        this.computeSegSizes(this.segs);\n      }\n    };\n\n    FgEventRenderer.prototype.assignSizes = function (force) {\n      if (force || this.isSizeDirty) {\n        this.assignSegSizes(this.segs);\n        this.isSizeDirty = false;\n      }\n    };\n\n    FgEventRenderer.prototype.computeSegSizes = function (segs) {};\n\n    FgEventRenderer.prototype.assignSegSizes = function (segs) {}; // Manipulation on rendered segs\n\n\n    FgEventRenderer.prototype.hideByHash = function (hash) {\n      if (hash) {\n        for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {\n          var seg = _a[_i];\n\n          if (hash[seg.eventRange.instance.instanceId]) {\n            seg.el.style.visibility = 'hidden';\n          }\n        }\n      }\n    };\n\n    FgEventRenderer.prototype.showByHash = function (hash) {\n      if (hash) {\n        for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {\n          var seg = _a[_i];\n\n          if (hash[seg.eventRange.instance.instanceId]) {\n            seg.el.style.visibility = '';\n          }\n        }\n      }\n    };\n\n    FgEventRenderer.prototype.selectByInstanceId = function (instanceId) {\n      if (instanceId) {\n        for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {\n          var seg = _a[_i];\n          var eventInstance = seg.eventRange.instance;\n\n          if (eventInstance && eventInstance.instanceId === instanceId && seg.el // necessary?\n          ) {\n              seg.el.classList.add('fc-selected');\n            }\n        }\n      }\n    };\n\n    FgEventRenderer.prototype.unselectByInstanceId = function (instanceId) {\n      if (instanceId) {\n        for (var _i = 0, _a = this.segs; _i < _a.length; _i++) {\n          var seg = _a[_i];\n\n          if (seg.el) {\n            // necessary?\n            seg.el.classList.remove('fc-selected');\n          }\n        }\n      }\n    };\n\n    return FgEventRenderer;\n  }(); // returns a object with all primitive props that can be compared\n\n\n  function buildSegCompareObj(seg) {\n    var eventDef = seg.eventRange.def;\n    var range = seg.eventRange.instance.range;\n    var start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events\n\n    var end = range.end ? range.end.valueOf() : 0; // \"\n\n    return __assign({}, eventDef.extendedProps, eventDef, {\n      id: eventDef.publicId,\n      start: start,\n      end: end,\n      duration: end - start,\n      allDay: Number(eventDef.allDay),\n      _seg: seg // for later retrieval\n\n    });\n  }\n\n  var FillRenderer =\n  /** @class */\n  function () {\n    function FillRenderer(context) {\n      this.fillSegTag = 'div';\n      this.dirtySizeFlags = {};\n      this.context = context;\n      this.containerElsByType = {};\n      this.segsByType = {};\n    }\n\n    FillRenderer.prototype.getSegsByType = function (type) {\n      return this.segsByType[type] || [];\n    };\n\n    FillRenderer.prototype.renderSegs = function (type, segs) {\n      var _a;\n\n      var renderedSegs = this.renderSegEls(type, segs); // assignes `.el` to each seg. returns successfully rendered segs\n\n      var containerEls = this.attachSegs(type, renderedSegs);\n\n      if (containerEls) {\n        (_a = this.containerElsByType[type] || (this.containerElsByType[type] = [])).push.apply(_a, containerEls);\n      }\n\n      this.segsByType[type] = renderedSegs;\n\n      if (type === 'bgEvent') {\n        this.context.view.triggerRenderedSegs(renderedSegs, false); // isMirror=false\n      }\n\n      this.dirtySizeFlags[type] = true;\n    }; // Unrenders a specific type of fill that is currently rendered on the grid\n\n\n    FillRenderer.prototype.unrender = function (type) {\n      var segs = this.segsByType[type];\n\n      if (segs) {\n        if (type === 'bgEvent') {\n          this.context.view.triggerWillRemoveSegs(segs, false); // isMirror=false\n        }\n\n        this.detachSegs(type, segs);\n      }\n    }; // Renders and assigns an `el` property for each fill segment. Generic enough to work with different types.\n    // Only returns segments that successfully rendered.\n\n\n    FillRenderer.prototype.renderSegEls = function (type, segs) {\n      var _this = this;\n\n      var html = '';\n      var i;\n\n      if (segs.length) {\n        // build a large concatenation of segment HTML\n        for (i = 0; i < segs.length; i++) {\n          html += this.renderSegHtml(type, segs[i]);\n        } // Grab individual elements from the combined HTML string. Use each as the default rendering.\n        // Then, compute the 'el' for each segment.\n\n\n        htmlToElements(html).forEach(function (el, i) {\n          var seg = segs[i];\n\n          if (el) {\n            seg.el = el;\n          }\n        });\n\n        if (type === 'bgEvent') {\n          segs = filterSegsViaEls(this.context.view, segs, false // isMirror. background events can never be mirror elements\n          );\n        } // correct element type? (would be bad if a non-TD were inserted into a table for example)\n\n\n        segs = segs.filter(function (seg) {\n          return elementMatches(seg.el, _this.fillSegTag);\n        });\n      }\n\n      return segs;\n    }; // Builds the HTML needed for one fill segment. Generic enough to work with different types.\n\n\n    FillRenderer.prototype.renderSegHtml = function (type, seg) {\n      var css = null;\n      var classNames = [];\n\n      if (type !== 'highlight' && type !== 'businessHours') {\n        css = {\n          'background-color': seg.eventRange.ui.backgroundColor\n        };\n      }\n\n      if (type !== 'highlight') {\n        classNames = classNames.concat(seg.eventRange.ui.classNames);\n      }\n\n      if (type === 'businessHours') {\n        classNames.push('fc-bgevent');\n      } else {\n        classNames.push('fc-' + type.toLowerCase());\n      }\n\n      return '<' + this.fillSegTag + (classNames.length ? ' class=\"' + classNames.join(' ') + '\"' : '') + (css ? ' style=\"' + cssToStr(css) + '\"' : '') + '></' + this.fillSegTag + '>';\n    };\n\n    FillRenderer.prototype.detachSegs = function (type, segs) {\n      var containerEls = this.containerElsByType[type];\n\n      if (containerEls) {\n        containerEls.forEach(removeElement);\n        delete this.containerElsByType[type];\n      }\n    };\n\n    FillRenderer.prototype.computeSizes = function (force) {\n      for (var type in this.segsByType) {\n        if (force || this.dirtySizeFlags[type]) {\n          this.computeSegSizes(this.segsByType[type]);\n        }\n      }\n    };\n\n    FillRenderer.prototype.assignSizes = function (force) {\n      for (var type in this.segsByType) {\n        if (force || this.dirtySizeFlags[type]) {\n          this.assignSegSizes(this.segsByType[type]);\n        }\n      }\n\n      this.dirtySizeFlags = {};\n    };\n\n    FillRenderer.prototype.computeSegSizes = function (segs) {};\n\n    FillRenderer.prototype.assignSegSizes = function (segs) {};\n\n    return FillRenderer;\n  }();\n\n  var NamedTimeZoneImpl =\n  /** @class */\n  function () {\n    function NamedTimeZoneImpl(timeZoneName) {\n      this.timeZoneName = timeZoneName;\n    }\n\n    return NamedTimeZoneImpl;\n  }();\n  /*\n  An abstraction for a dragging interaction originating on an event.\n  Does higher-level things than PointerDragger, such as possibly:\n  - a \"mirror\" that moves with the pointer\n  - a minimum number of pixels or other criteria for a true drag to begin\n   subclasses must emit:\n  - pointerdown\n  - dragstart\n  - dragmove\n  - pointerup\n  - dragend\n  */\n\n\n  var ElementDragging =\n  /** @class */\n  function () {\n    function ElementDragging(el) {\n      this.emitter = new EmitterMixin();\n    }\n\n    ElementDragging.prototype.destroy = function () {};\n\n    ElementDragging.prototype.setMirrorIsVisible = function (bool) {// optional if subclass doesn't want to support a mirror\n    };\n\n    ElementDragging.prototype.setMirrorNeedsRevert = function (bool) {// optional if subclass doesn't want to support a mirror\n    };\n\n    ElementDragging.prototype.setAutoScrollEnabled = function (bool) {// optional\n    };\n\n    return ElementDragging;\n  }();\n\n  function formatDate(dateInput, settings) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    var dateEnv = buildDateEnv$1(settings);\n    var formatter = createFormatter(settings);\n    var dateMeta = dateEnv.createMarkerMeta(dateInput);\n\n    if (!dateMeta) {\n      // TODO: warning?\n      return '';\n    }\n\n    return dateEnv.format(dateMeta.marker, formatter, {\n      forcedTzo: dateMeta.forcedTzo\n    });\n  }\n\n  function formatRange(startInput, endInput, settings // mixture of env and formatter settings\n  ) {\n    var dateEnv = buildDateEnv$1(typeof settings === 'object' && settings ? settings : {}); // pass in if non-null object\n\n    var formatter = createFormatter(settings, globalDefaults.defaultRangeSeparator);\n    var startMeta = dateEnv.createMarkerMeta(startInput);\n    var endMeta = dateEnv.createMarkerMeta(endInput);\n\n    if (!startMeta || !endMeta) {\n      // TODO: warning?\n      return '';\n    }\n\n    return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {\n      forcedStartTzo: startMeta.forcedTzo,\n      forcedEndTzo: endMeta.forcedTzo,\n      isEndExclusive: settings.isEndExclusive\n    });\n  } // TODO: more DRY and optimized\n\n\n  function buildDateEnv$1(settings) {\n    var locale = buildLocale(settings.locale || 'en', parseRawLocales([]).map); // TODO: don't hardcode 'en' everywhere\n    // ensure required settings\n\n    settings = __assign({\n      timeZone: globalDefaults.timeZone,\n      calendarSystem: 'gregory'\n    }, settings, {\n      locale: locale\n    });\n    return new DateEnv(settings);\n  }\n\n  var DRAG_META_PROPS = {\n    startTime: createDuration,\n    duration: createDuration,\n    create: Boolean,\n    sourceId: String\n  };\n  var DRAG_META_DEFAULTS = {\n    create: true\n  };\n\n  function parseDragMeta(raw) {\n    var leftoverProps = {};\n    var refined = refineProps(raw, DRAG_META_PROPS, DRAG_META_DEFAULTS, leftoverProps);\n    refined.leftoverProps = leftoverProps;\n    return refined;\n  } // Computes a default column header formatting string if `colFormat` is not explicitly defined\n\n\n  function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {\n    // if more than one week row, or if there are a lot of columns with not much space,\n    // put just the day numbers will be in each cell\n    if (!datesRepDistinctDays || dayCnt > 10) {\n      return {\n        weekday: 'short'\n      }; // \"Sat\"\n    } else if (dayCnt > 1) {\n      return {\n        weekday: 'short',\n        month: 'numeric',\n        day: 'numeric',\n        omitCommas: true\n      }; // \"Sat 11/12\"\n    } else {\n      return {\n        weekday: 'long'\n      }; // \"Saturday\"\n    }\n  }\n\n  function renderDateCell(dateMarker, dateProfile, datesRepDistinctDays, colCnt, colHeadFormat, context, colspan, otherAttrs) {\n    var view = context.view,\n        dateEnv = context.dateEnv,\n        theme = context.theme,\n        options = context.options;\n    var isDateValid = rangeContainsMarker(dateProfile.activeRange, dateMarker); // TODO: called too frequently. cache somehow.\n\n    var classNames = ['fc-day-header', theme.getClass('widgetHeader')];\n    var innerHtml;\n\n    if (typeof options.columnHeaderHtml === 'function') {\n      innerHtml = options.columnHeaderHtml(dateEnv.toDate(dateMarker));\n    } else if (typeof options.columnHeaderText === 'function') {\n      innerHtml = htmlEscape(options.columnHeaderText(dateEnv.toDate(dateMarker)));\n    } else {\n      innerHtml = htmlEscape(dateEnv.format(dateMarker, colHeadFormat));\n    } // if only one row of days, the classNames on the header can represent the specific days beneath\n\n\n    if (datesRepDistinctDays) {\n      classNames = classNames.concat( // includes the day-of-week class\n      // noThemeHighlight=true (don't highlight the header)\n      getDayClasses(dateMarker, dateProfile, context, true));\n    } else {\n      classNames.push('fc-' + DAY_IDS[dateMarker.getUTCDay()]); // only add the day-of-week class\n    }\n\n    return '' + '<th class=\"' + classNames.join(' ') + '\"' + (isDateValid && datesRepDistinctDays ? ' data-date=\"' + dateEnv.formatIso(dateMarker, {\n      omitTime: true\n    }) + '\"' : '') + (colspan > 1 ? ' colspan=\"' + colspan + '\"' : '') + (otherAttrs ? ' ' + otherAttrs : '') + '>' + (isDateValid ? // don't make a link if the heading could represent multiple days, or if there's only one day (forceOff)\n    buildGotoAnchorHtml(view, {\n      date: dateMarker,\n      forceOff: !datesRepDistinctDays || colCnt === 1\n    }, innerHtml) : // if not valid, display text, but no link\n    innerHtml) + '</th>';\n  }\n\n  var DayHeader =\n  /** @class */\n  function (_super) {\n    __extends(DayHeader, _super);\n\n    function DayHeader(context, parentEl) {\n      var _this = _super.call(this, context) || this;\n\n      parentEl.innerHTML = ''; // because might be nbsp\n\n      parentEl.appendChild(_this.el = htmlToElement('<div class=\"fc-row ' + _this.theme.getClass('headerRow') + '\">' + '<table class=\"' + _this.theme.getClass('tableGrid') + '\">' + '<thead></thead>' + '</table>' + '</div>'));\n      _this.thead = _this.el.querySelector('thead');\n      return _this;\n    }\n\n    DayHeader.prototype.destroy = function () {\n      removeElement(this.el);\n    };\n\n    DayHeader.prototype.render = function (props) {\n      var dates = props.dates,\n          datesRepDistinctDays = props.datesRepDistinctDays;\n      var parts = [];\n\n      if (props.renderIntroHtml) {\n        parts.push(props.renderIntroHtml());\n      }\n\n      var colHeadFormat = createFormatter(this.opt('columnHeaderFormat') || computeFallbackHeaderFormat(datesRepDistinctDays, dates.length));\n\n      for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {\n        var date = dates_1[_i];\n        parts.push(renderDateCell(date, props.dateProfile, datesRepDistinctDays, dates.length, colHeadFormat, this.context));\n      }\n\n      if (this.isRtl) {\n        parts.reverse();\n      }\n\n      this.thead.innerHTML = '<tr>' + parts.join('') + '</tr>';\n    };\n\n    return DayHeader;\n  }(Component);\n\n  var DaySeries =\n  /** @class */\n  function () {\n    function DaySeries(range, dateProfileGenerator) {\n      var date = range.start;\n      var end = range.end;\n      var indices = [];\n      var dates = [];\n      var dayIndex = -1;\n\n      while (date < end) {\n        // loop each day from start to end\n        if (dateProfileGenerator.isHiddenDay(date)) {\n          indices.push(dayIndex + 0.5); // mark that it's between indices\n        } else {\n          dayIndex++;\n          indices.push(dayIndex);\n          dates.push(date);\n        }\n\n        date = addDays(date, 1);\n      }\n\n      this.dates = dates;\n      this.indices = indices;\n      this.cnt = dates.length;\n    }\n\n    DaySeries.prototype.sliceRange = function (range) {\n      var firstIndex = this.getDateDayIndex(range.start); // inclusive first index\n\n      var lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index\n\n      var clippedFirstIndex = Math.max(0, firstIndex);\n      var clippedLastIndex = Math.min(this.cnt - 1, lastIndex); // deal with in-between indices\n\n      clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell\n\n      clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell\n\n      if (clippedFirstIndex <= clippedLastIndex) {\n        return {\n          firstIndex: clippedFirstIndex,\n          lastIndex: clippedLastIndex,\n          isStart: firstIndex === clippedFirstIndex,\n          isEnd: lastIndex === clippedLastIndex\n        };\n      } else {\n        return null;\n      }\n    }; // Given a date, returns its chronolocial cell-index from the first cell of the grid.\n    // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.\n    // If before the first offset, returns a negative number.\n    // If after the last offset, returns an offset past the last cell offset.\n    // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.\n\n\n    DaySeries.prototype.getDateDayIndex = function (date) {\n      var indices = this.indices;\n      var dayOffset = Math.floor(diffDays(this.dates[0], date));\n\n      if (dayOffset < 0) {\n        return indices[0] - 1;\n      } else if (dayOffset >= indices.length) {\n        return indices[indices.length - 1] + 1;\n      } else {\n        return indices[dayOffset];\n      }\n    };\n\n    return DaySeries;\n  }();\n\n  var DayTable =\n  /** @class */\n  function () {\n    function DayTable(daySeries, breakOnWeeks) {\n      var dates = daySeries.dates;\n      var daysPerRow;\n      var firstDay;\n      var rowCnt;\n\n      if (breakOnWeeks) {\n        // count columns until the day-of-week repeats\n        firstDay = dates[0].getUTCDay();\n\n        for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow++) {\n          if (dates[daysPerRow].getUTCDay() === firstDay) {\n            break;\n          }\n        }\n\n        rowCnt = Math.ceil(dates.length / daysPerRow);\n      } else {\n        rowCnt = 1;\n        daysPerRow = dates.length;\n      }\n\n      this.rowCnt = rowCnt;\n      this.colCnt = daysPerRow;\n      this.daySeries = daySeries;\n      this.cells = this.buildCells();\n      this.headerDates = this.buildHeaderDates();\n    }\n\n    DayTable.prototype.buildCells = function () {\n      var rows = [];\n\n      for (var row = 0; row < this.rowCnt; row++) {\n        var cells = [];\n\n        for (var col = 0; col < this.colCnt; col++) {\n          cells.push(this.buildCell(row, col));\n        }\n\n        rows.push(cells);\n      }\n\n      return rows;\n    };\n\n    DayTable.prototype.buildCell = function (row, col) {\n      return {\n        date: this.daySeries.dates[row * this.colCnt + col]\n      };\n    };\n\n    DayTable.prototype.buildHeaderDates = function () {\n      var dates = [];\n\n      for (var col = 0; col < this.colCnt; col++) {\n        dates.push(this.cells[0][col].date);\n      }\n\n      return dates;\n    };\n\n    DayTable.prototype.sliceRange = function (range) {\n      var colCnt = this.colCnt;\n      var seriesSeg = this.daySeries.sliceRange(range);\n      var segs = [];\n\n      if (seriesSeg) {\n        var firstIndex = seriesSeg.firstIndex,\n            lastIndex = seriesSeg.lastIndex;\n        var index = firstIndex;\n\n        while (index <= lastIndex) {\n          var row = Math.floor(index / colCnt);\n          var nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);\n          segs.push({\n            row: row,\n            firstCol: index % colCnt,\n            lastCol: (nextIndex - 1) % colCnt,\n            isStart: seriesSeg.isStart && index === firstIndex,\n            isEnd: seriesSeg.isEnd && nextIndex - 1 === lastIndex\n          });\n          index = nextIndex;\n        }\n      }\n\n      return segs;\n    };\n\n    return DayTable;\n  }();\n\n  var Slicer =\n  /** @class */\n  function () {\n    function Slicer() {\n      this.sliceBusinessHours = memoize(this._sliceBusinessHours);\n      this.sliceDateSelection = memoize(this._sliceDateSpan);\n      this.sliceEventStore = memoize(this._sliceEventStore);\n      this.sliceEventDrag = memoize(this._sliceInteraction);\n      this.sliceEventResize = memoize(this._sliceInteraction);\n    }\n\n    Slicer.prototype.sliceProps = function (props, dateProfile, nextDayThreshold, component) {\n      var extraArgs = [];\n\n      for (var _i = 4; _i < arguments.length; _i++) {\n        extraArgs[_i - 4] = arguments[_i];\n      }\n\n      var eventUiBases = props.eventUiBases;\n      var eventSegs = this.sliceEventStore.apply(this, [props.eventStore, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs));\n      return {\n        dateSelectionSegs: this.sliceDateSelection.apply(this, [props.dateSelection, eventUiBases, component].concat(extraArgs)),\n        businessHourSegs: this.sliceBusinessHours.apply(this, [props.businessHours, dateProfile, nextDayThreshold, component].concat(extraArgs)),\n        fgEventSegs: eventSegs.fg,\n        bgEventSegs: eventSegs.bg,\n        eventDrag: this.sliceEventDrag.apply(this, [props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs)),\n        eventResize: this.sliceEventResize.apply(this, [props.eventResize, eventUiBases, dateProfile, nextDayThreshold, component].concat(extraArgs)),\n        eventSelection: props.eventSelection\n      }; // TODO: give interactionSegs?\n    };\n\n    Slicer.prototype.sliceNowDate = function ( // does not memoize\n    date, component) {\n      var extraArgs = [];\n\n      for (var _i = 2; _i < arguments.length; _i++) {\n        extraArgs[_i - 2] = arguments[_i];\n      }\n\n      return this._sliceDateSpan.apply(this, [{\n        range: {\n          start: date,\n          end: addMs(date, 1)\n        },\n        allDay: false\n      }, {}, component].concat(extraArgs));\n    };\n\n    Slicer.prototype._sliceBusinessHours = function (businessHours, dateProfile, nextDayThreshold, component) {\n      var extraArgs = [];\n\n      for (var _i = 4; _i < arguments.length; _i++) {\n        extraArgs[_i - 4] = arguments[_i];\n      }\n\n      if (!businessHours) {\n        return [];\n      }\n\n      return this._sliceEventStore.apply(this, [expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), component.calendar), {}, dateProfile, nextDayThreshold, component].concat(extraArgs)).bg;\n    };\n\n    Slicer.prototype._sliceEventStore = function (eventStore, eventUiBases, dateProfile, nextDayThreshold, component) {\n      var extraArgs = [];\n\n      for (var _i = 5; _i < arguments.length; _i++) {\n        extraArgs[_i - 5] = arguments[_i];\n      }\n\n      if (eventStore) {\n        var rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n        return {\n          bg: this.sliceEventRanges(rangeRes.bg, component, extraArgs),\n          fg: this.sliceEventRanges(rangeRes.fg, component, extraArgs)\n        };\n      } else {\n        return {\n          bg: [],\n          fg: []\n        };\n      }\n    };\n\n    Slicer.prototype._sliceInteraction = function (interaction, eventUiBases, dateProfile, nextDayThreshold, component) {\n      var extraArgs = [];\n\n      for (var _i = 5; _i < arguments.length; _i++) {\n        extraArgs[_i - 5] = arguments[_i];\n      }\n\n      if (!interaction) {\n        return null;\n      }\n\n      var rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);\n      return {\n        segs: this.sliceEventRanges(rangeRes.fg, component, extraArgs),\n        affectedInstances: interaction.affectedEvents.instances,\n        isEvent: interaction.isEvent,\n        sourceSeg: interaction.origSeg\n      };\n    };\n\n    Slicer.prototype._sliceDateSpan = function (dateSpan, eventUiBases, component) {\n      var extraArgs = [];\n\n      for (var _i = 3; _i < arguments.length; _i++) {\n        extraArgs[_i - 3] = arguments[_i];\n      }\n\n      if (!dateSpan) {\n        return [];\n      }\n\n      var eventRange = fabricateEventRange(dateSpan, eventUiBases, component.calendar);\n      var segs = this.sliceRange.apply(this, [dateSpan.range].concat(extraArgs));\n\n      for (var _a = 0, segs_1 = segs; _a < segs_1.length; _a++) {\n        var seg = segs_1[_a];\n        seg.component = component;\n        seg.eventRange = eventRange;\n      }\n\n      return segs;\n    };\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n\n\n    Slicer.prototype.sliceEventRanges = function (eventRanges, component, // TODO: kill\n    extraArgs) {\n      var segs = [];\n\n      for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {\n        var eventRange = eventRanges_1[_i];\n        segs.push.apply(segs, this.sliceEventRange(eventRange, component, extraArgs));\n      }\n\n      return segs;\n    };\n    /*\n    \"complete\" seg means it has component and eventRange\n    */\n\n\n    Slicer.prototype.sliceEventRange = function (eventRange, component, // TODO: kill\n    extraArgs) {\n      var segs = this.sliceRange.apply(this, [eventRange.range].concat(extraArgs));\n\n      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n        var seg = segs_2[_i];\n        seg.component = component;\n        seg.eventRange = eventRange;\n        seg.isStart = eventRange.isStart && seg.isStart;\n        seg.isEnd = eventRange.isEnd && seg.isEnd;\n      }\n\n      return segs;\n    };\n\n    return Slicer;\n  }();\n  /*\n  for incorporating minTime/maxTime if appropriate\n  TODO: should be part of DateProfile!\n  TimelineDateProfile already does this btw\n  */\n\n\n  function computeActiveRange(dateProfile, isComponentAllDay) {\n    var range = dateProfile.activeRange;\n\n    if (isComponentAllDay) {\n      return range;\n    }\n\n    return {\n      start: addMs(range.start, dateProfile.minTime.milliseconds),\n      end: addMs(range.end, dateProfile.maxTime.milliseconds - 864e5) // 864e5 = ms in a day\n\n    };\n  } // exports\n  // --------------------------------------------------------------------------------------------------\n\n\n  var version = '4.0.2';\n  exports.Calendar = Calendar;\n  exports.Component = Component;\n  exports.DateComponent = DateComponent;\n  exports.DateEnv = DateEnv;\n  exports.DateProfileGenerator = DateProfileGenerator;\n  exports.DayHeader = DayHeader;\n  exports.DaySeries = DaySeries;\n  exports.DayTable = DayTable;\n  exports.ElementDragging = ElementDragging;\n  exports.ElementScrollController = ElementScrollController;\n  exports.EmitterMixin = EmitterMixin;\n  exports.EventApi = EventApi;\n  exports.FgEventRenderer = FgEventRenderer;\n  exports.FillRenderer = FillRenderer;\n  exports.Interaction = Interaction;\n  exports.Mixin = Mixin;\n  exports.NamedTimeZoneImpl = NamedTimeZoneImpl;\n  exports.PositionCache = PositionCache;\n  exports.ScrollComponent = ScrollComponent;\n  exports.ScrollController = ScrollController;\n  exports.Slicer = Slicer;\n  exports.Splitter = Splitter;\n  exports.Theme = Theme;\n  exports.View = View;\n  exports.WindowScrollController = WindowScrollController;\n  exports.addDays = addDays;\n  exports.addDurations = addDurations;\n  exports.addMs = addMs;\n  exports.addWeeks = addWeeks;\n  exports.allowContextMenu = allowContextMenu;\n  exports.allowSelection = allowSelection;\n  exports.appendToElement = appendToElement;\n  exports.applyAll = applyAll;\n  exports.applyMutationToEventStore = applyMutationToEventStore;\n  exports.applyStyle = applyStyle;\n  exports.applyStyleProp = applyStyleProp;\n  exports.asRoughMinutes = asRoughMinutes;\n  exports.asRoughMs = asRoughMs;\n  exports.asRoughSeconds = asRoughSeconds;\n  exports.buildGotoAnchorHtml = buildGotoAnchorHtml;\n  exports.buildSegCompareObj = buildSegCompareObj;\n  exports.capitaliseFirstLetter = capitaliseFirstLetter;\n  exports.combineEventUis = combineEventUis;\n  exports.compareByFieldSpec = compareByFieldSpec;\n  exports.compareByFieldSpecs = compareByFieldSpecs;\n  exports.compareNumbers = compareNumbers;\n  exports.compensateScroll = compensateScroll;\n  exports.computeClippingRect = computeClippingRect;\n  exports.computeEdges = computeEdges;\n  exports.computeFallbackHeaderFormat = computeFallbackHeaderFormat;\n  exports.computeHeightAndMargins = computeHeightAndMargins;\n  exports.computeInnerRect = computeInnerRect;\n  exports.computeRect = computeRect;\n  exports.computeVisibleDayRange = computeVisibleDayRange;\n  exports.config = config;\n  exports.constrainPoint = constrainPoint;\n  exports.createDuration = createDuration;\n  exports.createElement = createElement;\n  exports.createEmptyEventStore = createEmptyEventStore;\n  exports.createEventInstance = createEventInstance;\n  exports.createFormatter = createFormatter;\n  exports.createPlugin = createPlugin;\n  exports.cssToStr = cssToStr;\n  exports.debounce = debounce;\n  exports.diffDates = diffDates;\n  exports.diffDayAndTime = diffDayAndTime;\n  exports.diffDays = diffDays;\n  exports.diffPoints = diffPoints;\n  exports.diffWeeks = diffWeeks;\n  exports.diffWholeDays = diffWholeDays;\n  exports.diffWholeWeeks = diffWholeWeeks;\n  exports.disableCursor = disableCursor;\n  exports.distributeHeight = distributeHeight;\n  exports.elementClosest = elementClosest;\n  exports.elementMatches = elementMatches;\n  exports.enableCursor = enableCursor;\n  exports.eventTupleToStore = eventTupleToStore;\n  exports.filterEventStoreDefs = filterEventStoreDefs;\n  exports.filterHash = filterHash;\n  exports.findChildren = findChildren;\n  exports.findElements = findElements;\n  exports.flexibleCompare = flexibleCompare;\n  exports.forceClassName = forceClassName;\n  exports.formatDate = formatDate;\n  exports.formatIsoTimeString = formatIsoTimeString;\n  exports.formatRange = formatRange;\n  exports.freezeRaw = freezeRaw;\n  exports.getAllDayHtml = getAllDayHtml;\n  exports.getClippingParents = getClippingParents;\n  exports.getDayClasses = getDayClasses;\n  exports.getElSeg = getElSeg;\n  exports.getRectCenter = getRectCenter;\n  exports.getRelevantEvents = getRelevantEvents;\n  exports.globalDefaults = globalDefaults;\n  exports.greatestDurationDenominator = greatestDurationDenominator;\n  exports.hasBgRendering = hasBgRendering;\n  exports.htmlEscape = htmlEscape;\n  exports.htmlToElement = htmlToElement;\n  exports.insertAfterElement = insertAfterElement;\n  exports.interactionSettingsStore = interactionSettingsStore;\n  exports.interactionSettingsToStore = interactionSettingsToStore;\n  exports.intersectRanges = intersectRanges;\n  exports.intersectRects = intersectRects;\n  exports.isArraysEqual = isArraysEqual;\n  exports.isDateSpansEqual = isDateSpansEqual;\n  exports.isInt = isInt;\n  exports.isInteractionValid = isInteractionValid;\n  exports.isMultiDayRange = isMultiDayRange;\n  exports.isObjectsSimilar = isObjectsSimilar;\n  exports.isPropsValid = isPropsValid;\n  exports.isSingleDay = isSingleDay;\n  exports.isValidDate = isValidDate;\n  exports.isValuesSimilar = isValuesSimilar;\n  exports.listenBySelector = listenBySelector;\n  exports.mapHash = mapHash;\n  exports.matchCellWidths = matchCellWidths;\n  exports.memoize = memoize;\n  exports.memoizeOutput = memoizeOutput;\n  exports.memoizeRendering = memoizeRendering;\n  exports.mergeEventStores = mergeEventStores;\n  exports.multiplyDuration = multiplyDuration;\n  exports.padStart = padStart;\n  exports.parseBusinessHours = parseBusinessHours;\n  exports.parseDragMeta = parseDragMeta;\n  exports.parseEventDef = parseEventDef;\n  exports.parseFieldSpecs = parseFieldSpecs;\n  exports.parseMarker = parse;\n  exports.pointInsideRect = pointInsideRect;\n  exports.prependToElement = prependToElement;\n  exports.preventContextMenu = preventContextMenu;\n  exports.preventDefault = preventDefault;\n  exports.preventSelection = preventSelection;\n  exports.processScopedUiProps = processScopedUiProps;\n  exports.rangeContainsMarker = rangeContainsMarker;\n  exports.rangeContainsRange = rangeContainsRange;\n  exports.rangesEqual = rangesEqual;\n  exports.rangesIntersect = rangesIntersect;\n  exports.refineProps = refineProps;\n  exports.removeElement = removeElement;\n  exports.removeExact = removeExact;\n  exports.renderDateCell = renderDateCell;\n  exports.requestJson = requestJson;\n  exports.sliceEventStore = sliceEventStore;\n  exports.startOfDay = startOfDay;\n  exports.subtractInnerElHeight = subtractInnerElHeight;\n  exports.translateRect = translateRect;\n  exports.uncompensateScroll = uncompensateScroll;\n  exports.undistributeHeight = undistributeHeight;\n  exports.unpromisify = unpromisify;\n  exports.version = version;\n  exports.whenTransitionDone = whenTransitionDone;\n  exports.wholeDivideDurations = wholeDivideDurations;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/core/main.js?");

/***/ }),

/***/ "./node_modules/@fullcalendar/daygrid/main.css":
/*!*****************************************************!*\
  !*** ./node_modules/@fullcalendar/daygrid/main.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../mini-css-extract-plugin/dist/loader.js!../../css-loader/dist/cjs.js!../../sass-loader/lib/loader.js!./main.css */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/daygrid/main.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/daygrid/main.css?");

/***/ }),

/***/ "./node_modules/@fullcalendar/daygrid/main.js":
/*!****************************************************!*\
  !*** ./node_modules/@fullcalendar/daygrid/main.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n@fullcalendar/daygrid v4.0.1\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n(function (global, factory) {\n   true ? factory(exports, __webpack_require__(/*! @fullcalendar/core */ \"./node_modules/@fullcalendar/core/main.js\")) : undefined;\n})(this, function (exports, core) {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n\n  var DayGridDateProfileGenerator =\n  /** @class */\n  function (_super) {\n    __extends(DayGridDateProfileGenerator, _super);\n\n    function DayGridDateProfileGenerator() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    } // Computes the date range that will be rendered.\n\n\n    DayGridDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {\n      var dateEnv = this.dateEnv;\n\n      var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);\n\n      var start = renderRange.start;\n      var end = renderRange.end;\n      var endOfWeek; // year and month views should be aligned with weeks. this is already done for week\n\n      if (/^(year|month)$/.test(currentRangeUnit)) {\n        start = dateEnv.startOfWeek(start); // make end-of-week if not already\n\n        endOfWeek = dateEnv.startOfWeek(end);\n\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n          end = core.addWeeks(endOfWeek, 1);\n        }\n      } // ensure 6 weeks\n\n\n      if (this.options.monthMode && this.options.fixedWeekCount) {\n        var rowCnt = Math.ceil( // could be partial weeks due to hiddenDays\n        core.diffWeeks(start, end));\n        end = core.addWeeks(end, 6 - rowCnt);\n      }\n\n      return {\n        start: start,\n        end: end\n      };\n    };\n\n    return DayGridDateProfileGenerator;\n  }(core.DateProfileGenerator);\n  /* A rectangular panel that is absolutely positioned over other content\n  ------------------------------------------------------------------------------------------------------------------------\n  Options:\n    - className (string)\n    - content (HTML string, element, or element array)\n    - parentEl\n    - top\n    - left\n    - right (the x coord of where the right edge should be. not a \"CSS\" right)\n    - autoHide (boolean)\n    - show (callback)\n    - hide (callback)\n  */\n\n\n  var Popover =\n  /** @class */\n  function () {\n    function Popover(options) {\n      var _this = this;\n\n      this.isHidden = true;\n      this.margin = 10; // the space required between the popover and the edges of the scroll container\n      // Triggered when the user clicks *anywhere* in the document, for the autoHide feature\n\n      this.documentMousedown = function (ev) {\n        // only hide the popover if the click happened outside the popover\n        if (_this.el && !_this.el.contains(ev.target)) {\n          _this.hide();\n        }\n      };\n\n      this.options = options;\n    } // Shows the popover on the specified position. Renders it if not already\n\n\n    Popover.prototype.show = function () {\n      if (this.isHidden) {\n        if (!this.el) {\n          this.render();\n        }\n\n        this.el.style.display = '';\n        this.position();\n        this.isHidden = false;\n        this.trigger('show');\n      }\n    }; // Hides the popover, through CSS, but does not remove it from the DOM\n\n\n    Popover.prototype.hide = function () {\n      if (!this.isHidden) {\n        this.el.style.display = 'none';\n        this.isHidden = true;\n        this.trigger('hide');\n      }\n    }; // Creates `this.el` and renders content inside of it\n\n\n    Popover.prototype.render = function () {\n      var _this = this;\n\n      var options = this.options;\n      var el = this.el = core.createElement('div', {\n        className: 'fc-popover ' + (options.className || ''),\n        style: {\n          top: '0',\n          left: '0'\n        }\n      });\n\n      if (typeof options.content === 'function') {\n        options.content(el);\n      }\n\n      options.parentEl.appendChild(el); // when a click happens on anything inside with a 'fc-close' className, hide the popover\n\n      core.listenBySelector(el, 'click', '.fc-close', function (ev) {\n        _this.hide();\n      });\n\n      if (options.autoHide) {\n        document.addEventListener('mousedown', this.documentMousedown);\n      }\n    }; // Hides and unregisters any handlers\n\n\n    Popover.prototype.destroy = function () {\n      this.hide();\n\n      if (this.el) {\n        core.removeElement(this.el);\n        this.el = null;\n      }\n\n      document.removeEventListener('mousedown', this.documentMousedown);\n    }; // Positions the popover optimally, using the top/left/right options\n\n\n    Popover.prototype.position = function () {\n      var options = this.options;\n      var el = this.el;\n      var elDims = el.getBoundingClientRect(); // only used for width,height\n\n      var origin = core.computeRect(el.offsetParent);\n      var clippingRect = core.computeClippingRect(options.parentEl);\n      var top; // the \"position\" (not \"offset\") values for the popover\n\n      var left; //\n      // compute top and left\n\n      top = options.top || 0;\n\n      if (options.left !== undefined) {\n        left = options.left;\n      } else if (options.right !== undefined) {\n        left = options.right - elDims.width; // derive the left value from the right value\n      } else {\n        left = 0;\n      } // constrain to the view port. if constrained by two edges, give precedence to top/left\n\n\n      top = Math.min(top, clippingRect.bottom - elDims.height - this.margin);\n      top = Math.max(top, clippingRect.top + this.margin);\n      left = Math.min(left, clippingRect.right - elDims.width - this.margin);\n      left = Math.max(left, clippingRect.left + this.margin);\n      core.applyStyle(el, {\n        top: top - origin.top,\n        left: left - origin.left\n      });\n    }; // Triggers a callback. Calls a function in the option hash of the same name.\n    // Arguments beyond the first `name` are forwarded on.\n    // TODO: better code reuse for this. Repeat code\n    // can kill this???\n\n\n    Popover.prototype.trigger = function (name) {\n      if (this.options[name]) {\n        this.options[name].apply(this, Array.prototype.slice.call(arguments, 1));\n      }\n    };\n\n    return Popover;\n  }();\n  /* Event-rendering methods for the DayGrid class\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // \"Simple\" is bad a name. has nothing to do with SimpleDayGrid\n\n\n  var SimpleDayGridEventRenderer =\n  /** @class */\n  function (_super) {\n    __extends(SimpleDayGridEventRenderer, _super);\n\n    function SimpleDayGridEventRenderer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    } // Builds the HTML to be used for the default element for an individual segment\n\n\n    SimpleDayGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n      var options = this.context.options;\n      var eventRange = seg.eventRange;\n      var eventDef = eventRange.def;\n      var eventUi = eventRange.ui;\n      var allDay = eventDef.allDay;\n      var isDraggable = eventUi.startEditable;\n      var isResizableFromStart = allDay && seg.isStart && eventUi.durationEditable && options.eventResizableFromStart;\n      var isResizableFromEnd = allDay && seg.isEnd && eventUi.durationEditable;\n      var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n      var skinCss = core.cssToStr(this.getSkinCss(eventUi));\n      var timeHtml = '';\n      var timeText;\n      var titleHtml;\n      classes.unshift('fc-day-grid-event', 'fc-h-event'); // Only display a timed events time if it is the starting segment\n\n      if (seg.isStart) {\n        timeText = this.getTimeText(eventRange);\n\n        if (timeText) {\n          timeHtml = '<span class=\"fc-time\">' + core.htmlEscape(timeText) + '</span>';\n        }\n      }\n\n      titleHtml = '<span class=\"fc-title\">' + (core.htmlEscape(eventDef.title || '') || '&nbsp;') + // we always want one line of height\n      '</span>';\n      return '<a class=\"' + classes.join(' ') + '\"' + (eventDef.url ? ' href=\"' + core.htmlEscape(eventDef.url) + '\"' : '') + (skinCss ? ' style=\"' + skinCss + '\"' : '') + '>' + '<div class=\"fc-content\">' + (options.dir === 'rtl' ? titleHtml + ' ' + timeHtml : // put a natural space in between\n      timeHtml + ' ' + titleHtml //\n      ) + '</div>' + (isResizableFromStart ? '<div class=\"fc-resizer fc-start-resizer\"></div>' : '') + (isResizableFromEnd ? '<div class=\"fc-resizer fc-end-resizer\"></div>' : '') + '</a>';\n    }; // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n\n\n    SimpleDayGridEventRenderer.prototype.computeEventTimeFormat = function () {\n      return {\n        hour: 'numeric',\n        minute: '2-digit',\n        omitZeroMinute: true,\n        meridiem: 'narrow'\n      };\n    };\n\n    SimpleDayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n      return false; // TODO: somehow consider the originating DayGrid's column count\n    };\n\n    return SimpleDayGridEventRenderer;\n  }(core.FgEventRenderer);\n  /* Event-rendering methods for the DayGrid class\n  ----------------------------------------------------------------------------------------------------------------------*/\n\n\n  var DayGridEventRenderer =\n  /** @class */\n  function (_super) {\n    __extends(DayGridEventRenderer, _super);\n\n    function DayGridEventRenderer(dayGrid) {\n      var _this = _super.call(this, dayGrid.context) || this;\n\n      _this.dayGrid = dayGrid;\n      return _this;\n    } // Renders the given foreground event segments onto the grid\n\n\n    DayGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n      var rowStructs = this.rowStructs = this.renderSegRows(segs); // append to each row's content skeleton\n\n      this.dayGrid.rowEls.forEach(function (rowNode, i) {\n        rowNode.querySelector('.fc-content-skeleton > table').appendChild(rowStructs[i].tbodyEl);\n      }); // removes the \"more..\" events popover\n\n      if (!mirrorInfo) {\n        this.dayGrid.removeSegPopover();\n      }\n    }; // Unrenders all currently rendered foreground event segments\n\n\n    DayGridEventRenderer.prototype.detachSegs = function () {\n      var rowStructs = this.rowStructs || [];\n      var rowStruct;\n\n      while (rowStruct = rowStructs.pop()) {\n        core.removeElement(rowStruct.tbodyEl);\n      }\n\n      this.rowStructs = null;\n    }; // Uses the given events array to generate <tbody> elements that should be appended to each row's content skeleton.\n    // Returns an array of rowStruct objects (see the bottom of `renderSegRow`).\n    // PRECONDITION: each segment shoud already have a rendered and assigned `.el`\n\n\n    DayGridEventRenderer.prototype.renderSegRows = function (segs) {\n      var rowStructs = [];\n      var segRows;\n      var row;\n      segRows = this.groupSegRows(segs); // group into nested arrays\n      // iterate each row of segment groupings\n\n      for (row = 0; row < segRows.length; row++) {\n        rowStructs.push(this.renderSegRow(row, segRows[row]));\n      }\n\n      return rowStructs;\n    }; // Given a row # and an array of segments all in the same row, render a <tbody> element, a skeleton that contains\n    // the segments. Returns object with a bunch of internal data about how the render was calculated.\n    // NOTE: modifies rowSegs\n\n\n    DayGridEventRenderer.prototype.renderSegRow = function (row, rowSegs) {\n      var dayGrid = this.dayGrid;\n      var colCnt = dayGrid.colCnt,\n          isRtl = dayGrid.isRtl;\n      var segLevels = this.buildSegLevels(rowSegs); // group into sub-arrays of levels\n\n      var levelCnt = Math.max(1, segLevels.length); // ensure at least one level\n\n      var tbody = document.createElement('tbody');\n      var segMatrix = []; // lookup for which segments are rendered into which level+col cells\n\n      var cellMatrix = []; // lookup for all <td> elements of the level+col matrix\n\n      var loneCellMatrix = []; // lookup for <td> elements that only take up a single column\n\n      var i;\n      var levelSegs;\n      var col;\n      var tr;\n      var j;\n      var seg;\n      var td; // populates empty cells from the current column (`col`) to `endCol`\n\n      function emptyCellsUntil(endCol) {\n        while (col < endCol) {\n          // try to grab a cell from the level above and extend its rowspan. otherwise, create a fresh cell\n          td = (loneCellMatrix[i - 1] || [])[col];\n\n          if (td) {\n            td.rowSpan = (td.rowSpan || 1) + 1;\n          } else {\n            td = document.createElement('td');\n            tr.appendChild(td);\n          }\n\n          cellMatrix[i][col] = td;\n          loneCellMatrix[i][col] = td;\n          col++;\n        }\n      }\n\n      for (i = 0; i < levelCnt; i++) {\n        // iterate through all levels\n        levelSegs = segLevels[i];\n        col = 0;\n        tr = document.createElement('tr');\n        segMatrix.push([]);\n        cellMatrix.push([]);\n        loneCellMatrix.push([]); // levelCnt might be 1 even though there are no actual levels. protect against this.\n        // this single empty row is useful for styling.\n\n        if (levelSegs) {\n          for (j = 0; j < levelSegs.length; j++) {\n            // iterate through segments in level\n            seg = levelSegs[j];\n            var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n            var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n            emptyCellsUntil(leftCol); // create a container that occupies or more columns. append the event element.\n\n            td = core.createElement('td', {\n              className: 'fc-event-container'\n            }, seg.el);\n\n            if (leftCol !== rightCol) {\n              td.colSpan = rightCol - leftCol + 1;\n            } else {\n              // a single-column segment\n              loneCellMatrix[i][col] = td;\n            }\n\n            while (col <= rightCol) {\n              cellMatrix[i][col] = td;\n              segMatrix[i][col] = seg;\n              col++;\n            }\n\n            tr.appendChild(td);\n          }\n        }\n\n        emptyCellsUntil(colCnt); // finish off the row\n\n        var introHtml = dayGrid.renderProps.renderIntroHtml();\n\n        if (introHtml) {\n          if (dayGrid.isRtl) {\n            core.appendToElement(tr, introHtml);\n          } else {\n            core.prependToElement(tr, introHtml);\n          }\n        }\n\n        tbody.appendChild(tr);\n      }\n\n      return {\n        row: row,\n        tbodyEl: tbody,\n        cellMatrix: cellMatrix,\n        segMatrix: segMatrix,\n        segLevels: segLevels,\n        segs: rowSegs\n      };\n    }; // Stacks a flat array of segments, which are all assumed to be in the same row, into subarrays of vertical levels.\n    // NOTE: modifies segs\n\n\n    DayGridEventRenderer.prototype.buildSegLevels = function (segs) {\n      var _a = this.dayGrid,\n          isRtl = _a.isRtl,\n          colCnt = _a.colCnt;\n      var levels = [];\n      var i;\n      var seg;\n      var j; // Give preference to elements with certain criteria, so they have\n      // a chance to be closer to the top.\n\n      segs = this.sortEventSegs(segs);\n\n      for (i = 0; i < segs.length; i++) {\n        seg = segs[i]; // loop through levels, starting with the topmost, until the segment doesn't collide with other segments\n\n        for (j = 0; j < levels.length; j++) {\n          if (!isDaySegCollision(seg, levels[j])) {\n            break;\n          }\n        } // `j` now holds the desired subrow index\n\n\n        seg.level = j;\n        seg.leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol; // for sorting only\n\n        seg.rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol // for sorting only\n        ;\n        (levels[j] || (levels[j] = [])).push(seg);\n      } // order segments left-to-right. very important if calendar is RTL\n\n\n      for (j = 0; j < levels.length; j++) {\n        levels[j].sort(compareDaySegCols);\n      }\n\n      return levels;\n    }; // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's row\n\n\n    DayGridEventRenderer.prototype.groupSegRows = function (segs) {\n      var segRows = [];\n      var i;\n\n      for (i = 0; i < this.dayGrid.rowCnt; i++) {\n        segRows.push([]);\n      }\n\n      for (i = 0; i < segs.length; i++) {\n        segRows[segs[i].row].push(segs[i]);\n      }\n\n      return segRows;\n    }; // Computes a default `displayEventEnd` value if one is not expliclty defined\n\n\n    DayGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n      return this.dayGrid.colCnt === 1; // we'll likely have space if there's only one day\n    };\n\n    return DayGridEventRenderer;\n  }(SimpleDayGridEventRenderer); // Computes whether two segments' columns collide. They are assumed to be in the same row.\n\n\n  function isDaySegCollision(seg, otherSegs) {\n    var i;\n    var otherSeg;\n\n    for (i = 0; i < otherSegs.length; i++) {\n      otherSeg = otherSegs[i];\n\n      if (otherSeg.firstCol <= seg.lastCol && otherSeg.lastCol >= seg.firstCol) {\n        return true;\n      }\n    }\n\n    return false;\n  } // A cmp function for determining the leftmost event\n\n\n  function compareDaySegCols(a, b) {\n    return a.leftCol - b.leftCol;\n  }\n\n  var DayGridMirrorRenderer =\n  /** @class */\n  function (_super) {\n    __extends(DayGridMirrorRenderer, _super);\n\n    function DayGridMirrorRenderer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    DayGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n      var sourceSeg = mirrorInfo.sourceSeg;\n      var rowStructs = this.rowStructs = this.renderSegRows(segs); // inject each new event skeleton into each associated row\n\n      this.dayGrid.rowEls.forEach(function (rowNode, row) {\n        var skeletonEl = core.htmlToElement('<div class=\"fc-mirror-skeleton\"><table></table></div>'); // will be absolutely positioned\n\n        var skeletonTopEl;\n        var skeletonTop; // If there is an original segment, match the top position. Otherwise, put it at the row's top level\n\n        if (sourceSeg && sourceSeg.row === row) {\n          skeletonTopEl = sourceSeg.el;\n        } else {\n          skeletonTopEl = rowNode.querySelector('.fc-content-skeleton tbody');\n\n          if (!skeletonTopEl) {\n            // when no events\n            skeletonTopEl = rowNode.querySelector('.fc-content-skeleton table');\n          }\n        }\n\n        skeletonTop = skeletonTopEl.getBoundingClientRect().top - rowNode.getBoundingClientRect().top; // the offsetParent origin\n\n        skeletonEl.style.top = skeletonTop + 'px';\n        skeletonEl.querySelector('table').appendChild(rowStructs[row].tbodyEl);\n        rowNode.appendChild(skeletonEl);\n      });\n    };\n\n    return DayGridMirrorRenderer;\n  }(DayGridEventRenderer);\n\n  var DayGridFillRenderer =\n  /** @class */\n  function (_super) {\n    __extends(DayGridFillRenderer, _super);\n\n    function DayGridFillRenderer(dayGrid) {\n      var _this = _super.call(this, dayGrid.context) || this;\n\n      _this.fillSegTag = 'td'; // override the default tag name\n\n      _this.dayGrid = dayGrid;\n      return _this;\n    }\n\n    DayGridFillRenderer.prototype.renderSegs = function (type, segs) {\n      // don't render timed background events\n      if (type === 'bgEvent') {\n        segs = segs.filter(function (seg) {\n          return seg.eventRange.def.allDay;\n        });\n      }\n\n      _super.prototype.renderSegs.call(this, type, segs);\n    };\n\n    DayGridFillRenderer.prototype.attachSegs = function (type, segs) {\n      var els = [];\n      var i;\n      var seg;\n      var skeletonEl;\n\n      for (i = 0; i < segs.length; i++) {\n        seg = segs[i];\n        skeletonEl = this.renderFillRow(type, seg);\n        this.dayGrid.rowEls[seg.row].appendChild(skeletonEl);\n        els.push(skeletonEl);\n      }\n\n      return els;\n    }; // Generates the HTML needed for one row of a fill. Requires the seg's el to be rendered.\n\n\n    DayGridFillRenderer.prototype.renderFillRow = function (type, seg) {\n      var dayGrid = this.dayGrid;\n      var colCnt = dayGrid.colCnt,\n          isRtl = dayGrid.isRtl;\n      var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n      var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n      var startCol = leftCol;\n      var endCol = rightCol + 1;\n      var className;\n      var skeletonEl;\n      var trEl;\n\n      if (type === 'businessHours') {\n        className = 'bgevent';\n      } else {\n        className = type.toLowerCase();\n      }\n\n      skeletonEl = core.htmlToElement('<div class=\"fc-' + className + '-skeleton\">' + '<table><tr></tr></table>' + '</div>');\n      trEl = skeletonEl.getElementsByTagName('tr')[0];\n\n      if (startCol > 0) {\n        core.appendToElement(trEl, // will create (startCol + 1) td's\n        new Array(startCol + 1).join('<td></td>'));\n      }\n\n      seg.el.colSpan = endCol - startCol;\n      trEl.appendChild(seg.el);\n\n      if (endCol < colCnt) {\n        core.appendToElement(trEl, // will create (colCnt - endCol) td's\n        new Array(colCnt - endCol + 1).join('<td></td>'));\n      }\n\n      var introHtml = dayGrid.renderProps.renderIntroHtml();\n\n      if (introHtml) {\n        if (dayGrid.isRtl) {\n          core.appendToElement(trEl, introHtml);\n        } else {\n          core.prependToElement(trEl, introHtml);\n        }\n      }\n\n      return skeletonEl;\n    };\n\n    return DayGridFillRenderer;\n  }(core.FillRenderer);\n\n  var DayTile =\n  /** @class */\n  function (_super) {\n    __extends(DayTile, _super);\n\n    function DayTile(context, el) {\n      var _this = _super.call(this, context, el) || this;\n\n      var eventRenderer = _this.eventRenderer = new DayTileEventRenderer(_this);\n      var renderFrame = _this.renderFrame = core.memoizeRendering(_this._renderFrame);\n      _this.renderFgEvents = core.memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderFrame]);\n      _this.renderEventSelection = core.memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n      _this.renderEventDrag = core.memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n      _this.renderEventResize = core.memoizeRendering(eventRenderer.hideByHash.bind(eventRenderer), eventRenderer.showByHash.bind(eventRenderer), [renderFrame]);\n      context.calendar.registerInteractiveComponent(_this, {\n        el: _this.el,\n        useEventCenter: false\n      });\n      return _this;\n    }\n\n    DayTile.prototype.render = function (props) {\n      this.renderFrame(props.date);\n      this.renderFgEvents(props.fgSegs);\n      this.renderEventSelection(props.eventSelection);\n      this.renderEventDrag(props.eventDragInstances);\n      this.renderEventResize(props.eventResizeInstances);\n    };\n\n    DayTile.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.renderFrame.unrender(); // should unrender everything else\n\n      this.calendar.unregisterInteractiveComponent(this);\n    };\n\n    DayTile.prototype._renderFrame = function (date) {\n      var _a = this,\n          theme = _a.theme,\n          dateEnv = _a.dateEnv;\n\n      var title = dateEnv.format(date, core.createFormatter(this.opt('dayPopoverFormat')) // TODO: cache\n      );\n      this.el.innerHTML = '<div class=\"fc-header ' + theme.getClass('popoverHeader') + '\">' + '<span class=\"fc-title\">' + core.htmlEscape(title) + '</span>' + '<span class=\"fc-close ' + theme.getIconClass('close') + '\"></span>' + '</div>' + '<div class=\"fc-body ' + theme.getClass('popoverContent') + '\">' + '<div class=\"fc-event-container\"></div>' + '</div>';\n      this.segContainerEl = this.el.querySelector('.fc-event-container');\n    };\n\n    DayTile.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {\n      var date = this.props.date; // HACK\n\n      if (positionLeft < elWidth && positionTop < elHeight) {\n        return {\n          component: this,\n          dateSpan: {\n            allDay: true,\n            range: {\n              start: date,\n              end: core.addDays(date, 1)\n            }\n          },\n          dayEl: this.el,\n          rect: {\n            left: 0,\n            top: 0,\n            right: elWidth,\n            bottom: elHeight\n          },\n          layer: 1\n        };\n      }\n    };\n\n    return DayTile;\n  }(core.DateComponent);\n\n  var DayTileEventRenderer =\n  /** @class */\n  function (_super) {\n    __extends(DayTileEventRenderer, _super);\n\n    function DayTileEventRenderer(dayTile) {\n      var _this = _super.call(this, dayTile.context) || this;\n\n      _this.dayTile = dayTile;\n      return _this;\n    }\n\n    DayTileEventRenderer.prototype.attachSegs = function (segs) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        this.dayTile.segContainerEl.appendChild(seg.el);\n      }\n    };\n\n    DayTileEventRenderer.prototype.detachSegs = function (segs) {\n      for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\n        var seg = segs_2[_i];\n        core.removeElement(seg.el);\n      }\n    };\n\n    return DayTileEventRenderer;\n  }(SimpleDayGridEventRenderer);\n\n  var DayBgRow =\n  /** @class */\n  function () {\n    function DayBgRow(context) {\n      this.context = context;\n    }\n\n    DayBgRow.prototype.renderHtml = function (props) {\n      var parts = [];\n\n      if (props.renderIntroHtml) {\n        parts.push(props.renderIntroHtml());\n      }\n\n      for (var _i = 0, _a = props.cells; _i < _a.length; _i++) {\n        var cell = _a[_i];\n        parts.push(renderCellHtml(cell.date, props.dateProfile, this.context, cell.htmlAttrs));\n      }\n\n      if (!props.cells.length) {\n        parts.push('<td class=\"fc-day ' + this.context.theme.getClass('widgetContent') + '\"></td>');\n      }\n\n      if (this.context.options.dir === 'rtl') {\n        parts.reverse();\n      }\n\n      return '<tr>' + parts.join('') + '</tr>';\n    };\n\n    return DayBgRow;\n  }();\n\n  function renderCellHtml(date, dateProfile, context, otherAttrs) {\n    var dateEnv = context.dateEnv,\n        theme = context.theme;\n    var isDateValid = core.rangeContainsMarker(dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n\n    var classes = core.getDayClasses(date, dateProfile, context);\n    classes.unshift('fc-day', theme.getClass('widgetContent'));\n    return '<td class=\"' + classes.join(' ') + '\"' + (isDateValid ? ' data-date=\"' + dateEnv.formatIso(date, {\n      omitTime: true\n    }) + '\"' : '') + (otherAttrs ? ' ' + otherAttrs : '') + '></td>';\n  }\n\n  var DAY_NUM_FORMAT = core.createFormatter({\n    day: 'numeric'\n  });\n  var WEEK_NUM_FORMAT = core.createFormatter({\n    week: 'numeric'\n  });\n\n  var DayGrid =\n  /** @class */\n  function (_super) {\n    __extends(DayGrid, _super);\n\n    function DayGrid(context, el, renderProps) {\n      var _this = _super.call(this, context, el) || this;\n\n      _this.bottomCoordPadding = 0; // hack for extending the hit area for the last row of the coordinate grid\n\n      _this.isCellSizesDirty = false;\n      var eventRenderer = _this.eventRenderer = new DayGridEventRenderer(_this);\n      var fillRenderer = _this.fillRenderer = new DayGridFillRenderer(_this);\n      _this.mirrorRenderer = new DayGridMirrorRenderer(_this);\n      var renderCells = _this.renderCells = core.memoizeRendering(_this._renderCells, _this._unrenderCells);\n      _this.renderBusinessHours = core.memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderCells]);\n      _this.renderDateSelection = core.memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'highlight'), fillRenderer.unrender.bind(fillRenderer, 'highlight'), [renderCells]);\n      _this.renderBgEvents = core.memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderCells]);\n      _this.renderFgEvents = core.memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderCells]);\n      _this.renderEventSelection = core.memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n      _this.renderEventDrag = core.memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderCells]);\n      _this.renderEventResize = core.memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderCells]);\n      _this.renderProps = renderProps;\n      return _this;\n    }\n\n    DayGrid.prototype.render = function (props) {\n      var cells = props.cells;\n      this.rowCnt = cells.length;\n      this.colCnt = cells[0].length;\n      this.renderCells(cells, props.isRigid);\n      this.renderBusinessHours(props.businessHourSegs);\n      this.renderDateSelection(props.dateSelectionSegs);\n      this.renderBgEvents(props.bgEventSegs);\n      this.renderFgEvents(props.fgEventSegs);\n      this.renderEventSelection(props.eventSelection);\n      this.renderEventDrag(props.eventDrag);\n      this.renderEventResize(props.eventResize);\n\n      if (this.segPopoverTile) {\n        this.updateSegPopoverTile();\n      }\n    };\n\n    DayGrid.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.renderCells.unrender(); // will unrender everything else\n    };\n\n    DayGrid.prototype.getCellRange = function (row, col) {\n      var start = this.props.cells[row][col].date;\n      var end = core.addDays(start, 1);\n      return {\n        start: start,\n        end: end\n      };\n    };\n\n    DayGrid.prototype.updateSegPopoverTile = function (date, segs) {\n      var ownProps = this.props;\n      this.segPopoverTile.receiveProps({\n        date: date || this.segPopoverTile.props.date,\n        fgSegs: segs || this.segPopoverTile.props.fgSegs,\n        eventSelection: ownProps.eventSelection,\n        eventDragInstances: ownProps.eventDrag ? ownProps.eventDrag.affectedInstances : null,\n        eventResizeInstances: ownProps.eventResize ? ownProps.eventResize.affectedInstances : null\n      });\n    };\n    /* Date Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype._renderCells = function (cells, isRigid) {\n      var _a = this,\n          view = _a.view,\n          dateEnv = _a.dateEnv;\n\n      var _b = this,\n          rowCnt = _b.rowCnt,\n          colCnt = _b.colCnt;\n\n      var html = '';\n      var row;\n      var col;\n\n      for (row = 0; row < rowCnt; row++) {\n        html += this.renderDayRowHtml(row, isRigid);\n      }\n\n      this.el.innerHTML = html;\n      this.rowEls = core.findElements(this.el, '.fc-row');\n      this.cellEls = core.findElements(this.el, '.fc-day, .fc-disabled-day');\n\n      if (this.isRtl) {\n        this.cellEls.reverse();\n      }\n\n      this.rowPositions = new core.PositionCache(this.el, this.rowEls, false, true // vertical\n      );\n      this.colPositions = new core.PositionCache(this.el, this.cellEls.slice(0, colCnt), // only the first row\n      true, false // horizontal\n      ); // trigger dayRender with each cell's element\n\n      for (row = 0; row < rowCnt; row++) {\n        for (col = 0; col < colCnt; col++) {\n          this.publiclyTrigger('dayRender', [{\n            date: dateEnv.toDate(cells[row][col].date),\n            el: this.getCellEl(row, col),\n            view: view\n          }]);\n        }\n      }\n\n      this.isCellSizesDirty = true;\n    };\n\n    DayGrid.prototype._unrenderCells = function () {\n      this.removeSegPopover();\n    }; // Generates the HTML for a single row, which is a div that wraps a table.\n    // `row` is the row number.\n\n\n    DayGrid.prototype.renderDayRowHtml = function (row, isRigid) {\n      var theme = this.theme;\n      var classes = ['fc-row', 'fc-week', theme.getClass('dayRow')];\n\n      if (isRigid) {\n        classes.push('fc-rigid');\n      }\n\n      var bgRow = new DayBgRow(this.context);\n      return '' + '<div class=\"' + classes.join(' ') + '\">' + '<div class=\"fc-bg\">' + '<table class=\"' + theme.getClass('tableGrid') + '\">' + bgRow.renderHtml({\n        cells: this.props.cells[row],\n        dateProfile: this.props.dateProfile,\n        renderIntroHtml: this.renderProps.renderBgIntroHtml\n      }) + '</table>' + '</div>' + '<div class=\"fc-content-skeleton\">' + '<table>' + (this.getIsNumbersVisible() ? '<thead>' + this.renderNumberTrHtml(row) + '</thead>' : '') + '</table>' + '</div>' + '</div>';\n    };\n\n    DayGrid.prototype.getIsNumbersVisible = function () {\n      return this.getIsDayNumbersVisible() || this.renderProps.cellWeekNumbersVisible || this.renderProps.colWeekNumbersVisible;\n    };\n\n    DayGrid.prototype.getIsDayNumbersVisible = function () {\n      return this.rowCnt > 1;\n    };\n    /* Grid Number Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype.renderNumberTrHtml = function (row) {\n      var intro = this.renderProps.renderNumberIntroHtml(row, this);\n      return '' + '<tr>' + (this.isRtl ? '' : intro) + this.renderNumberCellsHtml(row) + (this.isRtl ? intro : '') + '</tr>';\n    };\n\n    DayGrid.prototype.renderNumberCellsHtml = function (row) {\n      var htmls = [];\n      var col;\n      var date;\n\n      for (col = 0; col < this.colCnt; col++) {\n        date = this.props.cells[row][col].date;\n        htmls.push(this.renderNumberCellHtml(date));\n      }\n\n      if (this.isRtl) {\n        htmls.reverse();\n      }\n\n      return htmls.join('');\n    }; // Generates the HTML for the <td>s of the \"number\" row in the DayGrid's content skeleton.\n    // The number row will only exist if either day numbers or week numbers are turned on.\n\n\n    DayGrid.prototype.renderNumberCellHtml = function (date) {\n      var _a = this,\n          view = _a.view,\n          dateEnv = _a.dateEnv;\n\n      var html = '';\n      var isDateValid = core.rangeContainsMarker(this.props.dateProfile.activeRange, date); // TODO: called too frequently. cache somehow.\n\n      var isDayNumberVisible = this.getIsDayNumbersVisible() && isDateValid;\n      var classes;\n      var weekCalcFirstDow;\n\n      if (!isDayNumberVisible && !this.renderProps.cellWeekNumbersVisible) {\n        // no numbers in day cell (week number must be along the side)\n        return '<td></td>'; //  will create an empty space above events :(\n      }\n\n      classes = core.getDayClasses(date, this.props.dateProfile, this.context);\n      classes.unshift('fc-day-top');\n\n      if (this.renderProps.cellWeekNumbersVisible) {\n        weekCalcFirstDow = dateEnv.weekDow;\n      }\n\n      html += '<td class=\"' + classes.join(' ') + '\"' + (isDateValid ? ' data-date=\"' + dateEnv.formatIso(date, {\n        omitTime: true\n      }) + '\"' : '') + '>';\n\n      if (this.renderProps.cellWeekNumbersVisible && date.getUTCDay() === weekCalcFirstDow) {\n        html += core.buildGotoAnchorHtml(view, {\n          date: date,\n          type: 'week'\n        }, {\n          'class': 'fc-week-number'\n        }, dateEnv.format(date, WEEK_NUM_FORMAT) // inner HTML\n        );\n      }\n\n      if (isDayNumberVisible) {\n        html += core.buildGotoAnchorHtml(view, date, {\n          'class': 'fc-day-number'\n        }, dateEnv.format(date, DAY_NUM_FORMAT) // inner HTML\n        );\n      }\n\n      html += '</td>';\n      return html;\n    };\n    /* Sizing\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype.updateSize = function (isResize) {\n      var _a = this,\n          fillRenderer = _a.fillRenderer,\n          eventRenderer = _a.eventRenderer,\n          mirrorRenderer = _a.mirrorRenderer;\n\n      if (isResize || this.isCellSizesDirty) {\n        this.buildColPositions();\n        this.buildRowPositions();\n        this.isCellSizesDirty = false;\n      }\n\n      fillRenderer.computeSizes(isResize);\n      eventRenderer.computeSizes(isResize);\n      mirrorRenderer.computeSizes(isResize);\n      fillRenderer.assignSizes(isResize);\n      eventRenderer.assignSizes(isResize);\n      mirrorRenderer.assignSizes(isResize);\n    };\n\n    DayGrid.prototype.buildColPositions = function () {\n      this.colPositions.build();\n    };\n\n    DayGrid.prototype.buildRowPositions = function () {\n      this.rowPositions.build();\n      this.rowPositions.bottoms[this.rowCnt - 1] += this.bottomCoordPadding; // hack\n    };\n    /* Hit System\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype.positionToHit = function (leftPosition, topPosition) {\n      var _a = this,\n          colPositions = _a.colPositions,\n          rowPositions = _a.rowPositions;\n\n      var col = colPositions.leftToIndex(leftPosition);\n      var row = rowPositions.topToIndex(topPosition);\n\n      if (row != null && col != null) {\n        return {\n          row: row,\n          col: col,\n          dateSpan: {\n            range: this.getCellRange(row, col),\n            allDay: true\n          },\n          dayEl: this.getCellEl(row, col),\n          relativeRect: {\n            left: colPositions.lefts[col],\n            right: colPositions.rights[col],\n            top: rowPositions.tops[row],\n            bottom: rowPositions.bottoms[row]\n          }\n        };\n      }\n    };\n    /* Cell System\n    ------------------------------------------------------------------------------------------------------------------*/\n    // FYI: the first column is the leftmost column, regardless of date\n\n\n    DayGrid.prototype.getCellEl = function (row, col) {\n      return this.cellEls[row * this.colCnt + col];\n    };\n    /* Event Drag Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype._renderEventDrag = function (state) {\n      if (state) {\n        this.eventRenderer.hideByHash(state.affectedInstances);\n        this.fillRenderer.renderSegs('highlight', state.segs);\n      }\n    };\n\n    DayGrid.prototype._unrenderEventDrag = function (state) {\n      if (state) {\n        this.eventRenderer.showByHash(state.affectedInstances);\n        this.fillRenderer.unrender('highlight');\n      }\n    };\n    /* Event Resize Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype._renderEventResize = function (state) {\n      if (state) {\n        this.eventRenderer.hideByHash(state.affectedInstances);\n        this.fillRenderer.renderSegs('highlight', state.segs);\n        this.mirrorRenderer.renderSegs(state.segs, {\n          isResizing: true,\n          sourceSeg: state.sourceSeg\n        });\n      }\n    };\n\n    DayGrid.prototype._unrenderEventResize = function (state) {\n      if (state) {\n        this.eventRenderer.showByHash(state.affectedInstances);\n        this.fillRenderer.unrender('highlight');\n        this.mirrorRenderer.unrender(state.segs, {\n          isResizing: true,\n          sourceSeg: state.sourceSeg\n        });\n      }\n    };\n    /* More+ Link Popover\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGrid.prototype.removeSegPopover = function () {\n      if (this.segPopover) {\n        this.segPopover.hide(); // in handler, will call segPopover's removeElement\n      }\n    }; // Limits the number of \"levels\" (vertically stacking layers of events) for each row of the grid.\n    // `levelLimit` can be false (don't limit), a number, or true (should be computed).\n\n\n    DayGrid.prototype.limitRows = function (levelLimit) {\n      var rowStructs = this.eventRenderer.rowStructs || [];\n      var row; // row #\n\n      var rowLevelLimit;\n\n      for (row = 0; row < rowStructs.length; row++) {\n        this.unlimitRow(row);\n\n        if (!levelLimit) {\n          rowLevelLimit = false;\n        } else if (typeof levelLimit === 'number') {\n          rowLevelLimit = levelLimit;\n        } else {\n          rowLevelLimit = this.computeRowLevelLimit(row);\n        }\n\n        if (rowLevelLimit !== false) {\n          this.limitRow(row, rowLevelLimit);\n        }\n      }\n    }; // Computes the number of levels a row will accomodate without going outside its bounds.\n    // Assumes the row is \"rigid\" (maintains a constant height regardless of what is inside).\n    // `row` is the row number.\n\n\n    DayGrid.prototype.computeRowLevelLimit = function (row) {\n      var rowEl = this.rowEls[row]; // the containing \"fake\" row div\n\n      var rowBottom = rowEl.getBoundingClientRect().bottom; // relative to viewport!\n\n      var trEls = core.findChildren(this.eventRenderer.rowStructs[row].tbodyEl);\n      var i;\n      var trEl; // Reveal one level <tr> at a time and stop when we find one out of bounds\n\n      for (i = 0; i < trEls.length; i++) {\n        trEl = trEls[i];\n        trEl.classList.remove('fc-limited'); // reset to original state (reveal)\n\n        if (trEl.getBoundingClientRect().bottom > rowBottom) {\n          return i;\n        }\n      }\n\n      return false; // should not limit at all\n    }; // Limits the given grid row to the maximum number of levels and injects \"more\" links if necessary.\n    // `row` is the row number.\n    // `levelLimit` is a number for the maximum (inclusive) number of levels allowed.\n\n\n    DayGrid.prototype.limitRow = function (row, levelLimit) {\n      var _this = this;\n\n      var _a = this,\n          colCnt = _a.colCnt,\n          isRtl = _a.isRtl;\n\n      var rowStruct = this.eventRenderer.rowStructs[row];\n      var moreNodes = []; // array of \"more\" <a> links and <td> DOM nodes\n\n      var col = 0; // col #, left-to-right (not chronologically)\n\n      var levelSegs; // array of segment objects in the last allowable level, ordered left-to-right\n\n      var cellMatrix; // a matrix (by level, then column) of all <td> elements in the row\n\n      var limitedNodes; // array of temporarily hidden level <tr> and segment <td> DOM nodes\n\n      var i;\n      var seg;\n      var segsBelow; // array of segment objects below `seg` in the current `col`\n\n      var totalSegsBelow; // total number of segments below `seg` in any of the columns `seg` occupies\n\n      var colSegsBelow; // array of segment arrays, below seg, one for each column (offset from segs's first column)\n\n      var td;\n      var rowSpan;\n      var segMoreNodes; // array of \"more\" <td> cells that will stand-in for the current seg's cell\n\n      var j;\n      var moreTd;\n      var moreWrap;\n      var moreLink; // Iterates through empty level cells and places \"more\" links inside if need be\n\n      var emptyCellsUntil = function (endCol) {\n        while (col < endCol) {\n          segsBelow = _this.getCellSegs(row, col, levelLimit);\n\n          if (segsBelow.length) {\n            td = cellMatrix[levelLimit - 1][col];\n            moreLink = _this.renderMoreLink(row, col, segsBelow);\n            moreWrap = core.createElement('div', null, moreLink);\n            td.appendChild(moreWrap);\n            moreNodes.push(moreWrap[0]);\n          }\n\n          col++;\n        }\n      };\n\n      if (levelLimit && levelLimit < rowStruct.segLevels.length) {\n        // is it actually over the limit?\n        levelSegs = rowStruct.segLevels[levelLimit - 1];\n        cellMatrix = rowStruct.cellMatrix;\n        limitedNodes = core.findChildren(rowStruct.tbodyEl).slice(levelLimit); // get level <tr> elements past the limit\n\n        limitedNodes.forEach(function (node) {\n          node.classList.add('fc-limited'); // hide elements and get a simple DOM-nodes array\n        }); // iterate though segments in the last allowable level\n\n        for (i = 0; i < levelSegs.length; i++) {\n          seg = levelSegs[i];\n          var leftCol = isRtl ? colCnt - 1 - seg.lastCol : seg.firstCol;\n          var rightCol = isRtl ? colCnt - 1 - seg.firstCol : seg.lastCol;\n          emptyCellsUntil(leftCol); // process empty cells before the segment\n          // determine *all* segments below `seg` that occupy the same columns\n\n          colSegsBelow = [];\n          totalSegsBelow = 0;\n\n          while (col <= rightCol) {\n            segsBelow = this.getCellSegs(row, col, levelLimit);\n            colSegsBelow.push(segsBelow);\n            totalSegsBelow += segsBelow.length;\n            col++;\n          }\n\n          if (totalSegsBelow) {\n            // do we need to replace this segment with one or many \"more\" links?\n            td = cellMatrix[levelLimit - 1][leftCol]; // the segment's parent cell\n\n            rowSpan = td.rowSpan || 1;\n            segMoreNodes = []; // make a replacement <td> for each column the segment occupies. will be one for each colspan\n\n            for (j = 0; j < colSegsBelow.length; j++) {\n              moreTd = core.createElement('td', {\n                className: 'fc-more-cell',\n                rowSpan: rowSpan\n              });\n              segsBelow = colSegsBelow[j];\n              moreLink = this.renderMoreLink(row, leftCol + j, [seg].concat(segsBelow) // count seg as hidden too\n              );\n              moreWrap = core.createElement('div', null, moreLink);\n              moreTd.appendChild(moreWrap);\n              segMoreNodes.push(moreTd);\n              moreNodes.push(moreTd);\n            }\n\n            td.classList.add('fc-limited');\n            core.insertAfterElement(td, segMoreNodes);\n            limitedNodes.push(td);\n          }\n        }\n\n        emptyCellsUntil(this.colCnt); // finish off the level\n\n        rowStruct.moreEls = moreNodes; // for easy undoing later\n\n        rowStruct.limitedEls = limitedNodes; // for easy undoing later\n      }\n    }; // Reveals all levels and removes all \"more\"-related elements for a grid's row.\n    // `row` is a row number.\n\n\n    DayGrid.prototype.unlimitRow = function (row) {\n      var rowStruct = this.eventRenderer.rowStructs[row];\n\n      if (rowStruct.moreEls) {\n        rowStruct.moreEls.forEach(core.removeElement);\n        rowStruct.moreEls = null;\n      }\n\n      if (rowStruct.limitedEls) {\n        rowStruct.limitedEls.forEach(function (limitedEl) {\n          limitedEl.classList.remove('fc-limited');\n        });\n        rowStruct.limitedEls = null;\n      }\n    }; // Renders an <a> element that represents hidden event element for a cell.\n    // Responsible for attaching click handler as well.\n\n\n    DayGrid.prototype.renderMoreLink = function (row, col, hiddenSegs) {\n      var _this = this;\n\n      var _a = this,\n          view = _a.view,\n          dateEnv = _a.dateEnv;\n\n      var a = core.createElement('a', {\n        className: 'fc-more'\n      });\n      a.innerText = this.getMoreLinkText(hiddenSegs.length);\n      a.addEventListener('click', function (ev) {\n        var clickOption = _this.opt('eventLimitClick');\n\n        var _col = _this.isRtl ? _this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n\n\n        var date = _this.props.cells[row][_col].date;\n        var moreEl = ev.currentTarget;\n\n        var dayEl = _this.getCellEl(row, col);\n\n        var allSegs = _this.getCellSegs(row, col); // rescope the segments to be within the cell's date\n\n\n        var reslicedAllSegs = _this.resliceDaySegs(allSegs, date);\n\n        var reslicedHiddenSegs = _this.resliceDaySegs(hiddenSegs, date);\n\n        if (typeof clickOption === 'function') {\n          // the returned value can be an atomic option\n          clickOption = _this.publiclyTrigger('eventLimitClick', [{\n            date: dateEnv.toDate(date),\n            allDay: true,\n            dayEl: dayEl,\n            moreEl: moreEl,\n            segs: reslicedAllSegs,\n            hiddenSegs: reslicedHiddenSegs,\n            jsEvent: ev,\n            view: view\n          }]);\n        }\n\n        if (clickOption === 'popover') {\n          _this.showSegPopover(row, col, moreEl, reslicedAllSegs);\n        } else if (typeof clickOption === 'string') {\n          // a view name\n          view.calendar.zoomTo(date, clickOption);\n        }\n      });\n      return a;\n    }; // Reveals the popover that displays all events within a cell\n\n\n    DayGrid.prototype.showSegPopover = function (row, col, moreLink, segs) {\n      var _this = this;\n\n      var _a = this,\n          calendar = _a.calendar,\n          view = _a.view,\n          theme = _a.theme;\n\n      var _col = this.isRtl ? this.colCnt - col - 1 : col; // HACK: props.cells has different dir system?\n\n\n      var moreWrap = moreLink.parentNode; // the <div> wrapper around the <a>\n\n      var topEl; // the element we want to match the top coordinate of\n\n      var options;\n\n      if (this.rowCnt === 1) {\n        topEl = view.el; // will cause the popover to cover any sort of header\n      } else {\n        topEl = this.rowEls[row]; // will align with top of row\n      }\n\n      options = {\n        className: 'fc-more-popover ' + theme.getClass('popover'),\n        parentEl: view.el,\n        top: core.computeRect(topEl).top,\n        autoHide: true,\n        content: function (el) {\n          _this.segPopoverTile = new DayTile(_this.context, el);\n\n          _this.updateSegPopoverTile(_this.props.cells[row][_col].date, segs);\n        },\n        hide: function () {\n          _this.segPopoverTile.destroy();\n\n          _this.segPopoverTile = null;\n\n          _this.segPopover.destroy();\n\n          _this.segPopover = null;\n        }\n      }; // Determine horizontal coordinate.\n      // We use the moreWrap instead of the <td> to avoid border confusion.\n\n      if (this.isRtl) {\n        options.right = core.computeRect(moreWrap).right + 1; // +1 to be over cell border\n      } else {\n        options.left = core.computeRect(moreWrap).left - 1; // -1 to be over cell border\n      }\n\n      this.segPopover = new Popover(options);\n      this.segPopover.show();\n      calendar.releaseAfterSizingTriggers(); // hack for eventPositioned\n    }; // Given the events within an array of segment objects, reslice them to be in a single day\n\n\n    DayGrid.prototype.resliceDaySegs = function (segs, dayDate) {\n      var dayStart = dayDate;\n      var dayEnd = core.addDays(dayStart, 1);\n      var dayRange = {\n        start: dayStart,\n        end: dayEnd\n      };\n      var newSegs = [];\n\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var eventRange = seg.eventRange;\n        var origRange = eventRange.range;\n        var slicedRange = core.intersectRanges(origRange, dayRange);\n\n        if (slicedRange) {\n          newSegs.push(__assign({}, seg, {\n            eventRange: {\n              def: eventRange.def,\n              ui: __assign({}, eventRange.ui, {\n                durationEditable: false\n              }),\n              instance: eventRange.instance,\n              range: slicedRange\n            },\n            isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n            isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n          }));\n        }\n      }\n\n      return newSegs;\n    }; // Generates the text that should be inside a \"more\" link, given the number of events it represents\n\n\n    DayGrid.prototype.getMoreLinkText = function (num) {\n      var opt = this.opt('eventLimitText');\n\n      if (typeof opt === 'function') {\n        return opt(num);\n      } else {\n        return '+' + num + ' ' + opt;\n      }\n    }; // Returns segments within a given cell.\n    // If `startLevel` is specified, returns only events including and below that level. Otherwise returns all segs.\n\n\n    DayGrid.prototype.getCellSegs = function (row, col, startLevel) {\n      var segMatrix = this.eventRenderer.rowStructs[row].segMatrix;\n      var level = startLevel || 0;\n      var segs = [];\n      var seg;\n\n      while (level < segMatrix.length) {\n        seg = segMatrix[level][col];\n\n        if (seg) {\n          segs.push(seg);\n        }\n\n        level++;\n      }\n\n      return segs;\n    };\n\n    return DayGrid;\n  }(core.DateComponent);\n\n  var WEEK_NUM_FORMAT$1 = core.createFormatter({\n    week: 'numeric'\n  });\n  /* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // It is a manager for a DayGrid subcomponent, which does most of the heavy lifting.\n  // It is responsible for managing width/height.\n\n  var DayGridView =\n  /** @class */\n  function (_super) {\n    __extends(DayGridView, _super);\n\n    function DayGridView(context, viewSpec, dateProfileGenerator, parentEl) {\n      var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n      /* Header Rendering\n      ------------------------------------------------------------------------------------------------------------------*/\n      // Generates the HTML that will go before the day-of week header cells\n\n\n      _this.renderHeadIntroHtml = function () {\n        var theme = _this.theme;\n\n        if (_this.colWeekNumbersVisible) {\n          return '' + '<th class=\"fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.weekNumberStyleAttr() + '>' + '<span>' + // needed for matchCellWidths\n          core.htmlEscape(_this.opt('weekLabel')) + '</span>' + '</th>';\n        }\n\n        return '';\n      };\n      /* Day Grid Rendering\n      ------------------------------------------------------------------------------------------------------------------*/\n      // Generates the HTML that will go before content-skeleton cells that display the day/week numbers\n\n\n      _this.renderDayGridNumberIntroHtml = function (row, dayGrid) {\n        var dateEnv = _this.dateEnv;\n        var weekStart = dayGrid.props.cells[row][0].date;\n\n        if (_this.colWeekNumbersVisible) {\n          return '' + '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '>' + core.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\n          _this, {\n            date: weekStart,\n            type: 'week',\n            forceOff: dayGrid.colCnt === 1\n          }, dateEnv.format(weekStart, WEEK_NUM_FORMAT$1) // inner HTML\n          ) + '</td>';\n        }\n\n        return '';\n      }; // Generates the HTML that goes before the day bg cells for each day-row\n\n\n      _this.renderDayGridBgIntroHtml = function () {\n        var theme = _this.theme;\n\n        if (_this.colWeekNumbersVisible) {\n          return '<td class=\"fc-week-number ' + theme.getClass('widgetContent') + '\" ' + _this.weekNumberStyleAttr() + '></td>';\n        }\n\n        return '';\n      }; // Generates the HTML that goes before every other type of row generated by DayGrid.\n      // Affects mirror-skeleton and highlight-skeleton rows.\n\n\n      _this.renderDayGridIntroHtml = function () {\n        if (_this.colWeekNumbersVisible) {\n          return '<td class=\"fc-week-number\" ' + _this.weekNumberStyleAttr() + '></td>';\n        }\n\n        return '';\n      };\n\n      _this.el.classList.add('fc-dayGrid-view');\n\n      _this.el.innerHTML = _this.renderSkeletonHtml();\n      _this.scroller = new core.ScrollComponent('hidden', // overflow x\n      'auto' // overflow y\n      );\n      var dayGridContainerEl = _this.scroller.el;\n\n      _this.el.querySelector('.fc-body > tr > td').appendChild(dayGridContainerEl);\n\n      dayGridContainerEl.classList.add('fc-day-grid-container');\n      var dayGridEl = core.createElement('div', {\n        className: 'fc-day-grid'\n      });\n      dayGridContainerEl.appendChild(dayGridEl);\n      var cellWeekNumbersVisible;\n\n      if (_this.opt('weekNumbers')) {\n        if (_this.opt('weekNumbersWithinDays')) {\n          cellWeekNumbersVisible = true;\n          _this.colWeekNumbersVisible = false;\n        } else {\n          cellWeekNumbersVisible = false;\n          _this.colWeekNumbersVisible = true;\n        }\n      } else {\n        _this.colWeekNumbersVisible = false;\n        cellWeekNumbersVisible = false;\n      }\n\n      _this.dayGrid = new DayGrid(_this.context, dayGridEl, {\n        renderNumberIntroHtml: _this.renderDayGridNumberIntroHtml,\n        renderBgIntroHtml: _this.renderDayGridBgIntroHtml,\n        renderIntroHtml: _this.renderDayGridIntroHtml,\n        colWeekNumbersVisible: _this.colWeekNumbersVisible,\n        cellWeekNumbersVisible: cellWeekNumbersVisible\n      });\n      return _this;\n    }\n\n    DayGridView.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.dayGrid.destroy();\n      this.scroller.destroy();\n    }; // Builds the HTML skeleton for the view.\n    // The day-grid component will render inside of a container defined by this HTML.\n\n\n    DayGridView.prototype.renderSkeletonHtml = function () {\n      var theme = this.theme;\n      return '' + '<table class=\"' + theme.getClass('tableGrid') + '\">' + (this.opt('columnHeader') ? '<thead class=\"fc-head\">' + '<tr>' + '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' + '</tr>' + '</thead>' : '') + '<tbody class=\"fc-body\">' + '<tr>' + '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' + '</tr>' + '</tbody>' + '</table>';\n    }; // Generates an HTML attribute string for setting the width of the week number column, if it is known\n\n\n    DayGridView.prototype.weekNumberStyleAttr = function () {\n      if (this.weekNumberWidth != null) {\n        return 'style=\"width:' + this.weekNumberWidth + 'px\"';\n      }\n\n      return '';\n    }; // Determines whether each row should have a constant height\n\n\n    DayGridView.prototype.hasRigidRows = function () {\n      var eventLimit = this.opt('eventLimit');\n      return eventLimit && typeof eventLimit !== 'number';\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n      _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n\n\n      this.dayGrid.updateSize(isResize);\n    }; // Refreshes the horizontal dimensions of the view\n\n\n    DayGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n      var dayGrid = this.dayGrid;\n      var eventLimit = this.opt('eventLimit');\n      var headRowEl = this.header ? this.header.el : null; // HACK\n\n      var scrollerHeight;\n      var scrollbarWidths; // hack to give the view some height prior to dayGrid's columns being rendered\n      // TODO: separate setting height from scroller VS dayGrid.\n\n      if (!dayGrid.rowEls) {\n        if (!isAuto) {\n          scrollerHeight = this.computeScrollerHeight(viewHeight);\n          this.scroller.setHeight(scrollerHeight);\n        }\n\n        return;\n      }\n\n      if (this.colWeekNumbersVisible) {\n        // Make sure all week number cells running down the side have the same width.\n        this.weekNumberWidth = core.matchCellWidths(core.findElements(this.el, '.fc-week-number'));\n      } // reset all heights to be natural\n\n\n      this.scroller.clear();\n\n      if (headRowEl) {\n        core.uncompensateScroll(headRowEl);\n      }\n\n      dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n      // is the event limit a constant level number?\n\n      if (eventLimit && typeof eventLimit === 'number') {\n        dayGrid.limitRows(eventLimit); // limit the levels first so the height can redistribute after\n      } // distribute the height to the rows\n      // (viewHeight is a \"recommended\" value if isAuto)\n\n\n      scrollerHeight = this.computeScrollerHeight(viewHeight);\n      this.setGridHeight(scrollerHeight, isAuto); // is the event limit dynamically calculated?\n\n      if (eventLimit && typeof eventLimit !== 'number') {\n        dayGrid.limitRows(eventLimit); // limit the levels after the grid's row heights have been set\n      }\n\n      if (!isAuto) {\n        // should we force dimensions of the scroll container?\n        this.scroller.setHeight(scrollerHeight);\n        scrollbarWidths = this.scroller.getScrollbarWidths();\n\n        if (scrollbarWidths.left || scrollbarWidths.right) {\n          // using scrollbars?\n          if (headRowEl) {\n            core.compensateScroll(headRowEl, scrollbarWidths);\n          } // doing the scrollbar compensation might have created text overflow which created more height. redo\n\n\n          scrollerHeight = this.computeScrollerHeight(viewHeight);\n          this.scroller.setHeight(scrollerHeight);\n        } // guarantees the same scrollbar widths\n\n\n        this.scroller.lockOverflow(scrollbarWidths);\n      }\n    }; // given a desired total height of the view, returns what the height of the scroller should be\n\n\n    DayGridView.prototype.computeScrollerHeight = function (viewHeight) {\n      return viewHeight - core.subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    }; // Sets the height of just the DayGrid component in this view\n\n\n    DayGridView.prototype.setGridHeight = function (height, isAuto) {\n      if (this.opt('monthMode')) {\n        // if auto, make the height of each row the height that it would be if there were 6 weeks\n        if (isAuto) {\n          height *= this.dayGrid.rowCnt / 6;\n        }\n\n        core.distributeHeight(this.dayGrid.rowEls, height, !isAuto); // if auto, don't compensate for height-hogging rows\n      } else {\n        if (isAuto) {\n          core.undistributeHeight(this.dayGrid.rowEls); // let the rows be their natural height with no expanding\n        } else {\n          core.distributeHeight(this.dayGrid.rowEls, height, true); // true = compensate for height-hogging rows\n        }\n      }\n    };\n    /* Scroll\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    DayGridView.prototype.computeInitialDateScroll = function () {\n      return {\n        top: 0\n      };\n    };\n\n    DayGridView.prototype.queryDateScroll = function () {\n      return {\n        top: this.scroller.getScrollTop()\n      };\n    };\n\n    DayGridView.prototype.applyDateScroll = function (scroll) {\n      if (scroll.top !== undefined) {\n        this.scroller.setScrollTop(scroll.top);\n      }\n    };\n\n    return DayGridView;\n  }(core.View);\n\n  DayGridView.prototype.dateProfileGeneratorClass = DayGridDateProfileGenerator;\n\n  var SimpleDayGrid =\n  /** @class */\n  function (_super) {\n    __extends(SimpleDayGrid, _super);\n\n    function SimpleDayGrid(context, dayGrid) {\n      var _this = _super.call(this, context, dayGrid.el) || this;\n\n      _this.slicer = new DayGridSlicer();\n      _this.dayGrid = dayGrid;\n      context.calendar.registerInteractiveComponent(_this, {\n        el: _this.dayGrid.el\n      });\n      return _this;\n    }\n\n    SimpleDayGrid.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.calendar.unregisterInteractiveComponent(this);\n    };\n\n    SimpleDayGrid.prototype.render = function (props) {\n      var dayGrid = this.dayGrid;\n      var dateProfile = props.dateProfile,\n          dayTable = props.dayTable;\n      dayGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, props.nextDayThreshold, dayGrid, dayTable), {\n        dateProfile: dateProfile,\n        cells: dayTable.cells,\n        isRigid: props.isRigid\n      }));\n    };\n\n    SimpleDayGrid.prototype.queryHit = function (positionLeft, positionTop) {\n      var rawHit = this.dayGrid.positionToHit(positionLeft, positionTop);\n\n      if (rawHit) {\n        return {\n          component: this.dayGrid,\n          dateSpan: rawHit.dateSpan,\n          dayEl: rawHit.dayEl,\n          rect: {\n            left: rawHit.relativeRect.left,\n            right: rawHit.relativeRect.right,\n            top: rawHit.relativeRect.top,\n            bottom: rawHit.relativeRect.bottom\n          },\n          layer: 0\n        };\n      }\n    };\n\n    return SimpleDayGrid;\n  }(core.DateComponent);\n\n  var DayGridSlicer =\n  /** @class */\n  function (_super) {\n    __extends(DayGridSlicer, _super);\n\n    function DayGridSlicer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    DayGridSlicer.prototype.sliceRange = function (dateRange, dayTable) {\n      return dayTable.sliceRange(dateRange);\n    };\n\n    return DayGridSlicer;\n  }(core.Slicer);\n\n  var DayGridView$1 =\n  /** @class */\n  function (_super) {\n    __extends(DayGridView, _super);\n\n    function DayGridView(_context, viewSpec, dateProfileGenerator, parentEl) {\n      var _this = _super.call(this, _context, viewSpec, dateProfileGenerator, parentEl) || this;\n\n      _this.buildDayTable = core.memoize(buildDayTable);\n\n      if (_this.opt('columnHeader')) {\n        _this.header = new core.DayHeader(_this.context, _this.el.querySelector('.fc-head-container'));\n      }\n\n      _this.simpleDayGrid = new SimpleDayGrid(_this.context, _this.dayGrid);\n      return _this;\n    }\n\n    DayGridView.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      if (this.header) {\n        this.header.destroy();\n      }\n\n      this.simpleDayGrid.destroy();\n    };\n\n    DayGridView.prototype.render = function (props) {\n      _super.prototype.render.call(this, props);\n\n      var dateProfile = this.props.dateProfile;\n      var dayTable = this.dayTable = this.buildDayTable(dateProfile, this.dateProfileGenerator);\n\n      if (this.header) {\n        this.header.receiveProps({\n          dateProfile: dateProfile,\n          dates: dayTable.headerDates,\n          datesRepDistinctDays: dayTable.rowCnt === 1,\n          renderIntroHtml: this.renderHeadIntroHtml\n        });\n      }\n\n      this.simpleDayGrid.receiveProps({\n        dateProfile: dateProfile,\n        dayTable: dayTable,\n        businessHours: props.businessHours,\n        dateSelection: props.dateSelection,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        isRigid: this.hasRigidRows(),\n        nextDayThreshold: this.nextDayThreshold\n      });\n    };\n\n    return DayGridView;\n  }(DayGridView);\n\n  function buildDayTable(dateProfile, dateProfileGenerator) {\n    var daySeries = new core.DaySeries(dateProfile.renderRange, dateProfileGenerator);\n    return new core.DayTable(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n  }\n\n  var main = core.createPlugin({\n    defaultView: 'dayGridMonth',\n    views: {\n      dayGrid: DayGridView$1,\n      dayGridDay: {\n        type: 'dayGrid',\n        duration: {\n          days: 1\n        }\n      },\n      dayGridWeek: {\n        type: 'dayGrid',\n        duration: {\n          weeks: 1\n        }\n      },\n      dayGridMonth: {\n        type: 'dayGrid',\n        duration: {\n          months: 1\n        },\n        monthMode: true,\n        fixedWeekCount: true\n      }\n    }\n  });\n  exports.default = main;\n  exports.SimpleDayGrid = SimpleDayGrid;\n  exports.DayGridSlicer = DayGridSlicer;\n  exports.DayGrid = DayGrid;\n  exports.AbstractDayGridView = DayGridView;\n  exports.DayGridView = DayGridView$1;\n  exports.buildBasicDayTable = buildDayTable;\n  exports.DayBgRow = DayBgRow;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/daygrid/main.js?");

/***/ }),

/***/ "./node_modules/@fullcalendar/timegrid/main.css":
/*!******************************************************!*\
  !*** ./node_modules/@fullcalendar/timegrid/main.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../mini-css-extract-plugin/dist/loader.js!../../css-loader/dist/cjs.js!../../sass-loader/lib/loader.js!./main.css */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/timegrid/main.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/timegrid/main.css?");

/***/ }),

/***/ "./node_modules/@fullcalendar/timegrid/main.js":
/*!*****************************************************!*\
  !*** ./node_modules/@fullcalendar/timegrid/main.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n@fullcalendar/timegrid v4.0.1\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n(function (global, factory) {\n   true ? factory(exports, __webpack_require__(/*! @fullcalendar/core */ \"./node_modules/@fullcalendar/core/main.js\"), __webpack_require__(/*! @fullcalendar/daygrid */ \"./node_modules/@fullcalendar/daygrid/main.js\")) : undefined;\n})(this, function (exports, core, daygrid) {\n  'use strict';\n  /*! *****************************************************************************\r\n  Copyright (c) Microsoft Corporation. All rights reserved.\r\n  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n  this file except in compliance with the License. You may obtain a copy of the\r\n  License at http://www.apache.org/licenses/LICENSE-2.0\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n  KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n  WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n  MERCHANTABLITY OR NON-INFRINGEMENT.\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n  and limitations under the License.\r\n  ***************************************************************************** */\n\n  /* global Reflect, Promise */\n\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  function __extends(d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  }\n\n  var __assign = function () {\n    __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n\n      return t;\n    };\n\n    return __assign.apply(this, arguments);\n  };\n  /*\n  Only handles foreground segs.\n  Does not own rendering. Use for low-level util methods by TimeGrid.\n  */\n\n\n  var TimeGridEventRenderer =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridEventRenderer, _super);\n\n    function TimeGridEventRenderer(timeGrid) {\n      var _this = _super.call(this, timeGrid.context) || this;\n\n      _this.timeGrid = timeGrid;\n      _this.fullTimeFormat = core.createFormatter({\n        hour: 'numeric',\n        minute: '2-digit',\n        separator: _this.context.options.defaultRangeSeparator\n      });\n      return _this;\n    } // Given an array of foreground segments, render a DOM element for each, computes position,\n    // and attaches to the column inner-container elements.\n\n\n    TimeGridEventRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n      var segsByCol = this.timeGrid.groupSegsByCol(segs); // order the segs within each column\n      // TODO: have groupSegsByCol do this?\n\n      for (var col = 0; col < segsByCol.length; col++) {\n        segsByCol[col] = this.sortEventSegs(segsByCol[col]);\n      }\n\n      this.segsByCol = segsByCol;\n      this.timeGrid.attachSegsByCol(segsByCol, this.timeGrid.fgContainerEls);\n    };\n\n    TimeGridEventRenderer.prototype.detachSegs = function (segs) {\n      segs.forEach(function (seg) {\n        core.removeElement(seg.el);\n      });\n      this.segsByCol = null;\n    };\n\n    TimeGridEventRenderer.prototype.computeSegSizes = function (allSegs) {\n      var _a = this,\n          timeGrid = _a.timeGrid,\n          segsByCol = _a.segsByCol;\n\n      var colCnt = timeGrid.colCnt;\n      timeGrid.computeSegVerticals(allSegs); // horizontals relies on this\n\n      if (segsByCol) {\n        for (var col = 0; col < colCnt; col++) {\n          this.computeSegHorizontals(segsByCol[col]); // compute horizontal coordinates, z-index's, and reorder the array\n        }\n      }\n    };\n\n    TimeGridEventRenderer.prototype.assignSegSizes = function (allSegs) {\n      var _a = this,\n          timeGrid = _a.timeGrid,\n          segsByCol = _a.segsByCol;\n\n      var colCnt = timeGrid.colCnt;\n      timeGrid.assignSegVerticals(allSegs); // horizontals relies on this\n\n      if (segsByCol) {\n        for (var col = 0; col < colCnt; col++) {\n          this.assignSegCss(segsByCol[col]);\n        }\n      }\n    }; // Computes a default event time formatting string if `eventTimeFormat` is not explicitly defined\n\n\n    TimeGridEventRenderer.prototype.computeEventTimeFormat = function () {\n      return {\n        hour: 'numeric',\n        minute: '2-digit',\n        meridiem: false\n      };\n    }; // Computes a default `displayEventEnd` value if one is not expliclty defined\n\n\n    TimeGridEventRenderer.prototype.computeDisplayEventEnd = function () {\n      return true;\n    }; // Renders the HTML for a single event segment's default rendering\n\n\n    TimeGridEventRenderer.prototype.renderSegHtml = function (seg, mirrorInfo) {\n      var eventRange = seg.eventRange;\n      var eventDef = eventRange.def;\n      var eventUi = eventRange.ui;\n      var allDay = eventDef.allDay;\n      var isDraggable = eventUi.startEditable;\n      var isResizableFromStart = seg.isStart && eventUi.durationEditable && this.context.options.eventResizableFromStart;\n      var isResizableFromEnd = seg.isEnd && eventUi.durationEditable;\n      var classes = this.getSegClasses(seg, isDraggable, isResizableFromStart || isResizableFromEnd, mirrorInfo);\n      var skinCss = core.cssToStr(this.getSkinCss(eventUi));\n      var timeText;\n      var fullTimeText; // more verbose time text. for the print stylesheet\n\n      var startTimeText; // just the start time text\n\n      classes.unshift('fc-time-grid-event'); // if the event appears to span more than one day...\n\n      if (core.isMultiDayRange(eventRange.range)) {\n        // Don't display time text on segments that run entirely through a day.\n        // That would appear as midnight-midnight and would look dumb.\n        // Otherwise, display the time text for the *segment's* times (like 6pm-midnight or midnight-10am)\n        if (seg.isStart || seg.isEnd) {\n          var unzonedStart = seg.start;\n          var unzonedEnd = seg.end;\n          timeText = this._getTimeText(unzonedStart, unzonedEnd, allDay); // TODO: give the timezones\n\n          fullTimeText = this._getTimeText(unzonedStart, unzonedEnd, allDay, this.fullTimeFormat);\n          startTimeText = this._getTimeText(unzonedStart, unzonedEnd, allDay, null, false); // displayEnd=false\n        }\n      } else {\n        // Display the normal time text for the *event's* times\n        timeText = this.getTimeText(eventRange);\n        fullTimeText = this.getTimeText(eventRange, this.fullTimeFormat);\n        startTimeText = this.getTimeText(eventRange, null, false); // displayEnd=false\n      }\n\n      return '<a class=\"' + classes.join(' ') + '\"' + (eventDef.url ? ' href=\"' + core.htmlEscape(eventDef.url) + '\"' : '') + (skinCss ? ' style=\"' + skinCss + '\"' : '') + '>' + '<div class=\"fc-content\">' + (timeText ? '<div class=\"fc-time\"' + ' data-start=\"' + core.htmlEscape(startTimeText) + '\"' + ' data-full=\"' + core.htmlEscape(fullTimeText) + '\"' + '>' + '<span>' + core.htmlEscape(timeText) + '</span>' + '</div>' : '') + (eventDef.title ? '<div class=\"fc-title\">' + core.htmlEscape(eventDef.title) + '</div>' : '') + '</div>' + (\n      /* TODO: write CSS for this\n      (isResizableFromStart ?\n        '<div class=\"fc-resizer fc-start-resizer\"></div>' :\n        ''\n        ) +\n      */\n      isResizableFromEnd ? '<div class=\"fc-resizer fc-end-resizer\"></div>' : '') + '</a>';\n    }; // Given an array of segments that are all in the same column, sets the backwardCoord and forwardCoord on each.\n    // Assumed the segs are already ordered.\n    // NOTE: Also reorders the given array by date!\n\n\n    TimeGridEventRenderer.prototype.computeSegHorizontals = function (segs) {\n      var levels;\n      var level0;\n      var i;\n      levels = buildSlotSegLevels(segs);\n      computeForwardSlotSegs(levels);\n\n      if (level0 = levels[0]) {\n        for (i = 0; i < level0.length; i++) {\n          computeSlotSegPressures(level0[i]);\n        }\n\n        for (i = 0; i < level0.length; i++) {\n          this.computeSegForwardBack(level0[i], 0, 0);\n        }\n      }\n    }; // Calculate seg.forwardCoord and seg.backwardCoord for the segment, where both values range\n    // from 0 to 1. If the calendar is left-to-right, the seg.backwardCoord maps to \"left\" and\n    // seg.forwardCoord maps to \"right\" (via percentage). Vice-versa if the calendar is right-to-left.\n    //\n    // The segment might be part of a \"series\", which means consecutive segments with the same pressure\n    // who's width is unknown until an edge has been hit. `seriesBackwardPressure` is the number of\n    // segments behind this one in the current series, and `seriesBackwardCoord` is the starting\n    // coordinate of the first segment in the series.\n\n\n    TimeGridEventRenderer.prototype.computeSegForwardBack = function (seg, seriesBackwardPressure, seriesBackwardCoord) {\n      var forwardSegs = seg.forwardSegs;\n      var i;\n\n      if (seg.forwardCoord === undefined) {\n        // not already computed\n        if (!forwardSegs.length) {\n          // if there are no forward segments, this segment should butt up against the edge\n          seg.forwardCoord = 1;\n        } else {\n          // sort highest pressure first\n          this.sortForwardSegs(forwardSegs); // this segment's forwardCoord will be calculated from the backwardCoord of the\n          // highest-pressure forward segment.\n\n          this.computeSegForwardBack(forwardSegs[0], seriesBackwardPressure + 1, seriesBackwardCoord);\n          seg.forwardCoord = forwardSegs[0].backwardCoord;\n        } // calculate the backwardCoord from the forwardCoord. consider the series\n\n\n        seg.backwardCoord = seg.forwardCoord - (seg.forwardCoord - seriesBackwardCoord) / ( // available width for series\n        seriesBackwardPressure + 1); // # of segments in the series\n        // use this segment's coordinates to computed the coordinates of the less-pressurized\n        // forward segments\n\n        for (i = 0; i < forwardSegs.length; i++) {\n          this.computeSegForwardBack(forwardSegs[i], 0, seg.forwardCoord);\n        }\n      }\n    };\n\n    TimeGridEventRenderer.prototype.sortForwardSegs = function (forwardSegs) {\n      var objs = forwardSegs.map(buildTimeGridSegCompareObj);\n      var specs = [// put higher-pressure first\n      {\n        field: 'forwardPressure',\n        order: -1\n      }, // put segments that are closer to initial edge first (and favor ones with no coords yet)\n      {\n        field: 'backwardCoord',\n        order: 1\n      }].concat(this.context.view.eventOrderSpecs);\n      objs.sort(function (obj0, obj1) {\n        return core.compareByFieldSpecs(obj0, obj1, specs);\n      });\n      return objs.map(function (c) {\n        return c._seg;\n      });\n    }; // Given foreground event segments that have already had their position coordinates computed,\n    // assigns position-related CSS values to their elements.\n\n\n    TimeGridEventRenderer.prototype.assignSegCss = function (segs) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        core.applyStyle(seg.el, this.generateSegCss(seg));\n\n        if (seg.level > 0) {\n          seg.el.classList.add('fc-time-grid-event-inset');\n        } // if the event is short that the title will be cut off,\n        // attach a className that condenses the title into the time area.\n\n\n        if (seg.eventRange.def.title && seg.bottom - seg.top < 30) {\n          seg.el.classList.add('fc-short'); // TODO: \"condensed\" is a better name\n        }\n      }\n    }; // Generates an object with CSS properties/values that should be applied to an event segment element.\n    // Contains important positioning-related properties that should be applied to any event element, customized or not.\n\n\n    TimeGridEventRenderer.prototype.generateSegCss = function (seg) {\n      var shouldOverlap = this.context.options.slotEventOverlap;\n      var backwardCoord = seg.backwardCoord; // the left side if LTR. the right side if RTL. floating-point\n\n      var forwardCoord = seg.forwardCoord; // the right side if LTR. the left side if RTL. floating-point\n\n      var props = this.timeGrid.generateSegVerticalCss(seg); // get top/bottom first\n\n      var isRtl = this.timeGrid.isRtl;\n      var left; // amount of space from left edge, a fraction of the total width\n\n      var right; // amount of space from right edge, a fraction of the total width\n\n      if (shouldOverlap) {\n        // double the width, but don't go beyond the maximum forward coordinate (1.0)\n        forwardCoord = Math.min(1, backwardCoord + (forwardCoord - backwardCoord) * 2);\n      }\n\n      if (isRtl) {\n        left = 1 - forwardCoord;\n        right = backwardCoord;\n      } else {\n        left = backwardCoord;\n        right = 1 - forwardCoord;\n      }\n\n      props.zIndex = seg.level + 1; // convert from 0-base to 1-based\n\n      props.left = left * 100 + '%';\n      props.right = right * 100 + '%';\n\n      if (shouldOverlap && seg.forwardPressure) {\n        // add padding to the edge so that forward stacked events don't cover the resizer's icon\n        props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n      }\n\n      return props;\n    };\n\n    return TimeGridEventRenderer;\n  }(core.FgEventRenderer); // Builds an array of segments \"levels\". The first level will be the leftmost tier of segments if the calendar is\n  // left-to-right, or the rightmost if the calendar is right-to-left. Assumes the segments are already ordered by date.\n\n\n  function buildSlotSegLevels(segs) {\n    var levels = [];\n    var i;\n    var seg;\n    var j;\n\n    for (i = 0; i < segs.length; i++) {\n      seg = segs[i]; // go through all the levels and stop on the first level where there are no collisions\n\n      for (j = 0; j < levels.length; j++) {\n        if (!computeSlotSegCollisions(seg, levels[j]).length) {\n          break;\n        }\n      }\n\n      seg.level = j;\n      (levels[j] || (levels[j] = [])).push(seg);\n    }\n\n    return levels;\n  } // For every segment, figure out the other segments that are in subsequent\n  // levels that also occupy the same vertical space. Accumulate in seg.forwardSegs\n\n\n  function computeForwardSlotSegs(levels) {\n    var i;\n    var level;\n    var j;\n    var seg;\n    var k;\n\n    for (i = 0; i < levels.length; i++) {\n      level = levels[i];\n\n      for (j = 0; j < level.length; j++) {\n        seg = level[j];\n        seg.forwardSegs = [];\n\n        for (k = i + 1; k < levels.length; k++) {\n          computeSlotSegCollisions(seg, levels[k], seg.forwardSegs);\n        }\n      }\n    }\n  } // Figure out which path forward (via seg.forwardSegs) results in the longest path until\n  // the furthest edge is reached. The number of segments in this path will be seg.forwardPressure\n\n\n  function computeSlotSegPressures(seg) {\n    var forwardSegs = seg.forwardSegs;\n    var forwardPressure = 0;\n    var i;\n    var forwardSeg;\n\n    if (seg.forwardPressure === undefined) {\n      // not already computed\n      for (i = 0; i < forwardSegs.length; i++) {\n        forwardSeg = forwardSegs[i]; // figure out the child's maximum forward path\n\n        computeSlotSegPressures(forwardSeg); // either use the existing maximum, or use the child's forward pressure\n        // plus one (for the forwardSeg itself)\n\n        forwardPressure = Math.max(forwardPressure, 1 + forwardSeg.forwardPressure);\n      }\n\n      seg.forwardPressure = forwardPressure;\n    }\n  } // Find all the segments in `otherSegs` that vertically collide with `seg`.\n  // Append into an optionally-supplied `results` array and return.\n\n\n  function computeSlotSegCollisions(seg, otherSegs, results) {\n    if (results === void 0) {\n      results = [];\n    }\n\n    for (var i = 0; i < otherSegs.length; i++) {\n      if (isSlotSegCollision(seg, otherSegs[i])) {\n        results.push(otherSegs[i]);\n      }\n    }\n\n    return results;\n  } // Do these segments occupy the same vertical space?\n\n\n  function isSlotSegCollision(seg1, seg2) {\n    return seg1.bottom > seg2.top && seg1.top < seg2.bottom;\n  }\n\n  function buildTimeGridSegCompareObj(seg) {\n    var obj = core.buildSegCompareObj(seg);\n    obj.forwardPressure = seg.forwardPressure;\n    obj.backwardCoord = seg.backwardCoord;\n    return obj;\n  }\n\n  var TimeGridMirrorRenderer =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridMirrorRenderer, _super);\n\n    function TimeGridMirrorRenderer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    TimeGridMirrorRenderer.prototype.attachSegs = function (segs, mirrorInfo) {\n      this.segsByCol = this.timeGrid.groupSegsByCol(segs);\n      this.timeGrid.attachSegsByCol(this.segsByCol, this.timeGrid.mirrorContainerEls);\n      this.sourceSeg = mirrorInfo.sourceSeg;\n    };\n\n    TimeGridMirrorRenderer.prototype.generateSegCss = function (seg) {\n      var props = _super.prototype.generateSegCss.call(this, seg);\n\n      var sourceSeg = this.sourceSeg;\n\n      if (sourceSeg && sourceSeg.col === seg.col) {\n        var sourceSegProps = _super.prototype.generateSegCss.call(this, sourceSeg);\n\n        props.left = sourceSegProps.left;\n        props.right = sourceSegProps.right;\n        props.marginLeft = sourceSegProps.marginLeft;\n        props.marginRight = sourceSegProps.marginRight;\n      }\n\n      return props;\n    };\n\n    return TimeGridMirrorRenderer;\n  }(TimeGridEventRenderer);\n\n  var TimeGridFillRenderer =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridFillRenderer, _super);\n\n    function TimeGridFillRenderer(timeGrid) {\n      var _this = _super.call(this, timeGrid.context) || this;\n\n      _this.timeGrid = timeGrid;\n      return _this;\n    }\n\n    TimeGridFillRenderer.prototype.attachSegs = function (type, segs) {\n      var timeGrid = this.timeGrid;\n      var containerEls; // TODO: more efficient lookup\n\n      if (type === 'bgEvent') {\n        containerEls = timeGrid.bgContainerEls;\n      } else if (type === 'businessHours') {\n        containerEls = timeGrid.businessContainerEls;\n      } else if (type === 'highlight') {\n        containerEls = timeGrid.highlightContainerEls;\n      }\n\n      timeGrid.attachSegsByCol(timeGrid.groupSegsByCol(segs), containerEls);\n      return segs.map(function (seg) {\n        return seg.el;\n      });\n    };\n\n    TimeGridFillRenderer.prototype.computeSegSizes = function (segs) {\n      this.timeGrid.computeSegVerticals(segs);\n    };\n\n    TimeGridFillRenderer.prototype.assignSegSizes = function (segs) {\n      this.timeGrid.assignSegVerticals(segs);\n    };\n\n    return TimeGridFillRenderer;\n  }(core.FillRenderer);\n  /* A component that renders one or more columns of vertical time slots\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // potential nice values for the slot-duration and interval-duration\n  // from largest to smallest\n\n\n  var AGENDA_STOCK_SUB_DURATIONS = [{\n    hours: 1\n  }, {\n    minutes: 30\n  }, {\n    minutes: 15\n  }, {\n    seconds: 30\n  }, {\n    seconds: 15\n  }];\n\n  var TimeGrid =\n  /** @class */\n  function (_super) {\n    __extends(TimeGrid, _super);\n\n    function TimeGrid(context, el, renderProps) {\n      var _this = _super.call(this, context, el) || this;\n\n      _this.isSlatSizesDirty = false;\n      _this.isColSizesDirty = false;\n      _this.renderSlats = core.memoizeRendering(_this._renderSlats);\n      var eventRenderer = _this.eventRenderer = new TimeGridEventRenderer(_this);\n      var fillRenderer = _this.fillRenderer = new TimeGridFillRenderer(_this);\n      _this.mirrorRenderer = new TimeGridMirrorRenderer(_this);\n      var renderColumns = _this.renderColumns = core.memoizeRendering(_this._renderColumns, _this._unrenderColumns);\n      _this.renderBusinessHours = core.memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'businessHours'), fillRenderer.unrender.bind(fillRenderer, 'businessHours'), [renderColumns]);\n      _this.renderDateSelection = core.memoizeRendering(_this._renderDateSelection, _this._unrenderDateSelection, [renderColumns]);\n      _this.renderFgEvents = core.memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [renderColumns]);\n      _this.renderBgEvents = core.memoizeRendering(fillRenderer.renderSegs.bind(fillRenderer, 'bgEvent'), fillRenderer.unrender.bind(fillRenderer, 'bgEvent'), [renderColumns]);\n      _this.renderEventSelection = core.memoizeRendering(eventRenderer.selectByInstanceId.bind(eventRenderer), eventRenderer.unselectByInstanceId.bind(eventRenderer), [_this.renderFgEvents]);\n      _this.renderEventDrag = core.memoizeRendering(_this._renderEventDrag, _this._unrenderEventDrag, [renderColumns]);\n      _this.renderEventResize = core.memoizeRendering(_this._renderEventResize, _this._unrenderEventResize, [renderColumns]);\n\n      _this.processOptions();\n\n      el.innerHTML = '<div class=\"fc-bg\"></div>' + '<div class=\"fc-slats\"></div>' + '<hr class=\"fc-divider ' + _this.theme.getClass('widgetHeader') + '\" style=\"display:none\" />';\n      _this.rootBgContainerEl = el.querySelector('.fc-bg');\n      _this.slatContainerEl = el.querySelector('.fc-slats');\n      _this.bottomRuleEl = el.querySelector('.fc-divider');\n      _this.renderProps = renderProps;\n      return _this;\n    }\n    /* Options\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Parses various options into properties of this object\n\n\n    TimeGrid.prototype.processOptions = function () {\n      var slotDuration = this.opt('slotDuration');\n      var snapDuration = this.opt('snapDuration');\n      var snapsPerSlot;\n      var input;\n      slotDuration = core.createDuration(slotDuration);\n      snapDuration = snapDuration ? core.createDuration(snapDuration) : slotDuration;\n      snapsPerSlot = core.wholeDivideDurations(slotDuration, snapDuration);\n\n      if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1; // TODO: say warning?\n      }\n\n      this.slotDuration = slotDuration;\n      this.snapDuration = snapDuration;\n      this.snapsPerSlot = snapsPerSlot; // might be an array value (for TimelineView).\n      // if so, getting the most granular entry (the last one probably).\n\n      input = this.opt('slotLabelFormat');\n\n      if (Array.isArray(input)) {\n        input = input[input.length - 1];\n      }\n\n      this.labelFormat = core.createFormatter(input || {\n        hour: 'numeric',\n        minute: '2-digit',\n        omitZeroMinute: true,\n        meridiem: 'short'\n      });\n      input = this.opt('slotLabelInterval');\n      this.labelInterval = input ? core.createDuration(input) : this.computeLabelInterval(slotDuration);\n    }; // Computes an automatic value for slotLabelInterval\n\n\n    TimeGrid.prototype.computeLabelInterval = function (slotDuration) {\n      var i;\n      var labelInterval;\n      var slotsPerLabel; // find the smallest stock label interval that results in more than one slots-per-label\n\n      for (i = AGENDA_STOCK_SUB_DURATIONS.length - 1; i >= 0; i--) {\n        labelInterval = core.createDuration(AGENDA_STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = core.wholeDivideDurations(labelInterval, slotDuration);\n\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n          return labelInterval;\n        }\n      }\n\n      return slotDuration; // fall back\n    };\n    /* Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype.render = function (props) {\n      var cells = props.cells;\n      this.colCnt = cells.length;\n      this.renderSlats(props.dateProfile);\n      this.renderColumns(props.cells, props.dateProfile);\n      this.renderBusinessHours(props.businessHourSegs);\n      this.renderDateSelection(props.dateSelectionSegs);\n      this.renderFgEvents(props.fgEventSegs);\n      this.renderBgEvents(props.bgEventSegs);\n      this.renderEventSelection(props.eventSelection);\n      this.renderEventDrag(props.eventDrag);\n      this.renderEventResize(props.eventResize);\n    };\n\n    TimeGrid.prototype.destroy = function () {\n      _super.prototype.destroy.call(this); // should unrender everything else too\n\n\n      this.renderSlats.unrender();\n      this.renderColumns.unrender();\n    };\n\n    TimeGrid.prototype.updateSize = function (isResize) {\n      var _a = this,\n          fillRenderer = _a.fillRenderer,\n          eventRenderer = _a.eventRenderer,\n          mirrorRenderer = _a.mirrorRenderer;\n\n      if (isResize || this.isSlatSizesDirty) {\n        this.buildSlatPositions();\n        this.isSlatSizesDirty = false;\n      }\n\n      if (isResize || this.isColSizesDirty) {\n        this.buildColPositions();\n        this.isColSizesDirty = false;\n      }\n\n      fillRenderer.computeSizes(isResize);\n      eventRenderer.computeSizes(isResize);\n      mirrorRenderer.computeSizes(isResize);\n      fillRenderer.assignSizes(isResize);\n      eventRenderer.assignSizes(isResize);\n      mirrorRenderer.assignSizes(isResize);\n    };\n\n    TimeGrid.prototype._renderSlats = function (dateProfile) {\n      var theme = this.theme;\n      this.slatContainerEl.innerHTML = '<table class=\"' + theme.getClass('tableGrid') + '\">' + this.renderSlatRowHtml(dateProfile) + '</table>';\n      this.slatEls = core.findElements(this.slatContainerEl, 'tr');\n      this.slatPositions = new core.PositionCache(this.el, this.slatEls, false, true // vertical\n      );\n      this.isSlatSizesDirty = true;\n    }; // Generates the HTML for the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n\n\n    TimeGrid.prototype.renderSlatRowHtml = function (dateProfile) {\n      var _a = this,\n          dateEnv = _a.dateEnv,\n          theme = _a.theme,\n          isRtl = _a.isRtl;\n\n      var html = '';\n      var dayStart = core.startOfDay(dateProfile.renderRange.start);\n      var slotTime = dateProfile.minTime;\n      var slotIterator = core.createDuration(0);\n      var slotDate; // will be on the view's first day, but we only care about its time\n\n      var isLabeled;\n      var axisHtml; // Calculate the time for each slot\n\n      while (core.asRoughMs(slotTime) < core.asRoughMs(dateProfile.maxTime)) {\n        slotDate = dateEnv.add(dayStart, slotTime);\n        isLabeled = core.wholeDivideDurations(slotIterator, this.labelInterval) !== null;\n        axisHtml = '<td class=\"fc-axis fc-time ' + theme.getClass('widgetContent') + '\">' + (isLabeled ? '<span>' + // for matchCellWidths\n        core.htmlEscape(dateEnv.format(slotDate, this.labelFormat)) + '</span>' : '') + '</td>';\n        html += '<tr data-time=\"' + core.formatIsoTimeString(slotDate) + '\"' + (isLabeled ? '' : ' class=\"fc-minor\"') + '>' + (!isRtl ? axisHtml : '') + '<td class=\"' + theme.getClass('widgetContent') + '\"></td>' + (isRtl ? axisHtml : '') + '</tr>';\n        slotTime = core.addDurations(slotTime, this.slotDuration);\n        slotIterator = core.addDurations(slotIterator, this.slotDuration);\n      }\n\n      return html;\n    };\n\n    TimeGrid.prototype._renderColumns = function (cells, dateProfile) {\n      var theme = this.theme;\n      var bgRow = new daygrid.DayBgRow(this.context);\n      this.rootBgContainerEl.innerHTML = '<table class=\"' + theme.getClass('tableGrid') + '\">' + bgRow.renderHtml({\n        cells: cells,\n        dateProfile: dateProfile,\n        renderIntroHtml: this.renderProps.renderBgIntroHtml\n      }) + '</table>';\n      this.colEls = core.findElements(this.el, '.fc-day, .fc-disabled-day');\n\n      if (this.isRtl) {\n        this.colEls.reverse();\n      }\n\n      this.colPositions = new core.PositionCache(this.el, this.colEls, true, // horizontal\n      false);\n      this.renderContentSkeleton();\n      this.isColSizesDirty = true;\n    };\n\n    TimeGrid.prototype._unrenderColumns = function () {\n      this.unrenderContentSkeleton();\n    };\n    /* Content Skeleton\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Renders the DOM that the view's content will live in\n\n\n    TimeGrid.prototype.renderContentSkeleton = function () {\n      var parts = [];\n      var skeletonEl;\n      parts.push(this.renderProps.renderIntroHtml());\n\n      for (var i = 0; i < this.colCnt; i++) {\n        parts.push('<td>' + '<div class=\"fc-content-col\">' + '<div class=\"fc-event-container fc-mirror-container\"></div>' + '<div class=\"fc-event-container\"></div>' + '<div class=\"fc-highlight-container\"></div>' + '<div class=\"fc-bgevent-container\"></div>' + '<div class=\"fc-business-container\"></div>' + '</div>' + '</td>');\n      }\n\n      if (this.isRtl) {\n        parts.reverse();\n      }\n\n      skeletonEl = this.contentSkeletonEl = core.htmlToElement('<div class=\"fc-content-skeleton\">' + '<table>' + '<tr>' + parts.join('') + '</tr>' + '</table>' + '</div>');\n      this.colContainerEls = core.findElements(skeletonEl, '.fc-content-col');\n      this.mirrorContainerEls = core.findElements(skeletonEl, '.fc-mirror-container');\n      this.fgContainerEls = core.findElements(skeletonEl, '.fc-event-container:not(.fc-mirror-container)');\n      this.bgContainerEls = core.findElements(skeletonEl, '.fc-bgevent-container');\n      this.highlightContainerEls = core.findElements(skeletonEl, '.fc-highlight-container');\n      this.businessContainerEls = core.findElements(skeletonEl, '.fc-business-container');\n\n      if (this.isRtl) {\n        this.colContainerEls.reverse();\n        this.mirrorContainerEls.reverse();\n        this.fgContainerEls.reverse();\n        this.bgContainerEls.reverse();\n        this.highlightContainerEls.reverse();\n        this.businessContainerEls.reverse();\n      }\n\n      this.el.appendChild(skeletonEl);\n    };\n\n    TimeGrid.prototype.unrenderContentSkeleton = function () {\n      core.removeElement(this.contentSkeletonEl);\n    }; // Given a flat array of segments, return an array of sub-arrays, grouped by each segment's col\n\n\n    TimeGrid.prototype.groupSegsByCol = function (segs) {\n      var segsByCol = [];\n      var i;\n\n      for (i = 0; i < this.colCnt; i++) {\n        segsByCol.push([]);\n      }\n\n      for (i = 0; i < segs.length; i++) {\n        segsByCol[segs[i].col].push(segs[i]);\n      }\n\n      return segsByCol;\n    }; // Given segments grouped by column, insert the segments' elements into a parallel array of container\n    // elements, each living within a column.\n\n\n    TimeGrid.prototype.attachSegsByCol = function (segsByCol, containerEls) {\n      var col;\n      var segs;\n      var i;\n\n      for (col = 0; col < this.colCnt; col++) {\n        // iterate each column grouping\n        segs = segsByCol[col];\n\n        for (i = 0; i < segs.length; i++) {\n          containerEls[col].appendChild(segs[i].el);\n        }\n      }\n    };\n    /* Now Indicator\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype.getNowIndicatorUnit = function () {\n      return 'minute'; // will refresh on the minute\n    };\n\n    TimeGrid.prototype.renderNowIndicator = function (segs, date) {\n      // HACK: if date columns not ready for some reason (scheduler)\n      if (!this.colContainerEls) {\n        return;\n      }\n\n      var top = this.computeDateTop(date);\n      var nodes = [];\n      var i; // render lines within the columns\n\n      for (i = 0; i < segs.length; i++) {\n        var lineEl = core.createElement('div', {\n          className: 'fc-now-indicator fc-now-indicator-line'\n        });\n        lineEl.style.top = top + 'px';\n        this.colContainerEls[segs[i].col].appendChild(lineEl);\n        nodes.push(lineEl);\n      } // render an arrow over the axis\n\n\n      if (segs.length > 0) {\n        // is the current time in view?\n        var arrowEl = core.createElement('div', {\n          className: 'fc-now-indicator fc-now-indicator-arrow'\n        });\n        arrowEl.style.top = top + 'px';\n        this.contentSkeletonEl.appendChild(arrowEl);\n        nodes.push(arrowEl);\n      }\n\n      this.nowIndicatorEls = nodes;\n    };\n\n    TimeGrid.prototype.unrenderNowIndicator = function () {\n      if (this.nowIndicatorEls) {\n        this.nowIndicatorEls.forEach(core.removeElement);\n        this.nowIndicatorEls = null;\n      }\n    };\n    /* Coordinates\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype.getTotalSlatHeight = function () {\n      return this.slatContainerEl.offsetHeight;\n    }; // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n\n\n    TimeGrid.prototype.computeDateTop = function (when, startOfDayDate) {\n      if (!startOfDayDate) {\n        startOfDayDate = core.startOfDay(when);\n      }\n\n      return this.computeTimeTop(when.valueOf() - startOfDayDate.valueOf());\n    }; // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n\n\n    TimeGrid.prototype.computeTimeTop = function (timeMs) {\n      var len = this.slatEls.length;\n      var dateProfile = this.props.dateProfile;\n      var slatCoverage = (timeMs - core.asRoughMs(dateProfile.minTime)) / core.asRoughMs(this.slotDuration); // floating-point value of # of slots covered\n\n      var slatIndex;\n      var slatRemainder; // compute a floating-point number for how many slats should be progressed through.\n      // from 0 to number of slats (inclusive)\n      // constrained because minTime/maxTime might be customized.\n\n      slatCoverage = Math.max(0, slatCoverage);\n      slatCoverage = Math.min(len, slatCoverage); // an integer index of the furthest whole slat\n      // from 0 to number slats (*exclusive*, so len-1)\n\n      slatIndex = Math.floor(slatCoverage);\n      slatIndex = Math.min(slatIndex, len - 1); // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n      // could be 1.0 if slatCoverage is covering *all* the slots\n\n      slatRemainder = slatCoverage - slatIndex;\n      return this.slatPositions.tops[slatIndex] + this.slatPositions.getHeight(slatIndex) * slatRemainder;\n    }; // For each segment in an array, computes and assigns its top and bottom properties\n\n\n    TimeGrid.prototype.computeSegVerticals = function (segs) {\n      var eventMinHeight = this.opt('timeGridEventMinHeight');\n      var i;\n      var seg;\n      var dayDate;\n\n      for (i = 0; i < segs.length; i++) {\n        seg = segs[i];\n        dayDate = this.props.cells[seg.col].date;\n        seg.top = this.computeDateTop(seg.start, dayDate);\n        seg.bottom = Math.max(seg.top + eventMinHeight, this.computeDateTop(seg.end, dayDate));\n      }\n    }; // Given segments that already have their top/bottom properties computed, applies those values to\n    // the segments' elements.\n\n\n    TimeGrid.prototype.assignSegVerticals = function (segs) {\n      var i;\n      var seg;\n\n      for (i = 0; i < segs.length; i++) {\n        seg = segs[i];\n        core.applyStyle(seg.el, this.generateSegVerticalCss(seg));\n      }\n    }; // Generates an object with CSS properties for the top/bottom coordinates of a segment element\n\n\n    TimeGrid.prototype.generateSegVerticalCss = function (seg) {\n      return {\n        top: seg.top,\n        bottom: -seg.bottom // flipped because needs to be space beyond bottom edge of event container\n\n      };\n    };\n    /* Sizing\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype.buildColPositions = function () {\n      this.colPositions.build();\n    };\n\n    TimeGrid.prototype.buildSlatPositions = function () {\n      this.slatPositions.build();\n    };\n    /* Hit System\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype.positionToHit = function (positionLeft, positionTop) {\n      var _a = this,\n          dateEnv = _a.dateEnv,\n          snapsPerSlot = _a.snapsPerSlot,\n          slatPositions = _a.slatPositions,\n          colPositions = _a.colPositions;\n\n      var colIndex = colPositions.leftToIndex(positionLeft);\n      var slatIndex = slatPositions.topToIndex(positionTop);\n\n      if (colIndex != null && slatIndex != null) {\n        var slatTop = slatPositions.tops[slatIndex];\n        var slatHeight = slatPositions.getHeight(slatIndex);\n        var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n\n        var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n\n        var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n        var dayDate = this.props.cells[colIndex].date;\n        var time = core.addDurations(this.props.dateProfile.minTime, core.multiplyDuration(this.snapDuration, snapIndex));\n        var start = dateEnv.add(dayDate, time);\n        var end = dateEnv.add(start, this.snapDuration);\n        return {\n          col: colIndex,\n          dateSpan: {\n            range: {\n              start: start,\n              end: end\n            },\n            allDay: false\n          },\n          dayEl: this.colEls[colIndex],\n          relativeRect: {\n            left: colPositions.lefts[colIndex],\n            right: colPositions.rights[colIndex],\n            top: slatTop,\n            bottom: slatTop + slatHeight\n          }\n        };\n      }\n    };\n    /* Event Drag Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype._renderEventDrag = function (state) {\n      if (state) {\n        this.eventRenderer.hideByHash(state.affectedInstances);\n\n        if (state.isEvent) {\n          this.mirrorRenderer.renderSegs(state.segs, {\n            isDragging: true,\n            sourceSeg: state.sourceSeg\n          });\n        } else {\n          this.fillRenderer.renderSegs('highlight', state.segs);\n        }\n      }\n    };\n\n    TimeGrid.prototype._unrenderEventDrag = function (state) {\n      if (state) {\n        this.eventRenderer.showByHash(state.affectedInstances);\n        this.mirrorRenderer.unrender(state.segs, {\n          isDragging: true,\n          sourceSeg: state.sourceSeg\n        });\n        this.fillRenderer.unrender('highlight');\n      }\n    };\n    /* Event Resize Visualization\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGrid.prototype._renderEventResize = function (state) {\n      if (state) {\n        this.eventRenderer.hideByHash(state.affectedInstances);\n        this.mirrorRenderer.renderSegs(state.segs, {\n          isResizing: true,\n          sourceSeg: state.sourceSeg\n        });\n      }\n    };\n\n    TimeGrid.prototype._unrenderEventResize = function (state) {\n      if (state) {\n        this.eventRenderer.showByHash(state.affectedInstances);\n        this.mirrorRenderer.unrender(state.segs, {\n          isResizing: true,\n          sourceSeg: state.sourceSeg\n        });\n      }\n    };\n    /* Selection\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Renders a visual indication of a selection. Overrides the default, which was to simply render a highlight.\n\n\n    TimeGrid.prototype._renderDateSelection = function (segs) {\n      if (segs) {\n        if (this.opt('selectMirror')) {\n          this.mirrorRenderer.renderSegs(segs, {\n            isSelecting: true\n          });\n        } else {\n          this.fillRenderer.renderSegs('highlight', segs);\n        }\n      }\n    };\n\n    TimeGrid.prototype._unrenderDateSelection = function (segs) {\n      this.mirrorRenderer.unrender(segs, {\n        isSelecting: true\n      });\n      this.fillRenderer.unrender('highlight');\n    };\n\n    return TimeGrid;\n  }(core.DateComponent);\n\n  var AllDaySplitter =\n  /** @class */\n  function (_super) {\n    __extends(AllDaySplitter, _super);\n\n    function AllDaySplitter() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    AllDaySplitter.prototype.getKeyInfo = function () {\n      return {\n        allDay: {},\n        timed: {}\n      };\n    };\n\n    AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n      if (dateSpan.allDay) {\n        return ['allDay'];\n      } else {\n        return ['timed'];\n      }\n    };\n\n    AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {\n      if (!eventDef.allDay) {\n        return ['timed'];\n      } else if (core.hasBgRendering(eventDef)) {\n        return ['timed', 'allDay'];\n      } else {\n        return ['allDay'];\n      }\n    };\n\n    return AllDaySplitter;\n  }(core.Splitter);\n\n  var TIMEGRID_ALL_DAY_EVENT_LIMIT = 5;\n  var WEEK_HEADER_FORMAT = core.createFormatter({\n    week: 'short'\n  });\n  /* An abstract class for all timegrid-related views. Displays one more columns with time slots running vertically.\n  ----------------------------------------------------------------------------------------------------------------------*/\n  // Is a manager for the TimeGrid subcomponent and possibly the DayGrid subcomponent (if allDaySlot is on).\n  // Responsible for managing width/height.\n\n  var TimeGridView =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridView, _super);\n\n    function TimeGridView(context, viewSpec, dateProfileGenerator, parentEl) {\n      var _this = _super.call(this, context, viewSpec, dateProfileGenerator, parentEl) || this;\n\n      _this.splitter = new AllDaySplitter();\n      /* Header Render Methods\n      ------------------------------------------------------------------------------------------------------------------*/\n      // Generates the HTML that will go before the day-of week header cells\n\n      _this.renderHeadIntroHtml = function () {\n        var _a = _this,\n            theme = _a.theme,\n            dateEnv = _a.dateEnv;\n        var range = _this.props.dateProfile.renderRange;\n        var dayCnt = core.diffDays(range.start, range.end);\n        var weekText;\n\n        if (_this.opt('weekNumbers')) {\n          weekText = dateEnv.format(range.start, WEEK_HEADER_FORMAT);\n          return '' + '<th class=\"fc-axis fc-week-number ' + theme.getClass('widgetHeader') + '\" ' + _this.axisStyleAttr() + '>' + core.buildGotoAnchorHtml( // aside from link, important for matchCellWidths\n          _this, {\n            date: range.start,\n            type: 'week',\n            forceOff: dayCnt > 1\n          }, core.htmlEscape(weekText) // inner HTML\n          ) + '</th>';\n        } else {\n          return '<th class=\"fc-axis ' + theme.getClass('widgetHeader') + '\" ' + _this.axisStyleAttr() + '></th>';\n        }\n      };\n      /* Time Grid Render Methods\n      ------------------------------------------------------------------------------------------------------------------*/\n      // Generates the HTML that goes before the bg of the TimeGrid slot area. Long vertical column.\n\n\n      _this.renderTimeGridBgIntroHtml = function () {\n        var theme = _this.theme;\n        return '<td class=\"fc-axis ' + theme.getClass('widgetContent') + '\" ' + _this.axisStyleAttr() + '></td>';\n      }; // Generates the HTML that goes before all other types of cells.\n      // Affects content-skeleton, mirror-skeleton, highlight-skeleton for both the time-grid and day-grid.\n\n\n      _this.renderTimeGridIntroHtml = function () {\n        return '<td class=\"fc-axis\" ' + _this.axisStyleAttr() + '></td>';\n      };\n      /* Day Grid Render Methods\n      ------------------------------------------------------------------------------------------------------------------*/\n      // Generates the HTML that goes before the all-day cells\n\n\n      _this.renderDayGridBgIntroHtml = function () {\n        var theme = _this.theme;\n        return '' + '<td class=\"fc-axis ' + theme.getClass('widgetContent') + '\" ' + _this.axisStyleAttr() + '>' + '<span>' + // needed for matchCellWidths\n        core.getAllDayHtml(_this) + '</span>' + '</td>';\n      }; // Generates the HTML that goes before all other types of cells.\n      // Affects content-skeleton, mirror-skeleton, highlight-skeleton for both the time-grid and day-grid.\n\n\n      _this.renderDayGridIntroHtml = function () {\n        return '<td class=\"fc-axis\" ' + _this.axisStyleAttr() + '></td>';\n      };\n\n      _this.el.classList.add('fc-timeGrid-view');\n\n      _this.el.innerHTML = _this.renderSkeletonHtml();\n      _this.scroller = new core.ScrollComponent('hidden', // overflow x\n      'auto' // overflow y\n      );\n      var timeGridWrapEl = _this.scroller.el;\n\n      _this.el.querySelector('.fc-body > tr > td').appendChild(timeGridWrapEl);\n\n      timeGridWrapEl.classList.add('fc-time-grid-container');\n      var timeGridEl = core.createElement('div', {\n        className: 'fc-time-grid'\n      });\n      timeGridWrapEl.appendChild(timeGridEl);\n      _this.timeGrid = new TimeGrid(_this.context, timeGridEl, {\n        renderBgIntroHtml: _this.renderTimeGridBgIntroHtml,\n        renderIntroHtml: _this.renderTimeGridIntroHtml\n      });\n\n      if (_this.opt('allDaySlot')) {\n        // should we display the \"all-day\" area?\n        _this.dayGrid = new daygrid.DayGrid( // the all-day subcomponent of this view\n        _this.context, _this.el.querySelector('.fc-day-grid'), {\n          renderNumberIntroHtml: _this.renderDayGridIntroHtml,\n          renderBgIntroHtml: _this.renderDayGridBgIntroHtml,\n          renderIntroHtml: _this.renderDayGridIntroHtml,\n          colWeekNumbersVisible: false,\n          cellWeekNumbersVisible: false\n        }); // have the day-grid extend it's coordinate area over the <hr> dividing the two grids\n\n        _this.dayGrid.bottomCoordPadding = _this.el.querySelector('.fc-divider').offsetHeight;\n      }\n\n      return _this;\n    }\n\n    TimeGridView.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.timeGrid.destroy();\n\n      if (this.dayGrid) {\n        this.dayGrid.destroy();\n      }\n\n      this.scroller.destroy();\n    };\n    /* Rendering\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Builds the HTML skeleton for the view.\n    // The day-grid and time-grid components will render inside containers defined by this HTML.\n\n\n    TimeGridView.prototype.renderSkeletonHtml = function () {\n      var theme = this.theme;\n      return '' + '<table class=\"' + theme.getClass('tableGrid') + '\">' + (this.opt('columnHeader') ? '<thead class=\"fc-head\">' + '<tr>' + '<td class=\"fc-head-container ' + theme.getClass('widgetHeader') + '\">&nbsp;</td>' + '</tr>' + '</thead>' : '') + '<tbody class=\"fc-body\">' + '<tr>' + '<td class=\"' + theme.getClass('widgetContent') + '\">' + (this.opt('allDaySlot') ? '<div class=\"fc-day-grid\"></div>' + '<hr class=\"fc-divider ' + theme.getClass('widgetHeader') + '\" />' : '') + '</td>' + '</tr>' + '</tbody>' + '</table>';\n    };\n    /* Now Indicator\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGridView.prototype.getNowIndicatorUnit = function () {\n      return this.timeGrid.getNowIndicatorUnit();\n    }; // subclasses should implement\n    // renderNowIndicator(date: DateMarker) {\n    // }\n\n\n    TimeGridView.prototype.unrenderNowIndicator = function () {\n      this.timeGrid.unrenderNowIndicator();\n    };\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n\n\n    TimeGridView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n      _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto); // will call updateBaseSize. important that executes first\n\n\n      this.timeGrid.updateSize(isResize);\n\n      if (this.dayGrid) {\n        this.dayGrid.updateSize(isResize);\n      }\n    }; // Adjusts the vertical dimensions of the view to the specified values\n\n\n    TimeGridView.prototype.updateBaseSize = function (isResize, viewHeight, isAuto) {\n      var _this = this;\n\n      var eventLimit;\n      var scrollerHeight;\n      var scrollbarWidths; // make all axis cells line up\n\n      this.axisWidth = core.matchCellWidths(core.findElements(this.el, '.fc-axis')); // hack to give the view some height prior to timeGrid's columns being rendered\n      // TODO: separate setting height from scroller VS timeGrid.\n\n      if (!this.timeGrid.colEls) {\n        if (!isAuto) {\n          scrollerHeight = this.computeScrollerHeight(viewHeight);\n          this.scroller.setHeight(scrollerHeight);\n        }\n\n        return;\n      } // set of fake row elements that must compensate when scroller has scrollbars\n\n\n      var noScrollRowEls = core.findElements(this.el, '.fc-row').filter(function (node) {\n        return !_this.scroller.el.contains(node);\n      }); // reset all dimensions back to the original state\n\n      this.timeGrid.bottomRuleEl.style.display = 'none'; // will be shown later if this <hr> is necessary\n\n      this.scroller.clear(); // sets height to 'auto' and clears overflow\n\n      noScrollRowEls.forEach(core.uncompensateScroll); // limit number of events in the all-day area\n\n      if (this.dayGrid) {\n        this.dayGrid.removeSegPopover(); // kill the \"more\" popover if displayed\n\n        eventLimit = this.opt('eventLimit');\n\n        if (eventLimit && typeof eventLimit !== 'number') {\n          eventLimit = TIMEGRID_ALL_DAY_EVENT_LIMIT; // make sure \"auto\" goes to a real number\n        }\n\n        if (eventLimit) {\n          this.dayGrid.limitRows(eventLimit);\n        }\n      }\n\n      if (!isAuto) {\n        // should we force dimensions of the scroll container?\n        scrollerHeight = this.computeScrollerHeight(viewHeight);\n        this.scroller.setHeight(scrollerHeight);\n        scrollbarWidths = this.scroller.getScrollbarWidths();\n\n        if (scrollbarWidths.left || scrollbarWidths.right) {\n          // using scrollbars?\n          // make the all-day and header rows lines up\n          noScrollRowEls.forEach(function (rowEl) {\n            core.compensateScroll(rowEl, scrollbarWidths);\n          }); // the scrollbar compensation might have changed text flow, which might affect height, so recalculate\n          // and reapply the desired height to the scroller.\n\n          scrollerHeight = this.computeScrollerHeight(viewHeight);\n          this.scroller.setHeight(scrollerHeight);\n        } // guarantees the same scrollbar widths\n\n\n        this.scroller.lockOverflow(scrollbarWidths); // if there's any space below the slats, show the horizontal rule.\n        // this won't cause any new overflow, because lockOverflow already called.\n\n        if (this.timeGrid.getTotalSlatHeight() < scrollerHeight) {\n          this.timeGrid.bottomRuleEl.style.display = '';\n        }\n      }\n    }; // given a desired total height of the view, returns what the height of the scroller should be\n\n\n    TimeGridView.prototype.computeScrollerHeight = function (viewHeight) {\n      return viewHeight - core.subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    };\n    /* Scroll\n    ------------------------------------------------------------------------------------------------------------------*/\n    // Computes the initial pre-configured scroll state prior to allowing the user to change it\n\n\n    TimeGridView.prototype.computeInitialDateScroll = function () {\n      var scrollTime = core.createDuration(this.opt('scrollTime'));\n      var top = this.timeGrid.computeTimeTop(scrollTime.milliseconds); // zoom can give weird floating-point values. rather scroll a little bit further\n\n      top = Math.ceil(top);\n\n      if (top) {\n        top++; // to overcome top border that slots beyond the first have. looks better\n      }\n\n      return {\n        top: top\n      };\n    };\n\n    TimeGridView.prototype.queryDateScroll = function () {\n      return {\n        top: this.scroller.getScrollTop()\n      };\n    };\n\n    TimeGridView.prototype.applyDateScroll = function (scroll) {\n      if (scroll.top !== undefined) {\n        this.scroller.setScrollTop(scroll.top);\n      }\n    }; // Generates an HTML attribute string for setting the width of the axis, if it is known\n\n\n    TimeGridView.prototype.axisStyleAttr = function () {\n      if (this.axisWidth != null) {\n        return 'style=\"width:' + this.axisWidth + 'px\"';\n      }\n\n      return '';\n    };\n\n    return TimeGridView;\n  }(core.View);\n\n  TimeGridView.prototype.usesMinMaxTime = true; // indicates that minTime/maxTime affects rendering\n\n  var SimpleTimeGrid =\n  /** @class */\n  function (_super) {\n    __extends(SimpleTimeGrid, _super);\n\n    function SimpleTimeGrid(context, timeGrid) {\n      var _this = _super.call(this, context, timeGrid.el) || this;\n\n      _this.buildDayRanges = core.memoize(buildDayRanges);\n      _this.slicer = new TimeGridSlicer();\n      _this.timeGrid = timeGrid;\n      context.calendar.registerInteractiveComponent(_this, {\n        el: _this.timeGrid.el\n      });\n      return _this;\n    }\n\n    SimpleTimeGrid.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      this.calendar.unregisterInteractiveComponent(this);\n    };\n\n    SimpleTimeGrid.prototype.render = function (props) {\n      var dateProfile = props.dateProfile,\n          dayTable = props.dayTable;\n      var dayRanges = this.dayRanges = this.buildDayRanges(dayTable, dateProfile, this.dateEnv);\n      this.timeGrid.receiveProps(__assign({}, this.slicer.sliceProps(props, dateProfile, null, this.timeGrid, dayRanges), {\n        dateProfile: dateProfile,\n        cells: dayTable.cells[0]\n      }));\n    };\n\n    SimpleTimeGrid.prototype.renderNowIndicator = function (date) {\n      this.timeGrid.renderNowIndicator(this.slicer.sliceNowDate(date, this.timeGrid, this.dayRanges), date);\n    };\n\n    SimpleTimeGrid.prototype.queryHit = function (positionLeft, positionTop) {\n      var rawHit = this.timeGrid.positionToHit(positionLeft, positionTop);\n\n      if (rawHit) {\n        return {\n          component: this.timeGrid,\n          dateSpan: rawHit.dateSpan,\n          dayEl: rawHit.dayEl,\n          rect: {\n            left: rawHit.relativeRect.left,\n            right: rawHit.relativeRect.right,\n            top: rawHit.relativeRect.top,\n            bottom: rawHit.relativeRect.bottom\n          },\n          layer: 0\n        };\n      }\n    };\n\n    return SimpleTimeGrid;\n  }(core.DateComponent);\n\n  function buildDayRanges(dayTable, dateProfile, dateEnv) {\n    var ranges = [];\n\n    for (var _i = 0, _a = dayTable.headerDates; _i < _a.length; _i++) {\n      var date = _a[_i];\n      ranges.push({\n        start: dateEnv.add(date, dateProfile.minTime),\n        end: dateEnv.add(date, dateProfile.maxTime)\n      });\n    }\n\n    return ranges;\n  }\n\n  var TimeGridSlicer =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridSlicer, _super);\n\n    function TimeGridSlicer() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    TimeGridSlicer.prototype.sliceRange = function (range, dayRanges) {\n      var segs = [];\n\n      for (var col = 0; col < dayRanges.length; col++) {\n        var segRange = core.intersectRanges(range, dayRanges[col]);\n\n        if (segRange) {\n          segs.push({\n            start: segRange.start,\n            end: segRange.end,\n            isStart: segRange.start.valueOf() === range.start.valueOf(),\n            isEnd: segRange.end.valueOf() === range.end.valueOf(),\n            col: col\n          });\n        }\n      }\n\n      return segs;\n    };\n\n    return TimeGridSlicer;\n  }(core.Slicer);\n\n  var TimeGridView$1 =\n  /** @class */\n  function (_super) {\n    __extends(TimeGridView, _super);\n\n    function TimeGridView(_context, viewSpec, dateProfileGenerator, parentEl) {\n      var _this = _super.call(this, _context, viewSpec, dateProfileGenerator, parentEl) || this;\n\n      _this.buildDayTable = core.memoize(buildDayTable);\n\n      if (_this.opt('columnHeader')) {\n        _this.header = new core.DayHeader(_this.context, _this.el.querySelector('.fc-head-container'));\n      }\n\n      _this.simpleTimeGrid = new SimpleTimeGrid(_this.context, _this.timeGrid);\n\n      if (_this.dayGrid) {\n        _this.simpleDayGrid = new daygrid.SimpleDayGrid(_this.context, _this.dayGrid);\n      }\n\n      return _this;\n    }\n\n    TimeGridView.prototype.destroy = function () {\n      _super.prototype.destroy.call(this);\n\n      if (this.header) {\n        this.header.destroy();\n      }\n\n      this.simpleTimeGrid.destroy();\n\n      if (this.simpleDayGrid) {\n        this.simpleDayGrid.destroy();\n      }\n    };\n\n    TimeGridView.prototype.render = function (props) {\n      _super.prototype.render.call(this, props); // for flags for updateSize\n\n\n      var dateProfile = this.props.dateProfile;\n      var dayTable = this.buildDayTable(dateProfile, this.dateProfileGenerator);\n      var splitProps = this.splitter.splitProps(props);\n\n      if (this.header) {\n        this.header.receiveProps({\n          dateProfile: dateProfile,\n          dates: dayTable.headerDates,\n          datesRepDistinctDays: true,\n          renderIntroHtml: this.renderHeadIntroHtml\n        });\n      }\n\n      this.simpleTimeGrid.receiveProps(__assign({}, splitProps['timed'], {\n        dateProfile: dateProfile,\n        dayTable: dayTable\n      }));\n\n      if (this.simpleDayGrid) {\n        this.simpleDayGrid.receiveProps(__assign({}, splitProps['allDay'], {\n          dateProfile: dateProfile,\n          dayTable: dayTable,\n          nextDayThreshold: this.nextDayThreshold,\n          isRigid: false\n        }));\n      }\n    };\n\n    TimeGridView.prototype.renderNowIndicator = function (date) {\n      this.simpleTimeGrid.renderNowIndicator(date);\n    };\n\n    return TimeGridView;\n  }(TimeGridView);\n\n  function buildDayTable(dateProfile, dateProfileGenerator) {\n    var daySeries = new core.DaySeries(dateProfile.renderRange, dateProfileGenerator);\n    return new core.DayTable(daySeries, false);\n  }\n\n  var main = core.createPlugin({\n    defaultView: 'timeGridWeek',\n    views: {\n      timeGrid: {\n        class: TimeGridView$1,\n        allDaySlot: true,\n        slotDuration: '00:30:00',\n        slotEventOverlap: true // a bad name. confused with overlap/constraint system\n\n      },\n      timeGridDay: {\n        type: 'timeGrid',\n        duration: {\n          days: 1\n        }\n      },\n      timeGridWeek: {\n        type: 'timeGrid',\n        duration: {\n          weeks: 1\n        }\n      }\n    }\n  });\n  exports.TimeGridView = TimeGridView$1;\n  exports.AbstractTimeGridView = TimeGridView;\n  exports.buildDayTable = buildDayTable;\n  exports.buildDayRanges = buildDayRanges;\n  exports.TimeGridSlicer = TimeGridSlicer;\n  exports.default = main;\n  exports.TimeGrid = TimeGrid;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/timegrid/main.js?");

/***/ }),

/***/ "./node_modules/bulma/css/bulma.css":
/*!******************************************!*\
  !*** ./node_modules/bulma/css/bulma.css ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../mini-css-extract-plugin/dist/loader.js!../../css-loader/dist/cjs.js!../../sass-loader/lib/loader.js!./bulma.css */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/bulma/css/bulma.css\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./node_modules/bulma/css/bulma.css?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.4.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2019-04-10T19:48Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if ( true && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var document = window.document;\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var concat = arr.concat;\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n        val,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.4.0\",\n      // Define a local copy of jQuery\n  jQuery = function (selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  },\n      // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    eq: function (i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name]; // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name]; // Ensure proper type for the source value\n\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n\n            copyIsArray = false; // Never move original objects, clone them\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a global context\n    globalEval: function (code, options) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      });\n    },\n    each: function (obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // Support: Android <=4.0 only\n    trim: function (text) {\n      return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return concat.apply([], ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.4\n   * https://sizzlejs.com/\n   *\n   * Copyright JS Foundation and other contributors\n   * Released under the MIT license\n   * https://js.foundation/\n   *\n   * Date: 2019-04-08\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        nonnativeSelectorCache = createCache(),\n        sortOrder = function (a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        push_native = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function (list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n    identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rdescend = new RegExp(whitespace + \"|>\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rhtml = /HTML$/i,\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n        funescape = function (_, escaped, escapedWhitespace) {\n      var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n      // Support: Firefox<24\n      // Workaround erroneous numeric interpretation of +\"0x\"\n\n      return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n      String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n      String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function (ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function () {\n      setDocument();\n    },\n        inDisabledFieldset = addCombinator(function (elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          push_native.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n          setDocument(context);\n        }\n\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && ( // Support: IE 8 only\n          // Exclude object elements\n          nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\")) {\n            newSelector = selector;\n            newContext = context; // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // Thanks to Andrew Dupont for this technique.\n\n            if (nodeType === 1 && rdescend.test(selector)) {\n              // Capture the context ID, setting it first if necessary\n              if (nid = context.getAttribute(\"id\")) {\n                nid = nid.replace(rcssescape, fcssescape);\n              } else {\n                context.setAttribute(\"id\", nid = expando);\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = \"#\" + nid + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\"); // Expand context for sibling selectors\n\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n            }\n\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      var namespace = elem.namespaceURI,\n          docElem = (elem.ownerDocument || elem).documentElement; // Support: IE <=8\n      // Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n      // https://bugs.jquery.com/ticket/4833\n\n      return !rhtml.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n\n      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9-11, Edge\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\n      if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      }\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          }\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n\n\n        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      }\n\n      if (support.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      if ((context.ownerDocument || context) !== document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function (match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function (match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function (nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function (name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n          };\n        },\n        \"CHILD\": function (type, what, argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function (elem) {\n          return elem === docElem;\n        },\n        \"focus\": function (elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function (elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function (elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function (elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function (elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function (elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument > length ? length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          outermostContext = context === document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0;\n\n            if (!context && elem.ownerDocument !== document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var siblings = function (n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (typeof elem.contentDocument !== \"undefined\") {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    fired,\n        // Flag to prevent firing\n    locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function () {\n      // Enforce single-firing\n      locked = locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function () {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function () {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function (fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function () {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function () {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function () {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function () {\n        locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function () {\n        return !!locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function (context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function () {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function () {\n        return !!fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          state = \"pending\",\n          promise = {\n        state: function () {\n          return state;\n        },\n        always: function () {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function (fn) {\n          return promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function ()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function (onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function (obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      promise.promise(deferred); // Call given func if any\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function (i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function () {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function () {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n\n  var isAttached = function (elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  },\n      composed = {\n    composed: true\n  }; // Check attachment across shadow DOM boundaries when possible (gh-3504)\n\n\n  if (documentElement.attachShadow) {\n    isAttached = function (elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  var swap = function (elem, options, callback, args) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i; // We have to close these tags to support XHTML (#13200)\n\n  var wrapMap = {\n    // Support: IE <=9 only\n    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  }; // Support: IE <=9 only\n\n  wrapMap.optgroup = wrapMap.option;\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        attached,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      attached = isAttached(elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (attached) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n  })();\n\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 - 11+\n  // focus() and blur() are asynchronous, except when they are no-op.\n  // So expect focus to be synchronous when the element is already active,\n  // and blur to be synchronous when the element is not already active.\n  // (focus and blur are always synchronous in other supported browsers,\n  // this just defines when we can count on it).\n\n\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === \"focus\");\n  } // Support: IE <=9 only\n  // Accessing document.activeElement can throw unexpectedly\n  // https://bugs.jquery.com/ticket/13393\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n      if (!elemData) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = {};\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      // Make a writable jQuery.Event from the native event object\n      var event = jQuery.event.fix(nativeEvent);\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          handlers = (dataPriv.get(this, \"events\") || {})[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Claim the first handler\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\") && dataPriv.get(el, \"click\") === undefined) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", returnTrue);\n          } // Return false to allow normal processing in the caller\n\n\n          return false;\n        },\n        trigger: function (data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data; // Force setup before triggering a click\n\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\") && dataPriv.get(el, \"click\") === undefined) {\n            leverageNative(el, \"click\");\n          } // Return non-false to allow normal event-path propagation\n\n\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function (event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  }; // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n\n  function leverageNative(el, type, expectSync) {\n    // Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n    if (!expectSync) {\n      jQuery.event.add(el, type, returnTrue);\n      return;\n    } // Register the controller as a special universal handler for all event namespaces\n\n\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function (event) {\n        var notAsync,\n            result,\n            saved = dataPriv.get(this, type);\n\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          if (!saved) {\n            // Store arguments for use when handling the inner native event\n            saved = slice.call(arguments);\n            dataPriv.set(this, type, saved); // Trigger the native event and capture its result\n            // Support: IE <=9 - 11+\n            // focus() and blur() are asynchronous\n\n            notAsync = expectSync(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = undefined;\n            }\n\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result;\n            } // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering the\n            // native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          } // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n\n        } else if (saved) {\n          // ...and capture the result\n          dataPriv.set(this, type, jQuery.event.trigger( // Support: IE <=9 - 11+\n          // Extend with the prototype to reset the above stopImmediatePropagation()\n          jQuery.extend(saved.shift(), jQuery.Event.prototype), saved, this)); // Abort handling of the native event\n\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function (event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function () {\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, expectSync); // Return false to allow normal processing in the caller\n\n        return false;\n      },\n      trigger: function () {\n        // Force setup before trigger\n        leverageNative(this, type); // Return non-false to allow normal event-path propagation\n\n        return true;\n      },\n      delegateType: delegateType\n    };\n  }); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n  /* eslint-disable max-len */\n  // See https://github.com/eslint/eslint/issues/3229\n  rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n  /* eslint-enable */\n  // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.access(src);\n      pdataCur = dataPriv.set(dest, pdataOld);\n      events = pdataOld.events;\n\n      if (events) {\n        delete pdataCur.handle;\n        pdataCur.events = {};\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = concat.apply([], args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  });\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html.replace(rxhtmlTag, \"<$1></$2>\");\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = isAttached(elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style,\n      vendorProps = {}; // Return a vendor-prefixed property or undefined\n\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n\n\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n\n    if (final) {\n      return final;\n    }\n\n    if (name in emptyStyle) {\n      return name;\n    }\n\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  };\n\n  function setPositiveNumber(elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5 // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n    // Fake content-box until we know it's needed to know the true value.\n    boxSizingNeeded = !support.boxSizingReliable() || extra,\n        isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox,\n        val = curCSS(elem, dimension, styles),\n        offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1); // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    // Support: IE 9-11 only\n    // Also use offsetWidth/offsetHeight for when box sizing is unreliable\n    // We use getClientRects() to check for hidden/disconnected.\n    // In those cases, the computed value can be trusted to be border-box\n\n\n    if ((!support.boxSizingReliable() && isBorderBox || val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") && elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\"; // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n\n      valueIsBorderBox = offsetProp in elem;\n\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n\n\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            // Only read styles.position if the test has a chance to fail\n        // to avoid forcing a reflow.\n        scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n            // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n        boxSizingNeeded = scrollboxSizeBuggy || extra,\n            isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0; // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function () {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function (prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function (gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function () {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue && type !== false) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function (e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || {})[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = Date.now();\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n      jQuery.error(\"Invalid XML: \" + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n\n    if (a == null) {\n      return \"\";\n    } // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function (key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase() + \" \"];\n          }\n\n          return match == null ? null : match.join(\", \");\n        },\n        // Raw string\n        getAllResponseHeaders: function () {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function (name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function (type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function (map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function (statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n\n  jQuery._evalUrl = function (url, options) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function () {}\n      },\n      dataFilter: function (response) {\n        jQuery.globalEval(response, options);\n      }\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          callback = callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  }; // Attach a bunch of functions for handling common AJAX events\n\n\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n  jQuery.fn.extend({\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    }\n  }); // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = slice.call(arguments, 2);\n\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (!noGlobal) {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/core/main.css":
/*!***************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/core/main.css ***!
  \***************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/core/main.css?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/daygrid/main.css":
/*!******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/daygrid/main.css ***!
  \******************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/daygrid/main.css?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/timegrid/main.css":
/*!*******************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/@fullcalendar/timegrid/main.css ***!
  \*******************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/@fullcalendar/timegrid/main.css?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/bulma/css/bulma.css":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./node_modules/bulma/css/bulma.css ***!
  \*******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/bulma/css/bulma.css?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/bulma-overwrite.scss":
/*!******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/bulma-overwrite.scss ***!
  \******************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./static/css/bulma-overwrite.scss?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/calendar.scss":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/calendar.scss ***!
  \***********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./static/css/calendar.scss?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/checkbox.scss":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/checkbox.scss ***!
  \***********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./static/css/checkbox.scss?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/custom.scss":
/*!*********************************************************************************************************************************************************************!*\
  !*** ./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/custom.scss ***!
  \*********************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./static/css/custom.scss?./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (false) {}\n\n\treturn __webpack_require__.nc;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  } // blank or null?\n\n\n  if (!css || typeof css !== \"string\") {\n    return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\"); // convert each url(...)\n\n  /*\n  This regular expression is just a way to recursively match brackets within\n  a string.\n  \t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n     (  = Start a capturing group\n       (?:  = Start a non-capturing group\n           [^)(]  = Match anything that isn't a parentheses\n           |  = OR\n           \\(  = Match a start parentheses\n               (?:  = Start another non-capturing groups\n                   [^)(]+  = Match anything that isn't a parentheses\n                   |  = OR\n                   \\(  = Match a start parentheses\n                       [^)(]*  = Match anything that isn't a parentheses\n                   \\)  = Match a end parentheses\n               )  = End Group\n               *\\) = Match anything and then a close parens\n           )  = Close non-capturing group\n           *  = Match anything\n        )  = Close capturing group\n   \\)  = Match a close parens\n  \t /gi  = Get all matches, not the first.  Be case insensitive.\n   */\n\n  var fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (fullMatch, origUrl) {\n    // strip quotes (if they exist)\n    var unquotedOrigUrl = origUrl.trim().replace(/^\"(.*)\"$/, function (o, $1) {\n      return $1;\n    }).replace(/^'(.*)'$/, function (o, $1) {\n      return $1;\n    }); // already a full url? no change\n\n    if (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n      return fullMatch;\n    } // convert the url to a full url\n\n\n    var newUrl;\n\n    if (unquotedOrigUrl.indexOf(\"//\") === 0) {\n      //TODO: should we add protocol?\n      newUrl = unquotedOrigUrl;\n    } else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n      // path should be relative to the base url\n      newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n    } else {\n      // path should be relative to current directory\n      newUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n    } // send back the fixed url(...)\n\n\n    return \"url(\" + JSON.stringify(newUrl) + \")\";\n  }); // send back the fixed css\n\n  return fixedCss;\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./static/css/bulma-overwrite.scss":
/*!*****************************************!*\
  !*** ./static/css/bulma-overwrite.scss ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./bulma-overwrite.scss */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/bulma-overwrite.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./static/css/bulma-overwrite.scss?");

/***/ }),

/***/ "./static/css/calendar.scss":
/*!**********************************!*\
  !*** ./static/css/calendar.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./calendar.scss */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/calendar.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./static/css/calendar.scss?");

/***/ }),

/***/ "./static/css/checkbox.scss":
/*!**********************************!*\
  !*** ./static/css/checkbox.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./checkbox.scss */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/checkbox.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./static/css/checkbox.scss?");

/***/ }),

/***/ "./static/css/custom.scss":
/*!********************************!*\
  !*** ./static/css/custom.scss ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/lib/loader.js!./custom.scss */ \"./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/lib/loader.js!./static/css/custom.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./static/css/custom.scss?");

/***/ }),

/***/ "./static/index.js":
/*!*************************!*\
  !*** ./static/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_bulma_css_bulma_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/bulma/css/bulma.css */ \"./node_modules/bulma/css/bulma.css\");\n/* harmony import */ var _node_modules_bulma_css_bulma_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_bulma_css_bulma_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_fullcalendar_core_main_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/@fullcalendar/core/main.css */ \"./node_modules/@fullcalendar/core/main.css\");\n/* harmony import */ var _node_modules_fullcalendar_core_main_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_fullcalendar_core_main_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_fullcalendar_daygrid_main_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/@fullcalendar/daygrid/main.css */ \"./node_modules/@fullcalendar/daygrid/main.css\");\n/* harmony import */ var _node_modules_fullcalendar_daygrid_main_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_fullcalendar_daygrid_main_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_fullcalendar_timegrid_main_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../node_modules/@fullcalendar/timegrid/main.css */ \"./node_modules/@fullcalendar/timegrid/main.css\");\n/* harmony import */ var _node_modules_fullcalendar_timegrid_main_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_fullcalendar_timegrid_main_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _css_calendar_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css/calendar.scss */ \"./static/css/calendar.scss\");\n/* harmony import */ var _css_calendar_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_css_calendar_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _css_checkbox_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./css/checkbox.scss */ \"./static/css/checkbox.scss\");\n/* harmony import */ var _css_checkbox_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_css_checkbox_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _css_bulma_overwrite_scss__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./css/bulma-overwrite.scss */ \"./static/css/bulma-overwrite.scss\");\n/* harmony import */ var _css_bulma_overwrite_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_css_bulma_overwrite_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _css_custom_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./css/custom.scss */ \"./static/css/custom.scss\");\n/* harmony import */ var _css_custom_scss__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_css_custom_scss__WEBPACK_IMPORTED_MODULE_7__);\n// javascript partials\r\n__webpack_require__(/*! ./js/calendar.js */ \"./static/js/calendar.js\")\r\n__webpack_require__(/*! ./js/form.js */ \"./static/js/form.js\")\r\n__webpack_require__(/*! ./js/add-event.js */ \"./static/js/add-event.js\")\r\n__webpack_require__(/*! ./js/tabs.js */ \"./static/js/tabs.js\")\r\n\r\n// bulma css framework\r\n\r\n\r\n// css for calendar\r\n\r\n\r\n\r\n\r\n// custom css\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./static/index.js?");

/***/ }),

/***/ "./static/js/add-event.js":
/*!********************************!*\
  !*** ./static/js/add-event.js ***!
  \********************************/
/*! exports provided: addEventToCalendar, addEventsToCalendar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addEventToCalendar\", function() { return addEventToCalendar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addEventsToCalendar\", function() { return addEventsToCalendar; });\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./calendar */ \"./static/js/calendar.js\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/core */ \"./node_modules/@fullcalendar/core/main.js\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\r\n\r\nfunction addEventToCalendar(event_dict) {\r\n    Object(_calendar__WEBPACK_IMPORTED_MODULE_0__[\"getCalendar\"])().addEvent(event_dict);\r\n}\r\n\r\nfunction addEventsToCalendar(solve_api) {\r\n    $(solve_api['data']['result']).each(function(i, course_to_class) {\r\n        $(course_to_class['class']['meetings']).each(function(j, meeting) {\r\n            var event_dict = {}\r\n            \r\n            event_dict['title'] = course_to_class['course']['course_name'] + '\\n' + meeting['class_room']\r\n            event_dict['daysOfWeek'] = dayStringToArrayOfInt(meeting['day'])\r\n            \r\n            var [hour, minute] = meeting['start_time'].split(\".\")\r\n            event_dict['startTime'] = `${hour}:${minute}:00`\r\n            var [hour, minute] = meeting['end_time'].split(\".\")\r\n            event_dict['endTime'] = `${hour}:${minute}:00`\r\n\r\n            addEventToCalendar(event_dict)\r\n        })\r\n    })\r\n}\r\n\r\nfunction dayStringToArrayOfInt(dayString) {\r\n    var result;\r\n    switch (dayString) {\r\n        case \"Monday\":\r\n        result = [1]\r\n        break;\r\n        case \"Tuesday\":\r\n        result = [2]\r\n        break;\r\n        case \"Wednesday\":\r\n        result = [3]\r\n        break;\r\n        case \"Thursday\":\r\n        result = [4]\r\n        break;\r\n        case \"Friday\":\r\n        result = [5]\r\n        break;\r\n        case \"Saturday\":\r\n        result = [6]\r\n        break;\r\n    }\r\n    return result;\r\n}\n\n//# sourceURL=webpack:///./static/js/add-event.js?");

/***/ }),

/***/ "./static/js/calendar.js":
/*!*******************************!*\
  !*** ./static/js/calendar.js ***!
  \*******************************/
/*! exports provided: getCalendar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCalendar\", function() { return getCalendar; });\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @fullcalendar/core */ \"./node_modules/@fullcalendar/core/main.js\");\n/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fullcalendar/timegrid */ \"./node_modules/@fullcalendar/timegrid/main.js\");\n/* harmony import */ var _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_1__);\n\r\n\r\n\r\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")\r\n\r\nvar calendar;\r\n\r\n$(document).ready(function() {\r\n  var calendarEl = document.getElementById('calendar');\r\n\r\n  calendar = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_0__[\"Calendar\"](calendarEl, {\r\n    plugins: [ _fullcalendar_timegrid__WEBPACK_IMPORTED_MODULE_1___default.a ],\r\n    defaultView: 'timeGridWeek',\r\n    allDaySlot: false,\r\n    slotDuration: '00:30:00', // each time row is 30 min\r\n    minTime: '08:00:00', // start from 8.00\r\n    maxTime: '18:00:00', // end in 18.00\r\n    height: 'auto',\r\n    nowIndicator: false,\r\n    header: { // display empty header\r\n      left: '',\r\n      center: '',\r\n      right: ''\r\n    },\r\n    slotLabelFormat: { // format time as HH:MM\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      hour12: false\r\n    },\r\n    columnHeaderFormat: { // display Monday, .. as column header\r\n      weekday: 'long' \r\n    },\r\n    hiddenDays: [ 0 ], // hide sunday\r\n    firstDay: 1 // show monday first\r\n  });\r\n\r\n  calendar.render();\r\n});\r\n\r\n// get calendar variable, used in other js files\r\nfunction getCalendar(){\r\n  return calendar;\r\n}\n\n//# sourceURL=webpack:///./static/js/calendar.js?");

/***/ }),

/***/ "./static/js/form.js":
/*!***************************!*\
  !*** ./static/js/form.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _add_event__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-event */ \"./static/js/add-event.js\");\n/* harmony import */ var _calendar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar */ \"./static/js/calendar.js\");\n\r\n\r\n\r\nvar $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\r\n\r\n$(document).ready(function() {\r\n  var selectedCourseCount = 0;\r\n\r\n  $(\"form#course-form label\").click(function() {\r\n    var clickedCourseCode = $(this).attr('for');\r\n    var associatedInput = $(\"form#course-form\").find(`input[data-course-code=${clickedCourseCode}]`);\r\n    associatedInput.prop('checked', !associatedInput.prop('checked')).each(function(i, obj) {\r\n      $(obj).change();\r\n    });\r\n  })\r\n\r\n  $(\".modal button[aria-label='close']\").click(function() {\r\n    $(\".modal\").removeClass(\"is-active\")\r\n  })\r\n\r\n  $('#unselect-all').click(function() {\r\n    $(\"input:checkbox\").prop('checked', false);\r\n    $(\".selected-courses\").text('');\r\n    selectedCourseCount = 0\r\n    $('#selected-course-count').text(selectedCourseCount);\r\n  })\r\n\r\n  $(\"input:checkbox\").change(function() {\r\n    var courseName = $(this).attr(\"data-course-name\")\r\n    if($(this).prop('checked') && $(`.selected-courses:contains(${courseName})`).length==0 ) {\r\n      updateSelectedCourseCountCounter(true)\r\n      $(\".selected-courses\").prepend(`<div class=\"card padding-small\">${courseName}</div>`)\r\n    } else if (!$(this).prop('checked')) {\r\n      updateSelectedCourseCountCounter(false)\r\n      $(\".selected-courses\").find(`div:contains(${courseName})`).eq(0).remove()\r\n    }\r\n  })\r\n\r\n  function updateSelectedCourseCountCounter(increment = true) {\r\n    if (increment)\r\n      selectedCourseCount++;\r\n    else if (!increment && selectedCourseCount >= 1)\r\n      selectedCourseCount--;\r\n    $('#selected-course-count').text(selectedCourseCount);\r\n  }\r\n\r\n  $('form#course-form').on(\"submit\", function(event) {\r\n    event.preventDefault();\r\n    $(\"html, body\").animate({ scrollTop: 0 }, \"slow\");\r\n    Object(_calendar__WEBPACK_IMPORTED_MODULE_1__[\"getCalendar\"])().removeAllEvents();\r\n    clearSelectedClass();\r\n\r\n    var data = $(this).serializeArray().reduce(function(obj, item) {\r\n      if (item.name === 'check') {\r\n        if (!(item.name in obj)) {\r\n          obj[item.name] = [item.value]\r\n        } else {\r\n          obj[item.name].push(item.value)\r\n        }\r\n      } else { \r\n        obj[item.name] = item.value\r\n      }\r\n      return obj\r\n    }, {});\r\n\r\n    const submitButton = $('button#course-form-submit');\r\n    submitButton.prop('disabled', true);\r\n\r\n    $.ajax({\r\n      url: \"solve/\",\r\n      type: \"POST\",\r\n      contentType: \"application/json; charset=utf-8\",\r\n      data: JSON.stringify(data),\r\n      beforeSend: function(xhr, settings) {\r\n        if (!csrfSafeMethod(settings.type) && !this.crossDomain) {\r\n          xhr.setRequestHeader(\"X-CSRFToken\", data.csrfmiddlewaretoken)\r\n        }\r\n      },\r\n      success: function(result){\r\n        if (!result.data.solution_found) {\r\n          $('.modal#fail').addClass('is-active')\r\n          return\r\n        }\r\n        $('.modal#success').addClass('is-active')\r\n        Object(_add_event__WEBPACK_IMPORTED_MODULE_0__[\"addEventsToCalendar\"])(result)\r\n        var contentAdded = '';\r\n        var i, courseInfo, classInfo;\r\n        for (var i in result.data.result) {\r\n          courseInfo = result.data.result[i].course.course_name\r\n          classInfo = result.data.result[i].class.name\r\n          contentAdded += \r\n          `<div class=\"card\">\r\n            <div class=\"card-content padding-small\">\r\n              <strong>${courseInfo}</strong><br>\r\n              ${classInfo}\r\n            </div>\r\n          </div>`\r\n        }\r\n\r\n        $(\".selected-classes\").html(contentAdded)\r\n      },\r\n      fail: function(xhr, ajaxOptions, thrownError){\r\n        console.log(xhr.status);\r\n        console.log(xhr.responseText);\r\n        console.log(thrownError);\r\n      },\r\n      complete: function(response) {\r\n        setTimeout(function() {\r\n          submitButton.prop('disabled', false);\r\n        }, 200);\r\n      }\r\n    });\r\n  })\r\n\r\n  function csrfSafeMethod(method) {\r\n    // these HTTP methods do not require CSRF protection\r\n    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));\r\n  }\r\n});\r\n\r\nfunction clearSelectedClass() {\r\n  $(\".selected-classes\").html('')\r\n}\n\n//# sourceURL=webpack:///./static/js/form.js?");

/***/ }),

/***/ "./static/js/tabs.js":
/*!***************************!*\
  !*** ./static/js/tabs.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var $ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\r\n\r\n$(document).ready(function() {\r\n    const tabMenu = $('.tabs ul li');\r\n    const tabSelections = $(\".tabs-content .tab-selection\");\r\n\r\n    resetTabs()\r\n    showTab(0)\r\n\r\n    tabMenu.click(function() {\r\n        if ($(this).hasClass(\"is-active\")) {\r\n            return\r\n        }\r\n        resetTabs()\r\n        var tabMenuIndexClicked = tabMenu.index($(this));\r\n        showTab(tabMenuIndexClicked)\r\n    })\r\n\r\n    function resetTabs() {\r\n        tabSelections.css(\"display\", \"none\")\r\n        tabMenu.removeClass('is-active')\r\n    }\r\n\r\n    function showTab(index) {\r\n        tabMenu.eq(index).addClass(\"is-active\")\r\n        tabSelections.eq(index).css(\"display\", \"block\");\r\n    }\r\n})\n\n//# sourceURL=webpack:///./static/js/tabs.js?");

/***/ })

/******/ });